--
-- t34andxor.exw
--
-- Phix tests:	primitive and, or, xor functioning
--		    Also <,<=,>=,> tests???
--
-- what I was going to test here is now done fully in seqop.exw.
--

procedure Abort(string msg) puts(1,msg) if getc(0) then end if abort(1) end procedure

constant c0=0, c1=1
--integer i0=0
integer i0 i0=0
function f2()
    return 2
end function
    if 1 > 2 then Abort("1 > 2!") end if
    if 1 > f2() then Abort("1 > f2()!") end if
    if 0 or 0 then Abort("0 or 0 is true") end if
    if c0 or c0 then Abort("c0 or c0 is true") end if
    if i0 or i0 then Abort("i0 or i0 is true") end if
    if i0!=0 or i0 then Abort("i0 or i0 is true") end if
    if c0 then Abort("c0 is true") end if
    if c1 and c1 then else Abort("(not c1 and c1) is true") end if
    if 1<=0 then Abort("1<=0\n") end if
--integer fm=5, rm=2
integer fm, rm fm=5 rm=2
if rm and and_bits(fm,rm)=0 then
else Abort("error\n") end if
--  puts(1,"Done")
--  if getc(0) then end if
integer a,b,c
    a=#900 b=#100
    c=xor_bits(a,b)
    if c!=#800 then Abort("xor_bits(#900,#100)!=#800") end if

