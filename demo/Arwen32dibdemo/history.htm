<html>
<head><title>Win32Dib version history</title>
<style>
	body { font-family: Arial, sans-serif; }
	a { color: #900; text-decoration: none; }
	a:hover { color: #F00; text-decoration: underline; }
</style>
</head>
<body>
<h1>Win32Dib version history</h1>
<h2>Win32Dib 0.5.3, 17-November-2005</h2>
<ul>
<li>fixed a bug in <b>drawDibToDib</b> that caused a column of pixels to be cut off (thanks to Damien Black for reporting).
</ul>
<h2>Win32Dib 0.5.2, 20-August-2005</h2>
<ul>
<li>fixed a bug in <b>scaleDib</b> that caused a GDI- and memory-leak (thanks to OtterDad for reporting).
</ul>
<h2>Win32Dib 0.5.1, 22-July-2004</h2>
<ul>
<li>added a new routine: <b>saveDibReduced</b>, which saves the bitmap as an 8-bit BMP-file (uses websafe colors).
<li>Win32Dib now requires Win32Lib version <b>0.60</b>.
<li>the <b>finalizeDib</b>-routine is now automatically called: you no longer need to call it yourself.
</ul>
<h2>Win32Dib 0.5.0, 19-May-2004</h2>
<ul>
<li>the library has been split up in several files. This way, you can choose to only use the routines you need.
<li>added a new routine: <b>drawShadedPolygonToDib</b>, which draws a shaded polygon on a bitmap.
<li>new demo program: <i>shadepol.exw</i> (draws shaded polygon to bitmap).
<li>the demos have been changed to only include the necessary libraries.
</ul>
<h2>Win32Dib 0.4.3, 16-May-2004</h2>
<ul>
<li>fixed a bug in <b>saveDib</b> (thanks to Alon Bar-noy).
<li>fixed some bugs in the demos (thanks to CoJaBo).
</ul>
<h2>Win32Dib 0.4.2, 5-May-2004</h2>
<ul>
<li>fixed a bug in <b>drawDibTransformedPolygon</b> and optimized it. If no clipping is necessary in both source and destination (automatically detected), the new version is about 50% faster than the old version.
<li>optimized some of the routines a little.
<li>the documentation is now in HTML. <i><a href="win32dib.htm">win32dib.htm</a></i> now has a section about optimization: it tells you about the internal optimizations, and how you can use them to make your programs faster.
<li>new demo program: <i>feedback.exw</i> (moves 2 translucent bitmaps across the window)
</ul>

<h2>Win32Dib 0.4.1, 11-April-2004</h2>
<ul>
<li>removed routine <b>drawTransDibToDib</b>, and moved its functionality to <b>drawDibToDib</b>. Modified drawDibToDib: all the inner-loops have been replaced by machine-code, which makes the routine more than 10 times as fast.
<li>modified <b>tileDibToDib</b>: added transparency- and translucency-support.
<li>optimized the filter-routines: reduced the number of additions and multiplications per pixel for filters with a lot of zeros in the matrix.
<li>added 2 new routines: <b>subtleBlurDib</b> and <b>subtleSharpenDib</b>. These routines do the same as <b>blurDib</b> and <b>sharpenDib</b>, but are faster and more subtle (blurDib blurs more, sharpenDib sharpens more).
<li>modified demo programs <i>tiledib.exw</i> and <i>polydib.exw</i>: removed the Timer-mechanism and added a FPS-counter (frames per second).
</ul>
<h2>Win32Dib 0.4.0, 10-April-2004</h2>
<ul>
<li>new routine: <b>applyDibBrightnessToDib</b> (applies the brightness of a bitmap to another bitmap).
<li>added a translucency-argument to <b>drawDibToDib</b> and <b>drawTransDibToDib</b> (alpha = 0: totally transparent, alpha = 255: totally opaque).
<li>modified demo program: <i>tiledib.exw</i> now draws the image at the bottom right translucent.
</ul>
<h2>Win32Dib 0.3.6, 7-April-2004</h2>
<ul>
<li>new routine: <b>saveDibGray</b> (saves 8-bit grayscale bitmap).
<li>fixed a little bug in <b>saveDib</b>.
</ul>
<h2>Win32Dib 0.3.5, 23-March-2004</h2>
<ul>
<li>new routines: <b>copyDibToClipboard</b> and <b>getDibFromClipboard</b> (copy bitmaps from and to the clipboard) and <b>drawDibTransformedPolygon</b> (thanks to Jiri Babor).
<li>new demo program: <i>polydib.exw</i> (maps a bitmap to a polygon).
</ul>
<h2>Win32Dib 0.3.4, 17-March-2004</h2>
<ul>
<li>optimized the <b>rotateDibFree</b>-function for the special cases where angle is -270, -180, -90, 90, 180 or 270 degrees (now calls the much faster <b>rotateDib</b>-function for those cases).
<li>optimized some routines by reducing unnecessary clipping inside loops.
<li>fixed a nasty little bug in <b>killDib</b>, that crashed in Euphoria 2.3 but not in Euphoria 2.4 (thanks to Renzo Beggia for detecting and Robert Craig for helping to fix it).
</ul>
<h2>Win32Dib 0.3.3, 12-March-2004</h2>
<ul>
<li>new routines: <b>rotateDibFree</b> (free angle rotation of a bitmap), <b>embossDib</b> (embosses a bitmap), <b>tileDibToDib</b> (tiles a bitmap onto another bitmap) and <b>drawTransDibToDib</b> (draw a bitmap with a transparent color).
<li>added some example code to the documentation (win32dib.txt) and changed the structure of certain sections a bit.
<li>fixed a bug in <b>clearDib</b> and in <b>copyDibToDib</b>.
<li>made <b>drawDibToDib</b> about 3 times as fast: the old version just called bitBlt, the new version is entirely written in Euphoria, clips the coordinates and is still about 3 times as fast as the compiled bitBlt!
<li>made some other optimizations, like replacing all <i>poke(dest, peek({src, 3}))</i> with <i>mem_copy(dest, src, 3)</i>, which is almost 3 times as fast.
<li>new demo programs: <i>scaledib.exw</i> (demonstrates the scaling of bitmaps) and <i>tiledib.exw</i> (demonstrates the tiling of bitmaps and transparent drawing).
</ul>
<h2>Win32Dib 0.3.2, 11-March-2004</h2>
<ul>
<li>fixed a nasty bug that occured when the width of the bitmap couldn't be divided by 4.
</ul>
<h2>Win32Dib 0.3.1, 10-March-2004</h2>
<ul>
<li>new routines: <b>scaleDib</b>, <b>scaleDibPct</b> (scale a bitmap to a new size), and <b>rotateDib</b> (rotates a bitmap).
<li>fixed error in documentation (thanks to Renzo Beggia).
<li>fixed bug, caused by 32-bit alignment of bitmap scanlines, in some of the routines.
</ul>
<h2>Win32Dib 0.3.0, 8-March-2004</h2>
<ul>
<li>new routines: <b>drawDibToDib</b> (draws part of a bitmap on another bitmap), <b>extractDib</b> (extracts a bitmap from another bitmap or control) and <b>copyDib</b> (returns a copy of a bitmap).
<li>new demo program: <i>manip.exw</i> (demonstrates some of the manipulation routines from Win32Dib).
<li>optimized <b>clearDib</b> a bit.
<li>fixed little bug in <b>filterDib3x3</b>.
</ul>
<h2>Win32Dib 0.2.3, 6-March-2004</h2>
<ul>
<li>new routines: <b>filterDib3x3</b> and <b>filterDibGray3x3</b>, which use a 3x3 matrix instead of 7x7. These routines are 3 to 4 times faster than <b>filterDib</b> and <b>filterDibGray</b>.
<li><b>detectDibEdges</b>, <b>sharpenDib</b> and <b>blurDib</b> now use the 3x3 filter-routines, which makes them 3 to 4 times faster.
</ul>
<h2>Win32Dib 0.2.2, 26-February-2004</h2>
<ul>
<li>new routines: <b>filterDib</b> and <b>filterDibGray</b>, which filter the bitmap via a matrix (filterDibGray first makes the bitmap gray and is more than twice as fast as filterDib).
<li>new routines using filterDib and filterDibGray: <b>detectDibEdges</b>, <b>sharpenDib</b>, <b>blurDib</b>.
</ul>
<h2>Win32Dib 0.2.1, 25-February-2004</h2>
<ul>
<li><b>putDibPixel</b> and <b>getDibPixel</b> have been optimized a little.
<li><b>makeDibGray</b> has been optimized and now runs about 37% faster.
<li><b>colorizeDib</b> has been optimized and now runs about 28% faster.
</ul>
<h2>Win32Dib 0.2.0, 11-January-2004</h2>
<ul>
<li>the bitmap-sequence now contains extra information: dib[DibBytesPerLine] = the amount of bytes per line, dib[DibBytesTotal] = the total amount of bytes
<li>some small optimizations have been done, using the extra information DibBytesPerLine and DibBytesTotal.
<li>the procedure <b>makeDibGray</b> has been modified: The previous version calculated gray as <i>floor((red + green + blue)/3)</i>. When making a bitmap gray, the brightness of the colors should remain the same. The new version calculates gray as <i>floor(red*0.299 + green*0.587 + blue*0.114)</i> which produces a better gray bitmap.
<li>2 new pixel-routines have been added: <b>fastPutDibPixel</b> is a much faster version of <b>putDibPixel</b>. <b>fastGetDibPixel</b> is a much faster version of <b>getDibPixel</b>. These 2 routines are faster than the original routine, because they don't check if the coordinates are within the boundaries of the bitmap. Only use these faster routines if you're sure that the coordinates of the pixel are valid coordinates (0 &lt;= x &lt; width, 0 &lt;= y &lt; height).
<li>Some new bitmap manipulation-procedures have been added: <b>replaceDibColor</b>: replaces 1 color in the bitmap with another. <b>replaceDibColors</b>: replaces multiple colors in the bitmap. <b>adjustDibColors</b>: adjusts the colors of the bitmap. <b>colorizeDib</b>: replace the colors of the bitmap with 1 color (brightness doesn't change). <b>adjustDibBrightness</b>: adjusts the brightness of the bitmap. <b>adjustDibContrast</b>: adjusts the contrast of the bitmap. <b>adjustDibBrightnessAndContrast</b>: adjusts the brightness and the contrast of the bitmap.
</ul>
<h2>Win32Dib 0.1.0, 10-January-2004: First release</h2>
</body>
</html>