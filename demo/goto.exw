-- goto.exw: usage exw goto.exw <file>
--  counts the number of "goto" in <file>
--  if no parameter is passed it will count the gotos in this source.
--  excessive use of goto can make a program completely unreadable! ;-)
--/**/ with console
without warning -- (several goto "assumed to be a variable-id, not a type")
type
goto(object
goto) return
goto=
goto end type
goto
goto_
goto
goto__
constant
goto___=`
goto` procedure
goto____(
goto
goto)
goto_+=
goto+(
goto!=
goto)
goto__=(
goto=(
goto!=
goto))*
goto__+(
goto!=(
goto!=
goto))*
goto end procedure procedure
goto_____(
goto
goto) 
goto__=
goto__*
goto+(
goto=
goto)*(
goto=
goto)*(
goto=
goto)*(
goto=
goto)
goto____(
goto__=
goto*((
goto=
goto)+(
goto=
goto)+(
goto=
goto)+(
goto=
goto)+(
goto=
goto))) end procedure function
goto_______(
goto
goto)
goto_____(
goto=
goto___[
goto__]) return 
goto!=(
goto!=
goto)-(
goto=
goto) end function procedure
goto______(
goto
goto)
goto__=
goto!=
goto=
goto
goto_=
goto=
goto-
goto while
goto_______(getc(
goto)) do end while close(
goto) printf(
goto=
goto,"%d %s \'s\n",{
goto_,
goto___}) end procedure procedure
goto________(
goto
goto)?
goto
goto______(open(
goto[length(
goto)],"r")) end procedure
goto________(command_line())
goto_=getc(
goto_-
goto_)

