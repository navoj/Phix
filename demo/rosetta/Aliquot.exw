--
-- demo\rosetta\Aliquot.exw
-- ========================
--
--  An aliquot sequence of a positive integer K is defined recursively as the first member being K 
--  and subsequent members being the sum of the Proper divisors of the previous term.
--  If the terms eventually reach 0 then the series for K is said to terminate. 
--
--  There are several classifications for non termination:
--  If the second term is K then all future terms are also K and so the sequence repeats from the first term with period 1 and K is called perfect. 
--  If the third term would be repeating K then the sequence repeats with period 2 and K is called amicable. 
--  If the N'th term would be repeating K for the first time, with N > 3 then the sequence repeats with period N - 1 and K is called sociable. 
--
--  Perfect, amicable and sociable numbers eventually repeat the original number K; there are other repetitions...
--  Some K have a sequence that eventually forms a periodic repetition of period 1 but of a number other than K, 
--  for example 95 which forms the sequence 95, 25, 6, 6, 6, ... such K are called aspiring. 
--  K that have a sequence that eventually forms a periodic repetition of period >= 2 but of a number other than K, 
--  for example 562 which forms the sequence 562, 284, 220, 284, 220, ... such K are called cyclic. 
--
--  And finally:
--  Some K form aliquot sequences that are not known to be either terminating or periodic. these K are to be called non-terminating. 
--  For the purposes of this task, K is to be classed as non-terminating if it has not been otherwise classed after generating 16 terms 
--  or if any term of the sequence is greater than 2**47 = 140737488355328. 
--
--  Task
--  Create routine(s) to generate the aliquot sequence of a positive integer enough to classify it according to the classifications given above. 
--  Use it to display the classification and sequences of the numbers one to ten inclusive. 
--  Use it to show the classification and sequences of the following integers, in order: 
--  11, 12, 28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488, and optionally 15355717786080.
--
--  Show all output on this page.
--

function aliquot(atom n)
sequence s = {n}
integer k
    if n=0 then                             return {"terminating",{0}} end if
    while length(s)<16 
      and n<140737488355328 do
        n = sum(factors(n,-1))
        k = find(n,s)
        if k then
            if k=1 then
                if length(s)=1 then         return {"perfect",s}
                elsif length(s)=2 then      return {"amicable",s}
                end if                      return {"sociable",s}
            elsif k=length(s) then          return {"aspiring",s}
            end if                          return {"cyclic",append(s,n)}
        elsif n=0 then                      return {"terminating",s}
        end if
        s = append(s,n)
    end while
                                            return {"non-terminating",s}
end function

function flat_d(sequence s)
    for i=1 to length(s) do s[i] = sprintf("%d",s[i]) end for
    return join(s,",")
end function

constant n = tagset(12)&{28, 496, 220, 1184, 12496, 1264460, 790, 909, 562, 1064, 1488, 15355717786080}
sequence class, dseq
for i=1 to length(n) do
    {class, dseq} = aliquot(n[i])
    printf(1,"%14d => %15s, {%s}\n",{n[i],class,flat_d(dseq)})
end for
{} = wait_key()

--/*
             1 =>     terminating, {1}
             2 =>     terminating, {2,1}
             3 =>     terminating, {3,1}
             4 =>     terminating, {4,3,1}
             5 =>     terminating, {5,1}
             6 =>         perfect, {6}
             7 =>     terminating, {7,1}
             8 =>     terminating, {8,7,1}
             9 =>     terminating, {9,4,3,1}
            10 =>     terminating, {10,8,7,1}
            11 =>     terminating, {11,1}
            12 =>     terminating, {12,16,15,9,4,3,1}
            28 =>         perfect, {28}
           496 =>         perfect, {496}
           220 =>        amicable, {220,284}
          1184 =>        amicable, {1184,1210}
         12496 =>        sociable, {12496,14288,15472,14536,14264}
       1264460 =>        sociable, {1264460,1547860,1727636,1305184}
           790 =>        aspiring, {790,650,652,496}
           909 =>        aspiring, {909,417,143,25,6}
           562 =>          cyclic, {562,284,220,284}
          1064 =>          cyclic, {1064,1336,1184,1210,1184}
          1488 => non-terminating, {1488,2480,3472,4464,8432,9424,10416,21328,22320,55056,95728,96720,236592,459792,881392,882384}
15355717786080 => non-terminating, {15355717786080,44534663601120,144940087464480}
--*/
