--
-- demo\rosetta\gcd.exw
-- =====================
--
--  Nice and simple, and besides, more complicated ways seemed to be slower anyway.
--

function gcd(atom u, atom v)
-- result is always a positive integer (that might still need storing in an atom), except for gcd(0,0) which is 0
-- atom parameters allow greater precision, but any fractional parts are immediately and deliberately discarded.
atom t
    u = floor(abs(u))
    v = floor(abs(v))
    while v do
        t = u
        u = v
        v = remainder(t, v)
    end while
    return u
end function

--/* Sample results
gcd(0,0)            -- 0
gcd(24,-112)        -- 8
gcd(0, 10)          -- 10
gcd(10, 0)          -- 10
gcd(-10, 0)         -- 10
gcd(0, -10)         -- 10
gcd(9, 6)           -- 3
gcd(6, 9)           -- 3
gcd(-6, 9)          -- 3
gcd(9, -6)          -- 3
gcd(6, -9)          -- 3
gcd(-9, 6)          -- 3
gcd(40902, 24140)   -- 34   
gcd(70000000000000000000, 60000000000000000000000)  -- 10000000000000000000
--*/

function gcds(sequence s)
atom r = floor(abs(s[1]))
    for i=2 to length(s) do
        r = gcd(r,s[i])
    end for
    return r
end function
 
if gcds({57,0,-45,-18,90,447})!=3 then ?9/0 end if

--{} = wait_key()
--abort(0)

