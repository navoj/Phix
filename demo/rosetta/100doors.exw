--
-- demo\rosetta\100doors.exw
-- =========================
--
-- Problem: You have 100 doors in a row that are all initially closed. You make 100 passes by the doors. 
--  The first time through, you visit every door and toggle the door (if the door is closed, you open it; 
--  if it is open, you close it). The second time you only visit every 2nd door (door #2, #4, #6, ...). 
--  The third time, every 3rd door (door #3, #6, #9, ...), etc, until you only visit the 100th door. 
-- Question: What state are the doors in after the last pass? Which are open, which are closed? [1] 
--  Alternate: As noted in this page's discussion page, the only doors that remain open are whose numbers 
--  are perfect squares of integers. Opening only those doors is an optimization that may also be expressed.
--

function doors(integer n)
-- returns the perfect squares<=n
integer door = 1, step = 1
sequence res = {}
    while door<=n do
        res &= door
        step += 2
        door += step
    end while
    return res
end function

-- ?doors(100)
    if doors(100)!={1,4,9,16,25,36,49,64,81,100} then ?9/0 end if

