--
-- demo\rosetta\Perfect_numbers.exw
-- ======================================
--
-- Author Pete Lomax, August 2015
--

function is_perfect(integer n)
    return sum(factors(n,-1))=n
end function

for i=2 to 100000 do
    if is_perfect(i) then ?i end if
end for
--6
--28
--496
--8128

--/*
function is_prime(atom n)
    if n<2 then return false end if
    for i=2 to floor(sqrt(n)) do
        if mod(n,i)=0 then return 0 end if
    end for
    return 1
end function

atom n
--for i=2 to 4500 do
for i=2 to 59 do    -- overflows above this...
    n = power(2,i)-1
    if is_prime(n) then
        printf(1,"%d\t%d\n",{i,n*power(2,i-1)})
    end if
end for
--*/
--/*
include bigatom.e

{} = ba_scale(10)   -- slight help(?)

function is_prime(bigatom n)
bigatom i = ba_new(2)
bigatom sqrtn = ba_floor(ba_sqrt(n))
    while ba_compare(i,sqrtn)<=0 do
        if ba_remainder(n,i)=0 then return 0 end if
        i = ba_add(i,1)
    end while
    return 1
end function

bigatom n
--for i=2 to 4500 do    -- NO!!
for i=2 to 59 do
    n = ba_sub(ba_power(2,i),1)
    if is_prime(n) then
        printf(1,"%d\t%s\n",{i,ba_sprint(ba_multiply(n,ba_power(2,i-1)))})
    end if
end for
--*/

