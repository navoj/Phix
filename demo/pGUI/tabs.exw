--
-- tabs.exw
-- ========
--
--   Creates an IupTabs control.
--

include pGUI.e

function esc_close(Ihandle /*ih*/, atom c)
-- (I like all my demos to close when escape is keyed)
    return iff(c=K_ESC?IUP_CLOSE:IUP_CONTINUE)
end function

    IupOpen()

    Ihandle vboxA = IupVbox({IupLabel("Inside Tab A"), IupButton("Button A")})
    Ihandle vboxB = IupVbox({IupLabel("Inside Tab B"), IupButton("Button B")})

    IupSetAttribute(vboxA, "TABTITLE", "Tab A")
    IupSetAttribute(vboxB, "TABTITLE", "Tab B")

    Ihandle tabs1 = IupTabs({vboxA, vboxB})
    IupSetAttribute(tabs1, "SIZE", "80x80")

    Ihandle vboxC = IupVbox({IupLabel("Inside Tab C"), IupButton("Button C")})
    Ihandle vboxD = IupVbox({IupLabel("Inside Tab D"), IupButton("Button D")})

    IupSetAttribute(vboxC, "TABTITLE", "Tab C")
    IupSetAttribute(vboxD, "TABTITLE", "Tab D")

    Ihandle tabs2 = IupTabs({vboxC, vboxD})
    IupSetAttribute(tabs2, "TABTYPE", "LEFT")

    Ihandle hbox = IupHbox({tabs1, tabs2})
    IupSetAttribute(hbox, "MARGIN", "10x10")
    IupSetAttribute(hbox, "GAP", "10")

    Ihandle dlg = IupDialog(hbox)
    IupSetAttribute(dlg, "TITLE", "IupTabs")
    IupSetAttribute(dlg, "SIZE", "200x120")
    IupSetCallback(dlg, "K_ANY", Icallback("esc_close"));

    IupShowXY(dlg, IUP_CENTER, IUP_CENTER)
Ihandle ih = IupLayoutDialog(dlg)
IupShow(ih)

    IupMainLoop()
    IupClose()


