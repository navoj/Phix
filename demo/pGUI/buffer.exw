--
-- buffer.exw
--
--  translation of https://github.com/LuaDist/iup/blob/master/test/cd/canvas_cddbuffer.c
--  alternate link https://sourceforge.net/p/iup/iup/766/tree/tags/iup_3_2/iup/test/canvas_cddbuffer.c

--/*
SOLVED: 1) make the canvas non-resizable by setting EXPAND=NO (on the IupCanvas)
        2) and at the same time also remove the RASTERSIZE=NULL ("")
        3) that means the resize callback has to be moved from canvas to dlg
        4) cdCanvasGetSize now fixed so use eg IupGetIntInt(dlg,"RASTERSIZE")
        5) redraw_cb will be called far less often, in fact only when revealing
           a previously clipped region, which is absolutely fine for what I want.

Updated 30/5: proper resizable canvas, redraw every time.
--*/

--#withtype Ihandle
--#withtype cdCanvas
--#withtype cdCanvan

include pGUI.e

function esc_close(Ihandle /*ih*/, atom c)
-- (I like all my demos to close when escape is keyed)
    if c=K_ESC then return IUP_CLOSE end if
    return IUP_CONTINUE
end function

Ihandle dlg, canvas
cdCanvas cddbuffer, cdcanvas

procedure appUpdateRender()
integer width, height
    cdCanvasActivate(cddbuffer)

--  cdCanvasClear(cddbuffer)

--  {width, height} = IupGetIntInt(dlg, "RASTERSIZE")
    {width, height} = IupGetIntInt(canvas, "DRAWSIZE")
    cdCanvasLine(cddbuffer, 0, 0, width-1, height-1)
    cdCanvasLine(cddbuffer, 0, height-1, width-1, 0)
    cdCanvasFlush(cddbuffer)
end procedure

function redraw_cb(Ihandle /*ih*/, integer /*posx*/, integer /*posy*/)
    appUpdateRender()
    return IUP_DEFAULT
end function

--function resize_cb(Ihandle /*ih*/)
--  appUpdateRender()
--  return IUP_DEFAULT
--end function

function map_cb(Ihandle ih)
    cdcanvas = cdCreateCanvas(CD_IUP, ih)
    cddbuffer = cdCreateCanvas(CD_DBUFFER, cdcanvas)
    cdCanvasSetBackground(cddbuffer, CD_WHITE)
    cdCanvasSetForeground(cddbuffer, CD_RED)
    return IUP_DEFAULT
end function

function unmap_cb(Ihandle /*ih*/)
    cdKillCanvas(cddbuffer)
    cdKillCanvas(cdcanvas)
    return IUP_DEFAULT
end function

procedure CanvasCDDBufferTest()

    canvas = IupCanvas(NULL)
    IupSetAttribute(canvas, "RASTERSIZE", "300x200") -- initial size
--  IupSetAttribute(canvas, "EXPAND", "NO")

    IupSetCallback(canvas, "MAP_CB",    Icallback("map_cb"))
    IupSetCallback(canvas, "UNMAP_CB",  Icallback("unmap_cb"))

    dlg = IupDialog(canvas)
--  dlg = IupDialog(canvas,"SIZE=300x200")
    IupSetAttribute(dlg, "TITLE", "CD Double Buffer Test")
    IupSetCallback(dlg, "K_ANY",     Icallback("esc_close"))
--  IupSetCallback(dlg, "RESIZE_CB", Icallback("resize_cb"))
    IupSetCallback(canvas, "ACTION", Icallback("redraw_cb"))

    IupMap(dlg)
    IupSetAttribute(canvas, "RASTERSIZE", NULL) -- release the minimum limitation

    IupShowXY(dlg,IUP_CENTER,IUP_CENTER)
end procedure

procedure main()
    IupOpen()

    CanvasCDDBufferTest()

    IupMainLoop()

    IupClose()
end procedure

main()

