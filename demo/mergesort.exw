 function merge_sort(sequence x)
 -- put x into ascending order using a recursive merge sort
 integer n, midpoint
 sequence merged, a, b
         n = length(x)
         if n<=1 then
                 return x  -- trivial case
         end if
         midpoint = floor(n/2)
         a = merge_sort(x[1..midpoint])    -- sort first half of x
         b = merge_sort(x[midpoint+1..n])        -- sort second half of x
         -- merge the two sorted halves into one
         merged = {}
         while length(a)>0 and length(b)>0 do
                 if a[1]<b[1] then
                         merged = append(merged, a[1])
                         a = a[2..$]
                 else
                         merged = append(merged, b[1])
                         b = b[2..$]
                 end if
         end while
         return merged & a & b  -- merged data plus any leftovers
 end function

 sequence list = {9, 10, 3, 1, 4, 5, 8, 7, 6, 2}
         ? merge_sort(list)

