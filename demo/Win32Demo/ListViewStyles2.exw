--  code generated by Win32Lib IDE v0.9L.9

include Win32Lib.ew
without warning
VOID = setSearchPaths("..\\demoresources\\")

--------------------------------------------------------------------------------
--  Window Window1
global constant Window1 = create(Window, "Listview & Treeview styles", 0, 10, 10, 640, 480, 0)
setWindowBackColor(Window1,#C0C0C0)

global constant TabControl1 = create(TabControl, "TabControl1", Window1, 2, 24, 628, 408, 0)
global constant TabItem1 = create(TabItem, "Listview Simple Styles and Column size", TabControl1, 0, 0, 0, 0, 0)
global constant TabItem2 = create(TabItem, "Listview Extended Styles", TabControl1, 0, 0, 0, 0, 0)
global constant TabItem3 = create(TabItem, "Treeview Styles", TabControl1, 0, 0, 0, 0, 0)

object junk

atom lvMask

global sequence SampleCtrls

SampleCtrls = repeat(0, 27)

SampleCtrls[1] = create(ListView, {"Column 1","Column 2"}, TabItem1, 8, 30,200, 120,or_all({LVS_ICON, LVS_SHOWSELALWAYS}))
SampleCtrls[2] = create(ListView, {"Column 1","Column 2"}, TabItem1, 214, 30,200, 120,or_all({LVS_SMALLICON, LVS_SHOWSELALWAYS}))
SampleCtrls[3] = create(ListView, {"Column 1","Column 2"}, TabItem1, 420, 30,200, 120,or_all({LVS_REPORT,LVS_EDITLABELS}))

SampleCtrls[4] = create(ListView, {"Column 1","Column 2"}, TabItem1, 8, 156,200, 120,or_all({LVS_REPORT,LVS_NOSORTHEADER,LVS_SHOWSELALWAYS}))
SampleCtrls[5] = create(ListView, {"Column 1","Column 2"}, TabItem1, 214, 156,200, 120,or_all({LVS_REPORT,LVS_NOCOLUMNHEADER}))
SampleCtrls[6] = create(ListView, {"Column 1","Column 2"}, TabItem1, 420, 156,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))

SampleCtrls[7] = create(ListView, {"Column 1","Column 2"}, TabItem1, 8, 280,200, 120,or_all({LVS_REPORT,LVS_SINGLESEL,LVS_SHOWSELALWAYS}))
SampleCtrls[8] = create(ListView, {"Column 1","Column 2"}, TabItem1, 214, 280,200, 120,or_all({LVS_REPORT, LVS_SHOWSELALWAYS,LVS_NOSCROLL}))
SampleCtrls[9] = create(ListView, {"Column 1","Column 2"}, TabItem1, 420, 280,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))


SampleCtrls[10] = create(ListView, {"Column 1","Column 2"}, TabItem2, 8, 30,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))
SampleCtrls[11] = create(ListView, {"Column 1","Column 2"}, TabItem2, 214, 30,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))
SampleCtrls[12] = create(ListView, {"Column 1","Column 2"}, TabItem2, 420, 30,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))

SampleCtrls[13] = create(ListView, {"Column 1","Column 2"}, TabItem2, 8, 156,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))
SampleCtrls[14] = create(ListView, {"Column 1","Column 2"}, TabItem2, 214, 156,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))
SampleCtrls[15] = create(ListView, {"Column 1","Column 2"}, TabItem2, 420, 156,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))

SampleCtrls[16] = create(ListView, {"Column 1","Column 2"}, TabItem2, 8, 280,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))
SampleCtrls[17] = create(ListView, {"Column 1","Column 2"}, TabItem2, 214, 280,200, 120,or_all({LVS_REPORT, LVS_SHOWSELALWAYS}))
SampleCtrls[18] = create(ListView, {"Column 1","Column 2"}, TabItem2, 420, 280,200, 120,or_all({LVS_REPORT,LVS_SHOWSELALWAYS}))


SampleCtrls[19] = create(TreeView, "TreeView", TabItem3, 8, 30,200, 120,or_all({TVS_HASLINES,TVS_LINESATROOT,TVS_HASBUTTONS,TVS_SHOWSELALWAYS}))
SampleCtrls[20] = create(TreeView, "TreeView", TabItem3, 214, 30,200, 120,or_all({TVS_LINESATROOT,TVS_HASBUTTONS,TVS_SHOWSELALWAYS}))
SampleCtrls[21] = create(TreeView, "TreeView", TabItem3, 420, 30,200, 120,or_all({TVS_HASLINES,TVS_HASBUTTONS,TVS_SHOWSELALWAYS}))

SampleCtrls[22] = create(TreeView, "TreeView", TabItem3, 8, 156,200, 120,or_all({TVS_HASLINES,TVS_LINESATROOT,TVS_HASBUTTONS}))
SampleCtrls[23] = create(TreeView, "TreeView", TabItem3, 214, 156,200, 120,or_all({TVS_HASBUTTONS,TVS_SHOWSELALWAYS}))
SampleCtrls[24] = create(TreeView, "TreeView", TabItem3, 420, 156,200, 120,or_all({TVS_HASLINES,TVS_SHOWSELALWAYS}))

SampleCtrls[25] = create(TreeView, "TreeView", TabItem3, 8, 280,200, 120,or_all({TVS_CHECKBOXES}))
SampleCtrls[26] = create(TreeView, "TreeView", TabItem3, 214, 280,200, 120,or_all({TVS_HASLINES}))
SampleCtrls[27] = create(TreeView, "TreeView", TabItem3, 420, 280,200, 120,or_all({TVS_HASBUTTONS}))

global constant StatusBar1 = create(StatusBar, "", Window1, 0, 0, 0, 0, 0)

constant
icon01 = addIcon(extractIcon("icon01.ico")),
icon02 = addIcon(extractIcon("icon02.ico")),
icon03 = addIcon(extractIcon("icon03.ico")),
icon04 = addIcon(extractIcon("icon04.ico")),
icon05 = addIcon(extractIcon("icon05.ico"))


sequence lvItems

integer lvItemNo
--, tvItemNo

lvItems = {
           {"First",  "First icon in list",  icon01},
           {"Second", "Second icon in list", icon02},
           {"Third",  "Third icon in list",  icon03},
           {"Fourth", "Fourth icon in list", icon04},
           {"Fifth",  "Fifth icon in list",  icon05}
          }


procedure FillListView(atom lvId)
    for i = 1 to 5 do
        lvItemNo = addLVItem(lvId, lvItems[i][3], lvItems[i][1..2])
    end for
end procedure
sequence vTVItems vTVItems = {}
procedure FillTreeView(atom tvId)
    integer x
    integer y
    x = length(vTVItems) 
    vTVItems &= repeat(0, 9)
    for i = 1 to 3 do
        y = x+1
        for j = 1 to 3 do
            x += 1
            vTVItems[x] = addTVItem(tvId, icon01, icon02, sprintf("Item %d %d %d",{tvId, i, j}), vTVItems[y])
        end for
    end for
end procedure

for i = 1 to 18 do
    FillListView(SampleCtrls[i])
end for
for i = 19 to 27 do
    FillTreeView(SampleCtrls[i])
end for

-- Automatically adjust column size
junk = sendMessage(SampleCtrls[6], LVM_SETCOLUMNWIDTH, 0, LVSCW_AUTOSIZE)

-- Give column sizes
junk = sendMessage(SampleCtrls[7], LVM_SETCOLUMNWIDTH, 0, 70) -- 70 pixels width
junk = sendMessage(SampleCtrls[7], LVM_SETCOLUMNWIDTH, 1, 124) -- 124 pixels width

junk = sendMessage(SampleCtrls[8], LVM_SETCOLUMNWIDTH, 0, 120) -- 120 pixels width




--  There are many extended styles and posible combinations, these examples just
--  show some of them
--
-- LVM_SETEXTENDEDLISTVIEWSTYLE
--    wParam = (WPARAM)dwExMask;
--    lParam = (LPARAM)dwExStyle;



-- Apply several extended styles


lvMask = or_all({LVS_EX_GRIDLINES})
junk = sendMessage( SampleCtrls[10], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_HEADERDRAGDROP})
junk = sendMessage( SampleCtrls[11], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_CHECKBOXES})
junk = sendMessage( SampleCtrls[12], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_FULLROWSELECT})
junk = sendMessage( SampleCtrls[13], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_HEADERDRAGDROP, LVS_EX_FLATSB})
junk = sendMessage( SampleCtrls[14], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

-- Put some color to background
junk = sendMessage( SampleCtrls[14], LVM_SETBKCOLOR, 0, rgb(192,192,128))
-- Back color of text in list
junk = sendMessage( SampleCtrls[14], LVM_SETTEXTBKCOLOR, 0, rgb(192,192,128))


lvMask = or_all({LVS_EX_GRIDLINES, LVS_EX_HEADERDRAGDROP, LVS_EX_CHECKBOXES})
junk = sendMessage( SampleCtrls[15], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_ONECLICKACTIVATE, LVS_EX_TRACKSELECT })
junk = sendMessage( SampleCtrls[16], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_UNDERLINECOLD, LVS_EX_TRACKSELECT })
junk = sendMessage( SampleCtrls[17], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)

lvMask = or_all({LVS_EX_UNDERLINEHOT, LVS_EX_TRACKSELECT, LVS_EX_TWOCLICKACTIVATE })
junk = sendMessage( SampleCtrls[18], LVM_SETEXTENDEDLISTVIEWSTYLE, lvMask, lvMask)


-- Adjust column size of second page of controls

for i = 10 to 18 do
    junk = sendMessage(SampleCtrls[i], LVM_SETCOLUMNWIDTH, 0, LVSCW_AUTOSIZE)
    junk = sendMessage(SampleCtrls[i], LVM_SETCOLUMNWIDTH, 1, LVSCW_AUTOSIZE)
end for


WinMain(Window1, Normal)

