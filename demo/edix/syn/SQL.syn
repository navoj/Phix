SQL syntax file
BlockComment /* */ 

LineComment --
--
-- About .syn files
-- ================
-- [[For an up-to-date version of these notes, always refer to Euphoria.syn]]
-- All files with a .syn extension in the /syn subdirectory are loaded when
-- the editor starts. They are reloaded if saved in the editor, which makes
-- it easy to add and test new keywords, etc.
-- Should a fatal error occur (which obviously it should not), then it may be
-- necessary to rename/move/delete/restore the offending .syn file.
-- The first line of a .syn file must be <Name> followed by " syntax file".
-- The second line may be "BlockComment" followed by start/end pair(s).
--  eg  BlockComment /* */ <!-- --> [[ ]]
--  Note that .syn files themselves may *NOT* contain block comments (since
--      any and all support of them is in easynclr.e, not easynld.e).
-- The next line must be "LineComment" followed by a comment lead-in (if any).
-- This LineComment directive not only controls colourisation during editing of
--  the files listed in the FileExtensions directive (see below), but also
--  defines the comment method for the remainder of the .syn file.
--      Therefore comments may not appear in a .syn file before the LineComment line.
--      Note also that Edit/Comment and Edit/Uncomment (and the keyboard shortcuts)
--      use the LineComment defined in None.syn when editing a .syn file (sorry!)
--  As an example, C/C++ line comments are // so all these lines could begin with
--  // instead of --, which is an operator in C/C++. If (eg) C.syn used -- as a
--      line comment, it would not be possible to define -- as an operator!
-- If the programming language you are trying to support does not support line 
--  comments (which should be very rare) then you cannot comment the syn file.
--      (actually, worse than that, as the LineComment section is not optional..)
--
--
-- Sections
-- ========
-- All words beginning in column 1 (apart from comments) begin a section. 
-- Some of these are recognised: LineComment, TokenStart, TokenChar, 
-- TokenFirst, TokenLast, Whitespace, Escapes, Delimiters, Operators,
-- Illegal, and (lastly) FileExtensions. The remainder need not be
-- pre-declared; their names are shown in the Options/Colours window. 
--

--
-- Token characters may be be specified next.
--
TokenStart abcedfghijklmnopqrstuvwxyz
TokenStart ABCDEFGHIJKLMNOPQRSTUVWXYZ@
TokenChar 0123456789_/\
-- TokenFirst can be used to specify characters which are only valid at the start
-- of a token (eg # in #include or < in <table> [HTML]), and TokenLast can be used
-- to specify characters which terminate a token (eg > in <table> or $ in MID$), eg
TokenFirst #    -- by default this set is empty
TokenLast $         -- ""
-- In practice, TokenLast defines single-character tokens, so internally the
--  syntax colouring will treat <table> as "<table" and ">". eg see Html.syn
--
-- Whitespace is defaulted to #09101320, ie tab, lf, cr, and space. There is 
-- as yet no way to change this, though I will say it should be specified as 
-- a hexadecimal stringset rather than OS/editor/language dependent means.
--
-- Likewise String and Character parsing is currently hard-coded (to ' and ").
-- You should not specify ' or " as delimiters or operators.
--
-- Escape characters are defined using a single leadin followed by the valid 
-- characters which may follow (this permits \r \n \t \\ \' and \"):
--
--Escapes \rnt\'"

Delimiters #$:,.;^
Operators = + * & | / > < ! ? ' - %

Braces 5 ()[]{}

--[NOT YET SUPPORTED:]
--Illegal ~@%^|; -- not needed if we have specified the delimiters

--
-- FileExtensions should be specified next. This is not optional.
--
FileExtensions sql

--
-- The remaining sections are listed in the Options/Colours window. 
-- The names used should not contain spaces; these are automatically 
-- inserted after any lower-case character which is followed by an 
-- upper-case one. Otherwise these names are entirely descriptive and 
-- are not defined or used anywhere else. Remember that all words
-- beginning in column 1 are interpreted as section names.

ReservedWords
    ADD
    ALTER
    and AND And
    ANSI_NULLS
    as AS
    asc
    begin BEGIN Begin
    between BETWEEN
    by BY By
    case CASE Case
    close CLOSE
    coalesce COALESCE
    COLUMN
    commit
    count COUNT
    create CREATE Create
    cursor CURSOR 
    CURSOR_CLOSE_ON_COMMIT
    CURSOR_DEFAULT
    DATABASE
    deallocate DEALLOCATE
    declare DECLARE
    delete DELETE Delete
    desc DESC
    distinct DISTINCT
    drop DROP
    duplicates
    else ELSE
    end END End
    exec EXEC
    execute
    exists EXISTS
    fetch FETCH Fetch
    for FOR
    from FROM From
    function FUNCTION
    GLOBAL
    GO
    group GROUP
    having HAVING
    if IF If
    in
    INDEX
    inner INNER
    insert INSERT Insert
    into INTO
    is IS
    join JOIN
    left LEFT 
    like LIKE
    next NEXT Next
    nocount NOCOUNT
    not NOT
    null NULL Null
    OFF
    on ON
    open OPEN
    or OR
    order ORDER Order 
    outer OUTER 
    proc
    procedure PROCEDURE
    QUOTED_IDENTIFIER
    raiserror RAISERROR Raiserror
    return RETURN Return
    returns RETURNS
    rollback
    select SELECT Select
    set SET
    table TABLE
    then THEN
    top TOP
    tran
    transaction TRANSACTION
    TRUNCATE
    union UNION
    UNIQUE
    update UPDATE Update
    values VALUES
    when WHEN 
    where WHERE Where
    while WHILE

Types 
    BIGINT
    bit
    char Char
    datetime DATETIME
    float FLOAT
    int INT
    integer
    money
    nchar
    ntext
    smalldatetime
    smallint
    tinyint
    varchar VARCHAR

Builtins
    abs
    cast CAST
    charindex
    convert CONVERT
    datediff DATEDIFF
    DATEADD
    DATENAME
    DATEPART
    getdate GETDATE
    ifnull IFNULL
    isnull ISNULL
    len LEN
    max MAX
    OBJECT_ID
    OPENQUERY
    print Print
    REPLACE Replace
    right
    rtrim RTRIM
    substring
    sum SUM
    upper UPPER

--??
-- WITH (TABLOCKX)
-- SCOPE_IDENTITY()
    
-- Default Scheme: This defines the default colours to be used immediately after
-- installation; using Options/Colours creates a XXX.clr file which overrides this.
Scheme
 Background Silver
 Comments Teal Italic
 Highlight #A0A0A0
 CurrentLine #B8B8B8
 Strings Olive
 Illegals Red
 Operators Blue
 URLs Olive Bold
 Other Black
 Marginbg #E0E0E0
 Linenos Navy
 Bookmarks Yellow
 Brace1 Green
 Brace2 Blue
 Brace3 Purple
 Brace4 Red
 Brace5 Yellow
 Brace6 Black
 Brace7 Black
 ReservedWords Navy
 Types Maroon
 Builtins Teal
