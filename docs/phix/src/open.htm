<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">open</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="integer.htm">integer</a> fn = open(<a href="string.htm">string</a> st1, <a href="string.htm">string</a> st2)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Open a file or device, and obtain a file number. -1 is returned if
             the open fails. st1 is the path name of the file or device. st2 is
             the mode in which the file is to be opened. Possible modes are:
          <p>
            "r" - open text file for reading
           <br>
            "w" - create text file for writing
           <br>
            "u" - open text file for update (reading and writing)
           <br>
            "a" - open text file for appending
           <br>
            "rb" - open binary file for reading
           <br>
            "wb" - create binary file for writing
           <br>
            "ub" - open binary file for update
           <br>
            "ab" - open binary file for appending
           <br>
          </p>
          <p>
            Files opened for read or update must already exist. Files opened
             for write or append will be created if necessary. A file opened
             for write will be set to 0 bytes. Output to a file opened for
             append will start at the end of file.
          </p>
          <p>
            Output to
           <b>text files</b> will have carriage-return characters
             automatically added before linefeed characters. On input, these
             carriage-return characters are removed. A control-Z character
             (ASCII 26) will signal an immediate end of file.
          </p>
          <p>
            I/O to
           <b>binary files</b> is not modified in any way. Any byte values
             from 0 to 255 can be read or written.
          </p>
          <p>
            Some typical devices that you can open are: (DEV: none of these have been tested on Phix)
          </p>
          <p>
 "CON" - the console (screen)
           <BR>
 "AUX" - the serial auxiliary port
           <BR>
 "COM1" - serial port 1
           <BR>
 "COM2" - serial port 2
           <BR>
 "PRN" - the printer on the parallel port
           <BR>
 "NUL" - a non-existent device that accepts and discards output
           <BR>
          </p>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
integer file_in, file_out
sequence first_line
constant ERROR = 2
file_in = open("myfile", "r")
if file_in=-1 then
    puts(ERROR, "couldn't open myfile\n")
else
    first_line = gets(file_in)
end if
file_out = open("PRN", "w") -- open printer for output
if file_out!=-1 then
    puts(1, "it worked!\n")
end if
close(file_in)
close(file_out)
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">integer</font><font color="#000000"> file_in</font><font color="#0000FF">,</font><font color="#000000"> file_out
</font><font color="#004080">sequence</font><font color="#000000"> first_line
</font><font color="#008080">constant</font><font color="#000000"> ERROR</font><font color="#0000FF"> =</font><font color="#000000"> 2
file_in</font><font color="#0000FF"> =</font><font color="#7060A8"> open</font><font color="#0000FF">(</font><font color="#008000">"myfile"</font><font color="#0000FF">,</font><font color="#008000"> "r"</font><font color="#0000FF">)
</font><font color="#008080">if</font><font color="#000000"> file_in</font><font color="#0000FF">=-</font><font color="#000000">1</font><font color="#008080"> then
</font><font color="#7060A8">    puts</font><font color="#0000FF">(</font><font color="#000000">ERROR</font><font color="#0000FF">,</font><font color="#008000"> "couldn't open myfile\n"</font><font color="#0000FF">)
</font><font color="#008080">else
</font><font color="#000000">    first_line</font><font color="#0000FF"> =</font><font color="#7060A8"> gets</font><font color="#0000FF">(</font><font color="#000000">file_in</font><font color="#0000FF">)
</font><font color="#008080">end if
</font><font color="#000000">file_out</font><font color="#0000FF"> =</font><font color="#7060A8"> open</font><font color="#0000FF">(</font><font color="#008000">"PRN"</font><font color="#0000FF">,</font><font color="#008000"> "w"</font><font color="#0000FF">)</font><font color="#000080"><i> -- open printer for output
</i></font><font color="#008080">if</font><font color="#000000"> file_out</font><font color="#0000FF">!=-</font><font color="#000000">1</font><font color="#008080"> then
</font><font color="#7060A8">    puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "it worked!\n"</font><font color="#0000FF">)
</font><font color="#008080">end if
</font><font color="#7060A8">close</font><font color="#0000FF">(</font><font color="#000000">file_in</font><font color="#0000FF">)
</font><font color="#7060A8">close</font><font color="#0000FF">(</font><font color="#000000">file_out</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
              via :%opOpen / fopen() in builtins\VM\pfileioN.e (an autoinclude) - be warned however it is low-level complicated stuff that you do not need to know.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="getc.htm">getc</a>,
          <a href="gets.htm">gets</a>,
          <a href="puts.htm">puts</a>,
          <a href="seek.htm">seek</a>,
          <a href="where.htm">where</a>,
          <a href="lock_file.htm">lock_file</a>,
          <a href="unlock_file.htm">unlock_file</a>,
          <a href="flush.htm">flush</a>,
          <a href="close.htm">close</a>
         </td>
        </tr>
       </table>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
