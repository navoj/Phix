<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Concatenation</h1>
      <div id="mainSection">
         Any two objects may be concatenated using the
        <font color="#030303">
         <b>&</b>
        </font> operator. The result is a
         <a href="sequence.htm">sequence</a> with a length equal to the sum of the lengths of the concatenated
         objects (where atoms are considered here to have length 1). e.g.
<!--eucode>
    {1, 2, 3} & 4              -- {1, 2, 3, 4}
    4 & 5                      -- {4, 5}
    {{1, 1}, 2, 3} & {4, 5}    -- {{1, 1}, 2, 3, 4, 5}
    x = {}
    y = {1, 2}
    y = y & x                  -- y is still {1, 2}
    z = "this"&"that"          -- z is "thisthat"
</eucode-->
<pre>
<font color="#000000"></font><font color="#0000FF">    {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">} &amp;</font><font color="#000000"> 4             </font><font color="#000080"><i> -- {1, 2, 3, 4}
</i></font><font color="#000000">    4</font><font color="#0000FF"> &amp;</font><font color="#000000"> 5                     </font><font color="#000080"><i> -- {4, 5}
</i></font><font color="#0000FF">    {</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000"> 1</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">} &amp; {</font><font color="#000000">4</font><font color="#0000FF">,</font><font color="#000000"> 5</font><font color="#0000FF">}   </font><font color="#000080"><i> -- {{1, 1}, 2, 3, 4, 5}
</i></font><font color="#000000">    x</font><font color="#0000FF"> = {}
</font><font color="#000000">    y</font><font color="#0000FF"> = {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">}
</font><font color="#000000">    y</font><font color="#0000FF"> =</font><font color="#000000"> y</font><font color="#0000FF"> &amp;</font><font color="#000000"> x                 </font><font color="#000080"><i> -- y is still {1, 2}
</i></font><font color="#000000">    z</font><font color="#0000FF"> =</font><font color="#008000"> "this"</font><font color="#0000FF">&amp;</font><font color="#008000">"that"         </font><font color="#000080"><i> -- z is "thisthat"</i></font>
</pre>
        You can delete element i of any <a href="sequence.htm">sequence</a> s by concatenating the
        parts of the <a href="sequence.htm">sequence</a> before and after i:
<!--eucode>
    s = s[1..i-1] & s[i+1..length(s)]
</eucode-->
<pre>
<font color="#000000">    s</font><font color="#0000FF"> =</font><font color="#000000"> s</font><font color="#0000FF">[</font><font color="#000000">1</font><font color="#0000FF">..</font><font color="#000000">i</font><font color="#0000FF">-</font><font color="#000000">1</font><font color="#0000FF">] &amp;</font><font color="#000000"> s</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">+</font><font color="#000000">1</font><font color="#0000FF">..</font><font color="#7060A8">length</font><font color="#800000">(</font><font color="#000000">s</font><font color="#800000">)</font><font color="#0000FF">]</font>
</pre>
        This works even when i is 1 or length(s), since s[1..0] is a legal empty slice,
        and so is s[length(s)+1..length(s)].
       <br>
       <br>
        Alternatively you can replace a slice with an empty <a href="sequence.htm">sequence</a>:
<!--eucode>
    s[i..i] = {}
</eucode-->
<pre>
<font color="#000000">    s</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">..</font><font color="#000000">i</font><font color="#0000FF">] = {}</font>
</pre>
       Note however this is not compatible with RDS or OpenEuphoria.
       <br>
       <br>
        TIP: &amp; is ideal for constructing <a href="string.htm">strings</a>. When adding individual elements to (a <a href="sequence.htm">sequence</a> which represents) a 
        list or table consider using <a href="append.htm">append</a> or <a href="prepend.htm">prepend</a> instead.
       <br>
       <br>
        See also <a href="otherseqops.htm#similarities">Other Operations on Sequences</a> for a detailed explanation of the 
        similarities and differences between concatenation and append/prepend.
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
