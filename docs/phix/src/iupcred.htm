<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Background</h1>
      <div id="mainSection">
        IUP is a multi-platform toolkit developed at Tecgraf/PUC-Rio for building graphical user interfaces. <br>
        It offers high performance via native interface elements and fast learning by the user, due to the simplicity 
        of its API.
        <br>
        <br>
        To use pGUI, you must include pGUI.e. The file phix\builtins\pGUI.e is a "stub include" that simply contains 
        <code>include ..\demo\pGUI\pGUI.e</code> (same on Windows and Linux) to simplify matters. You may wish to 
        make a copy of demo\PGUI and that stub file (and indeed the phix executables and phix/builtins) along with 
        any important project, to ensure it is not affected in any way when a newer version of phix is installed.
<!--
        <br>
        <br>
        <blockquote>
        There may however be times when you need to modify (a copy of) that stub: You simply cannot have progress 
        without change: some bugs may be fixed, some new bugs may be introduced, some routines may be deprecated or 
        require extra parameters, etc. Hence from time to time, new releases of phix and/or pGUI may mean that legacy 
        code no longer works, or that you cannot reproduce a problem your client is experiencing.<br>
        Important client-facing projects that must continue to work no matter how many years have elapsed since they 
        were last worked on should therefore contain a private copy of phix itself along with the builtins and pGUI 
        directories, that are not overwritten when new releases are installed, and in such cases it may be necessary 
        to modify the copy of the above mentioned stub file to reflect the new private directory structure, or move 
        it out of builtins into the main directory for the project and modify it there.
        </blockquote>
-->
        <br>
        <br>
        pGUI is a simple wrapper of IUP (the C version as precompiled dynamically loaded libraries). The distribution 
        includes all the required pre-built binaries: IUP, CD and IM are all needed. I include 32 and 64 bit Windows 
        and Linux versions, however at the moment I cannot test or support 64 bit Linux. A finished (precompiled) 
        application that uses pGUI must also install the appropiate subdirectory containing the required binaries 
        (ie pGUI\win32/lin32/win64/lin64). Newer/other versions can, if required, be downloaded from:
        <ul>
        <li>CD - <a id="ext791" style="color:#9B5565" 
        href="javascript:ExternalLink('ext791','http://sourceforge.net/projects/canvasdraw/files/');">
        http://sourceforge.net/projects/canvasdraw/files/</a> 
        <!--(5.9 15/09/15)-->
        (5.11.1 21/12/17)
        </li>
        <li>IM - <a id="ext792" style="color:#9B5565" 
        href="javascript:ExternalLink('ext792','http://sourceforge.net/projects/imtoolkit/files/');">
        http://sourceforge.net/projects/imtoolkit/files/</a> 
        <!--(3.10 15/09/15)-->
        (3.12 21/12/17)
        </li>
        <li>IUP - <a id="ext793" style="color:#9B5565" 
        href="javascript:ExternalLink('ext793','http://sourceforge.net/projects/iup/files/');">
        http://sourceforge.net/projects/iup/files/</a> 
        <!--(3.17 30/11/15)-->
        <!--(3.23 30/11/15)-->
        (3.24 22/01/18)
        </li>
        </ul>
        IupColorbar, IupColorBrowser, and IupDial were removed in IUP 3.24.
        <br>
        <h3>Windows:</h3>
        I went with the "dll12" builds but feel free to try one of the others. Note this requires msvcr120.dll, but
        you should get a plain english message and a link (<a id="ext947" style="color:#9B5565" 
        href="javascript:ExternalLink('ext947','https://www.microsoft.com/en-us/download/details.aspx?id=40784');">
        https://www.microsoft.com/en-us/download/details.aspx?id=40784</a>) if you need it. Also note that "dllw4"
        does not contain iupweb.dll, but you can get away without that as long as you don&rsquo;t invoke IupWebBrowser,
        and that particular build has the advantage of not needing any C++ runtimes to be installed.
        Be advised that downloads from sourceforge can sometimes be fast, but sometimes slow, flakey, and maybe
        incomplete (as widely reported), so verify things with eg the 7-zip "test" button.
<!--DEV (Linux)
        <br>
        <br>
        <h3>Linux:</h3>
        ...
-->
        <br>
        <br>
        pGUI is (being) built from the ground up, testing and documenting each routine as it is added, hence there will 
        be many that are not yet available. If in any doubt, please check the official documentation available at
        <a id="ext479" style="color:#9B5565" href="javascript:ExternalLink('ext479','http://www.tecgraf.puc-rio.br/iup/');">
        http://www.tecgraf.puc-rio.br/iup/</a>. I have stuck with the C names, on the basis of easing both translation
        from C code, and searching for C and/or pGUI code snippets with just the one shot. (Besides, if you really want 
        other names, a thin wrapper around pGUI.e should not be particularly difficult!)
        <br>
        <br>
        Credit is also due to Jeremy Cowgar and Greg Haberek; pGUI contains code cherry picked from both.
        <br>
        <br>
        A recent find is 
        <a id="ext834" style="color:#9B5565" href="javascript:ExternalLink('ext834','http://search.cpan.org/~kmx/IUP-0.303/lib/IUP.pod');">
        http://search.cpan.org/~kmx/IUP-0.303/lib/IUP.pod</a> which struck me as pretty good, albeit perl based. If I ever get the time,
        I may one day remodel this documentation based on that (as opposed to the current system of hunting and pecking through the 
        official docs).
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
