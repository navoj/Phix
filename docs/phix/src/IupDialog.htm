<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupDialog</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupDialog(<a href="Ihandle.htm">Ihandln</a> child=NULL, <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates a dialog element. It manages user interaction with the interface elements. For any interface element to be shown, it must be encapsulated in a dialog.
            <br>
            <br>
            child: the identifier of an interface element. The dialog has only one child. It can be NULL.<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Returns the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            Do not associate an IupDialog with the native "dialog" nomenclature in Windows, GTK or Motif. IupDialog use native standard windows in all drivers.
            <br>
            Except for the menu, all other elements must be inside a dialog to interact with the user. Therefore, an interface element will only be visible if its dialog is also visible.
            <br>
            The order of callback calling is system dependent. For instance, the <a href="callbacks.htm#RESIZE_CB">RESIZE_CB</a> and the SHOW_CB 
            are called in a different order in Win32 and in X-Windows when the dialog is shown for the first time.
            <br>
            Windows MDI support is composed of 3 components: the MDI frame window (IupDialog), the MDI client window (<a href="IupCanvas.htm">IupCanvas</a>) and the MDI children (IupDialog). 
            Although the MDI client is a <a href="IupCanvas.htm">IupCanvas</a> it is not used directly by the application, but it must be created and included in the dialog that will be the MDI frame, 
            other controls can also be available in the same dialog, like buttons and other canvases composing toolbars and status area. 
            <br>
            <br>
            The following picture illustrates the 3 components:
            <br>
            <img src="images/mdi.gif"/>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Common, non inheritable
            <br>
              <a name=BACKGROUND></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          BACKGROUND
         </td>
         <td>
            Dialog background color or image. <br>
            Can be a non inheritable alternative to <a href="common.htm#BGCOLOR">BGCOLOR</a> or can be the name of an image to be tiled on the background. <br>
            Run demo\pGUI\sample.exw and use the menu to toggle the dialog BACKGROUND, the dialog BGCOLOR and the children BGCOLOR. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          BORDER
         </td>
         <td>
            (creation only) Shows a resize border around the dialog. Default: "YES". <br>
            BORDER=NO is useful only when RESIZE=NO, MAXBOX=NO, MINBOX=NO, MENUBOX=NO and TITLE=NULL, if any of these are defined there will be always some border.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CHILDOFFSET
         </td>
         <td>
            Allow to specify a position offset for the child. Available for native containers only. <br>
            It will not affect the natural size, and allows to position controls outside the client area. <br>
            Format "dxxdy", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: "0x0".
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#CURSOR">CURSOR</a>
         </td>
         <td>
            Defines a cursor for the dialog.
         </td>
        </tr>
        <tr>
         <td valign=top>
          DROPFILESTARGET
         </td>
         <td>
            [Windows and GTK Only] Enable or disable the drop of files. Default: NO, but if DROPFILES_CB is defined when the element is mapped then it will be automatically enabled.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            The default value is "YES".
         </td>
        </tr>
        <tr>
         <td valign=top>
          NACTIVE
         </td>
         <td>
            same as <a href="common.htm#ACTIVE">ACTIVE</a> but does not affects the controls inside the dialog.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#SIZE">SIZE</a>
         </td>
         <td>
            Dialog’s size. Additionally the following values can also be defined for width and/or height: 
            <br>
            <br>
            "FULL": Makes the dialog width (or height) equal to the screen width (or height) <br>
            "HALF": Makes the dialog width (or height) equal to half the screen width (or height) <br>
            "THIRD": Makes the dialog width (or height) equal to 1/3 the screen width (or height) <br>
            "QUARTER": Makes the dialog width (or height) equal to 1/4 of the screen width (or height) <br>
            "EIGHTH": Makes the dialog width (or height) equal to 1/8 of the screen width (or height) <br>
            <b>NOTE:</b> the above SIZE values are for IupDialog <i>only</i>, they will <b>not</b> work with other controls such as <a href="IupButton.htm">IupButton</a> 
            or <a href="IupFrame.htm">IupFrame</a>.<br>
            The dialog Natural size is only considered when the User size is not defined or when it is bigger than the Current size. <br>
            This behavior is different from a control that goes inside the dialog. <br>
            Because of that, when SIZE or <a href="common.htm#RASTERSIZE">RASTERSIZE</a> are set (changing the User size), the Current size is internally reset to 0x0, 
            so the the Natural size can be considered when re-computing the Current size of the dialog.
            <br>
            <br>
            Values set at SIZE or <a href="common.htm#RASTERSIZE">RASTERSIZE</a> attributes of a dialog are always accepted, regardless of the minimum size required by its children. <br>
            For a dialog to have the minimum necessary size to fit all elements contained in it, simply define SIZE or <a href="common.htm#RASTERSIZE">RASTERSIZE</a> to NULL. <br>
            Also if you set SIZE or <a href="common.htm#RASTERSIZE">RASTERSIZE</a> to be used as the initial size of the dialog, its contents will be limited to this size as the minimum size, <br>
            if you do not want that, then after showing the dialog reset this size to NULL so the dialog can be resized to smaller values. <br>
            But notice that its contents will still be limited by the Natural size, to also remove that limitation set SHRINK=YES. <br>
            To only change the User size in pixels, without resetting the Current size, set the USERSIZE attribute.
            <br>
            <br>
            Notice that the dialog size includes its decoration (it is the Window size), the area available for controls are returned by the dialog <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>. <br>
            For more information see <a href="iuplayout.htm">Layout Guide</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#TITLE">TITLE</a>
         </td>
         <td>
            Dialog’s title. Default: NULL. If you want to remove the title bar you must also set MENUBOX=NO, MAXBOX=NO and MINBOX=NO, before map. <br>
            But in Motif and GTK it will hide it only if RESIZE=NO also.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#VISIBLE">VISIBLE</a>
         </td>
         <td>
            Simply call <a href="IupShow.htm">IupShow</a> or <a href="IupHide.htm">IupHide</a> for the dialog.
         </td>
        </tr>
        <tr>
         <td valign=top>
          also accepted
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#BGCOLOR">BGCOLOR</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>,
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>. <br>
            Note that <a href="common.htm#ACTIVE">ACTIVE</a>, <a href="common.htm#BGCOLOR">BGCOLOR</a> and <a href="common.htm#FONT">FONT</a> 
            will also affect all the controls inside the dialog. 
            <br>
            Drag & Drop attributes and callbacks are supported. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive
            <br>
            <a name=DEFAULTENTER></a>
            <a name=DEFAULTESC></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DEFAULTENTER<br>DEFAULTESC
         </td>
         <td>
            Name of the button activated when the user press Enter/Esc when focus is in another control of the dialog. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate a button to a name.
         </td>
        </tr>
        <tr>
         <td valign=top>
          DIALOGFRAME
         </td>
         <td>
            Set the common decorations for modal dialogs. This means RESIZE=NO, MINBOX=NO and MAXBOX=NO. <br>
            In Windows, if the PARENTDIALOG is defined then the MENUBOX is also removed, but the Close button remains.
         </td>
        </tr>
        <tr>
         <td valign=top>
          ICON
         </td>
         <td>
            Dialog’s icon. The Windows SDK recommends that cursors and icons should be implemented as resources rather than created at run time. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          FULLSCREEN
         </td>
         <td>
            Makes the dialog occupy the whole screen over any system bars in the main monitor. <br>
            All dialog details, such as title bar, borders, maximize button, etc, are removed. <br>
            Possible values: YES, NO. <br>
            In Motif you may have to click in the dialog to set its focus.
            In Motif if set to YES when the dialog is hidden, then it can not be changed after it is visible.
         </td>
        </tr>
        <tr>
         <td valign=top>
          HWND
         </td>
         <td>
            [Windows Only] (non inheritable, read-only) Returns the Windows Window handle. <br>
            Available in the Windows driver or in the GTK driver in Windows.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MAXBOX
         </td>
         <td>
            (creation only) Requires a maximize button from the window manager. <br>
            If RESIZE=NO then MAXBOX will be set to NO. Default: YES. <br>
            In Motif the decorations are controlled by the Window Manager and may not be possible to be changed from IUP. <br>
            In Windows MAXBOX is hidden only if MINBOX is hidden as well, or else it will be just disabled.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#MAXSIZE">MAXSIZE</a>
         </td>
         <td>
            Maximum size for the dialog in raster units (pixels). <br>
            The windowing system will not be able to change the size beyond this limit. Default: 65535x65535.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MENU
         </td>
         <td>
            Name of a menu. Associates a menu to the dialog as a menu bar. <br>
            The previous menu, if any, is unmapped. <br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate a menu to a name. See also <a href="IupMenu.htm">IupMenu</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MENUBOX
         </td>
         <td>
            (creation only) Requires a system menu box from the window manager. <br>
            If hidden will also remove the Close button. Default: YES. <br>
            In Motif the decorations are controlled by the Window Manager and may not be possible to be changed from IUP. <br>
            In Windows if hidden will hide also MAXBOX and MINBOX.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MINBOX
         </td>
         <td>
            (creation only) Requires a minimize button from the window manager. Default: YES. <br>
            In Motif the decorations are controlled by the Window Manager and may not be possible to be changed from IUP. <br>
            In Windows MINBOX is hidden only if MAXBOX is hidden as well, or else it will be just disabled.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#MINSIZE">MINSIZE</a>
         </td>
         <td>
            Minimum size for the dialog in raster units (pixels). <br>
            The windowing system will not be able to change the size beyond this limit. Default: 1x1. <br>
            Some systems define a very minimum size greater than this, for instance in Windows the horizontal minimum size includes the window decoration buttons.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MODAL
         </td>
         <td>
            (read-only) Returns the popup state. <br>
            It is "YES" if the dialog was shown using <a href="IupPopup.htm">IupPopup</a>. <br>
            It is "NO" if <a href="IupShow.htm">IupShow</a> was used or it is not visible.
         </td>
        </tr>
        <tr>
         <td valign=top>
          NATIVEPARENT
         </td>
         <td>
            (creation only) Native handle of a dialog to be used as parent. Used only if PARENTDIALOG is not defined.
         </td>
        </tr>
        <tr>
         <td valign=top>
          PARENTDIALOG
         </td>
         <td>
            (creation only) Name of a dialog to be used as parent. 
            <br>
              <a name=PLACEMENT></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          PLACEMENT
         </td>
         <td>
            Changes how the dialog will be shown. Values: "FULL", "MAXIMIZED", "MINIMIZED" and "NORMAL". Default: NORMAL. 
            After <a href="IupShow.htm">IupShow</a>/<a href="IupPopup.htm">IupPopup</a> the attribute is set back to "NORMAL". 
            FULL is similar to FULLSCREEN but only the dialog client area covers the screen area, menu and decorations will be there but out of the screen. 
            In UNIX there is a chance that the placement will not work correctly, that depends on the Window Manager. 
            In Windows, the SHOWNOACTIVE attribute can be set to Yes to avoid to make the window active. 
            In Windows, the SHOWMINIMIZENEXT attribute can be set to Yes to activate the next top-level window in the Z order when minimizing.
         </td>
        </tr>
        <tr>
         <td valign=top>
          RESIZE
         </td>
         <td>
            (creation only) Allows interactively changing the dialog’s size. Default: YES. <br>
            If RESIZE=NO then MAXBOX will be set to NO. <br>
            In Motif the decorations are controlled by the Window Manager and may not be possible to be changed from IUP.
         </td>
        </tr>
        <tr>
         <td valign=top>
          SAVEUNDER
         </td>
         <td>
            [Windows and Motif Only] (creation only) When this attribute is true (YES), the dialog stores the original image of the desktop region it occupies 
            (if the system has enough memory to store the image). <br>
            In this case, when the dialog is closed or moved, a redrawing event is not generated for the windows that were shadowed by it. <br>
            Its default value is YES. To save memory disable it for your main dialog. Not available in GTK.
         </td>
        </tr>
        <tr>
         <td valign=top>
          SHRINK
         </td>
         <td>
            Allows changing the elements’ distribution when the dialog is smaller than the minimum size. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          STARTFOCUS
         </td>
         <td>
            Name of the element that must receive the focus right after the dialog is shown using <a href="IupShow.htm">IupShow</a> or <a href="IupPopup.htm">IupPopup</a>. <br>
            If not defined then the first control than can receive the focus is selected (same effect of calling IupNextField for the dialog). <br>
            Updated after SHOW_CB is called and only if the focus was not changed during the callback.
         </td>
        </tr>
        <tr>
         <td valign=top>
          XWINDOW
         </td>
         <td>
            [UNIX Only] (non inheritable, read-only) Returns the X-Windows Window (Drawable). Available in the Motif driver or in the GTK driver in UNIX.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive [Windows and GTK Only]
         </td>
        </tr>
        <tr>
         <td valign=top>
          ACTIVEWINDOW
         </td>
         <td>
            [Windows and GTK Only] (read-only) informs if the dialog is the active window (the window with focus). Can be Yes or No.
         </td>
        </tr>
        <tr>
         <td valign=top>
          OPACITY
         </td>
         <td>
            [Windows and GTK Only] sets the dialog transparency alpha value. Valid values range from 0 (completely transparent) to 255 (opaque). <br>
            In Windows must be set before map so the native window would be properly initialized when mapped. (GTK 2.12)
         </td>
        </tr>
        <tr>
         <td valign=top>
          OPACITYIMAGE
         </td>
         <td>
            [Windows and GTK Only] sets a transparent image as the dialog shape so it is possible to create a non rectangle window. <br>
            In Windows must be set before map so the native window would be properly initialized when mapped. <br>
            In GTK the shape works only as a bitmap mask, to view a color image must also use a label. (GTK 2.12)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TOPMOST
         </td>
         <td>
            [Windows and GTK Only]  puts the dialog always in front of all other dialogs in all applications. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive Taskbar and Tray/Status Area [Windows and GTK Only]
         </td>
        </tr>
        <tr>
         <td valign=top>
          HIDETASKBAR
         </td>
         <td>
            [Windows and GTK Only] (write-only) Action attribute that when set to "YES", hides the dialog, 
            but does not decrement the visible dialog count, does not call SHOW_CB and does not mark the dialog as hidden inside IUP. <br>
            It is usually used to hide the dialog and keep the tray icon working without closing the main loop. <br>
            It has the same effect as setting <a href="iupgattr.htm#LOCKLOOP">LOCKLOOP</a>=Yes and normally hiding the dialog. <br>
            IMPORTANT: when you hide using HIDETASKBAR, you must show using HIDETASKBAR also. Possible values: YES, NO. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAY
         </td>
         <td>
            [Windows and GTK Only] When set to "YES", displays an icon on the system tray. (GTK 2.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYIMAGE
         </td>
         <td>
            [Windows and GTK Only] Name of a IUP image to be used as the tray icon. <br>
            The Windows SDK recommends that cursors and icons should be implemented as resources rather than created at run time. (GTK 2.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIP
         </td>
         <td>
            [Windows and GTK Only] Tray icon&rsquo;s tooltip text. (GTK 2.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIPMARKUP
         </td>
         <td>
            [GTK Only] allows the tip string to contains Pango markup commands. Can be "YES" or "NO". Default: "NO". <br>
            Must be set before setting the TRAYTIP attribute. (GTK 2.16)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIPBALLOON
         </td>
         <td>
            [Windows Only] The tip window will have the appearance of a cartoon "balloon" with rounded corners and a stem pointing to the item. Default: NO. <br>
            Must be set before setting the TRAYTIP attribute.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIPBALLOONDELAY
         </td>
         <td>
            [Windows Only] Time the tip will remain visible. Default is system dependent. <br>
            The minimum and maximum values are 10000 and 30000 milliseconds. <br>
            Must be set before setting the TRAYTIP attribute.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIPBALLOONTITLE
         </td>
         <td>
            [Windows Only] When using the balloon format, the tip can also has a title in a separate area. <br>
            Must be set before setting the TRAYTIP attribute.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYTIPBALLOONTITLEICON
         </td>
         <td>
            [Windows Only] When using the balloon format, the tip can also has a pre-defined icon in the title area. <br>
            Must be set before setting the TRAYTIP attribute.
            <br>
            <br>
            Values can be:<br>
            "0" - No icon (default)<br>
            "1" - Info icon <br>
            "2" - Warning icon<br>
            "3" - Error Icon<br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive [GTK Only]
         </td>
        </tr>
        <tr>
         <td valign=top>
          DIALOGHINT
         </td>
         <td>
            (creation-only) if enabled sets the window type hint to a dialog hint.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive [Windows Only]
         </td>
        </tr>
        <tr>
         <td valign=top>
          BRINGFRONT
         </td>
         <td>
            [Windows Only] (write-only) makes the dialog the foreground window. Use "YES" to activate it. Useful for multithreaded applications.
         </td>
        </tr>
        <tr>
         <td valign=top>
          COMPOSITED
         </td>
         <td>
            [Windows Only] (creation only) controls if the window will have an automatic double buffer for all children. Default is "NO". <br>
            In Windows Vista it is NOT working as expected.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CONTROL
         </td>
         <td>
            [Windows Only] (creation only) Embeds the dialog inside another window.
         </td>
        </tr>
        <tr>
         <td valign=top>
          HELPBUTTON
         </td>
         <td>
            [Windows Only] (creation only) Inserts a help button in the same place of the maximize button. <br>
            It can only be used for dialogs without the minimize and maximize buttons, and with the menu box. <br>
            For the next interaction of the user with a control in the dialog, the callback <a href="callbacks.htm#HELP_CB">HELP_CB</a> will be called instead of 
            the control defined ACTION callback. Possible values: YES, NO. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MAXIMIZED
         </td>
         <td>
            [Windows Only] (read-only) indicates if the dialog is maximized. Can be YES or NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MINIMIZED
         </td>
         <td>
            [Windows Only] (read-only) indicates if the dialog is minimized. Can be YES or NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TASKBARPROGRESS
         </td>
         <td>
            [Windows Only] (write-only) this functionality enables the use of progress bar on a taskbar button <br>
            (Windows 7 or earlier version) (Available only for Visual C++ 10 and above). Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TASKBARPROGRESSSTATE
         </td>
         <td>
            [Windows Only] (write-only) sets the type and state of the progress indicator displayed on a taskbar button. <br>
            Possible values: NORMAL (a green bar), PAUSED (a yellow bar), ERROR (a red bar), INDETERMINATE (a green marquee) and NOPROGRESS (no bar). Default: NORMAL.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TASKBARPROGRESSVALUE
         </td>
         <td>
            [Windows Only] (write-only) updates a progress bar hosted in a taskbar button to show the specific percentage completed of the full operation. <br>
            The value must be between 0 and 100.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TOOLBOX
         </td>
         <td>
            [Windows Only] (creation only) makes the dialog look like a toolbox with a smaller title bar. <br>
            It is only valid if the PARENTDIALOG or NATIVEPARENT attribute is also defined. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            Exclusive MDI [Windows Only]<br>
            --- For the MDI Frame ---<br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIFRAME
         </td>
         <td>
            [Windows Only] (creation only, non inheritable) Configure this dialog as a MDI frame. Can be YES or NO. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIACTIVE
         </td>
         <td>
            [Windows Only] (read-only) Returns the name of the current active MDI child. <br>
            Use <a href="IupGetAttributeHandle.htm">IupGetAttributeHandle</a> to directly retrieve the child handle.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIACTIVATE
         </td>
         <td>
            [Windows Only] (write-only) Name of a MDI child window to be activated. <br>
            If value is "NEXT" will activate the next window after the current active window. <br>
            If value is "PREVIOUS" will activate the previous one. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIARRANGE
         </td>
         <td>
            [Windows Only] (write-only) Action to arrange MDI child windows. <br>
            Possible values: TILEHORIZONTAL, TILEVERTICAL, CASCADE and ICON (arrange the minimized icons).
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDICLOSEALL
         </td>
         <td>
            [Windows Only] (write-only) Action to close and destroy all MDI child windows. <br>
            The <a href="callbacks.htm#CLOSE_CB">CLOSE_CB</a> callback will be called for each child. 
            <br>
            <br>
            IMPORTANT: When a MDI child window is closed it is automatically destroyed. <br>
            The application can override this by returning <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> in <a href="callbacks.htm#CLOSE_CB">CLOSE_CB</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDINEXT
         </td>
         <td>
            [Windows Only] (read-only) Returns the name of the next available MDI child. <br>
            Use <a href="IupGetAttributeHandle.htm">IupGetAttributeHandle</a> to directly retrieve the child handle. <br>
            Must use MDIACTIVE to retrieve the first child. <br>
            If the application is going to destroy the child retrieve the next child before destroying the current.
         </td>
        </tr>
        <tr>
         <td valign=top>
          
         </td>
         <td>
            --- For the MDI Client  (an <a href="IupCanvas.htm">IupCanvas</a>) ---
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDICLIENT
         </td>
         <td>
            [Windows Only] (creation only, non inheritable) Configure the canvas as a MDI client. Can be YES or NO. <br>
            No callbacks will be called. This canvas will be used internally only by the MDI Frame and its MDI Children. <br>
            The MDI frame must have one and only one MDI client. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIMENU
         </td>
         <td>
            [Windows Only] (creation only) Name of an <a href="IupMenu.htm">IupMenu</a> to be used as the Window list of a MDI frame. <br>
            The system will automatically add the list of MDI child windows there.
         </td>
        </tr>
        <tr>
         <td valign=top>
          
         </td>
         <td>
            --- For the MDI Children ---
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDICHILD
         </td>
         <td>
            (creation only) [Windows Only] Configure this dialog to be a MDI child. Can be YES or NO. <br>
            The PARENTDIALOG attribute must also be defined. <br>
            Each MDI child is automatically named if it does not have one. Default: NO.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Callbacks:</b>
         </td>
         <td>
            
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="callbacks.htm#CLOSE_CB">CLOSE_CB</a>
         </td>
         <td>
            Called right before the dialog is closed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          COPYDATA_CB
         </td>
         <td>
            [Windows Only] Called at the first instance, when a second instance is running. <br>
            Must set the global attribute SINGLEINSTANCE to be called.
            <br>
            <br>
            function copydata_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pCmdLine, <a href="integer.htm">integer</a> size)<br>
            ih: identifier of the element that activated the event.<br>
            pCmdLine: command line (char*) of the second instance. <br>
            size: size of the command line string including the null character. 
            <br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DROPFILES_CB
         </td>
         <td>
            [Windows and GTK Only] Action generated when one or more files are dropped in the dialog.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MDIACTIVATE_CB
         </td>
         <td>
            [Windows Only] Called when a MDI child window is activated. <br>
            Only the MDI child receive this message. <br>
            It is not called when the child is shown for the first time.
            <br>
            <br>
            function mdiactivate_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MOVE_CB
         </td>
         <td>
            [Windows and GTK Only] Called after the dialog was moved on screen. <br>
            The coordinates are the same as the <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a> attribute.
            <br>
            <br>
            function move_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> x, y)<br>
            ih: identifier of the element that activated the event.<br>
            x, y: coordinates of the new position. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="callbacks.htm#RESIZE_CB">RESIZE_CB</a>
         </td>
         <td>
            Action generated when the dialog size is changed. If returns <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> the dialog layout is NOT recalculated.
         </td>
        </tr>
        <tr>
         <td valign=top>
          SHOW_CB
         </td>
         <td>
            Called right after the dialog is showed, hidden, maximized, minimized or restored from minimized/maximized.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TRAYCLICK_CB
         </td>
         <td>
            [Windows and GTK Only] Called right after the mouse button is pressed or released over the tray icon. (GTK 2.10)
            <br>
            <br>
            function trayclick_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> button, pressed, dclick)<br>
            ih: identifier of the element that activated the event.<br>
            button: identifies the activated mouse button. Can be: 1, 2 or 3 (left, middle or right). <br>
            Note that this is different from the <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a> canvas callback definition. GTK does not get button=2 messages.
            pressed: indicates the state of the button. Always 1 in GTK.<br>
            dclick: indicates a double click. In GTK double click is simulated.
            <br>
            <br>
            Returns: <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a> will be processed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
            <br>
            Drag & Drop attributes and callbacks are supported. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
            Very simple dialog with a label and a button. The application is closed when the button is pressed.
<!--eucode>
--
-- demo\pGUI\dialog2.exw
-- =====================
--

include pGUI.e

function quit_cb(Ihandle /*self*/)
    return IUP_CLOSE
end function

Ihandle dialog, quit_bt, label, vbox

    IupOpen()

    -- Creating the button   
    quit_bt = IupButton("Quit", "ACTION", Icallback("quit_cb"))

    -- the container with a label and the button    
    label = IupLabel("Very Long Text Label","EXPAND=YES, ALIGNMENT=ACENTER")
    vbox = IupVbox({label, quit_bt},"ALIGNMENT=ACENTER,MARGIN=10x10,GAP=15")

    -- Creating the dialog   
    dialog = IupDialog(vbox,"TITLE=\"Dialog Title\"")
    IupSetAttributeHandle(dialog, "DEFAULTESC", quit_bt)
--  IupSetAttribute(dialog, "SIZE", "200x100") -- (try me!)

    IupShow(dialog)

    IupMainLoop()

    IupDestroy(dialog)
    IupClose()
</eucode-->
<pre>
<font color="#000000"></font><font color="#000080"><i>--
-- demo\pGUI\dialog2.exw
-- =====================
--

</i></font><font color="#008080">include</font><font color="#000000"> pGUI.e

</font><font color="#008080">function</font><font color="#000000"> quit_cb</font><font color="#0000FF">(</font><font color="#5E005E">Ihandle</font><font color="#000080"><i> /*self*/</i></font><font color="#0000FF">)
</font><font color="#008080">    return</font><font color="#004600"> IUP_CLOSE
</font><font color="#008080">end function

</font><font color="#5E005E">Ihandle</font><font color="#000000"> dialog</font><font color="#0000FF">,</font><font color="#000000"> quit_bt</font><font color="#0000FF">,</font><font color="#000000"> label</font><font color="#0000FF">,</font><font color="#000000"> vbox

</font><font color="#5E005E">    IupOpen</font><font color="#0000FF">()

</font><font color="#000080"><i>    -- Creating the button   
</i></font><font color="#000000">    quit_bt</font><font color="#0000FF"> =</font><font color="#5E005E"> IupButton</font><font color="#0000FF">(</font><font color="#008000">"Quit"</font><font color="#0000FF">,</font><font color="#008000"> "ACTION"</font><font color="#0000FF">,</font><font color="#5E005E"> Icallback</font><font color="#800000">(</font><font color="#008000">"quit_cb"</font><font color="#800000">)</font><font color="#0000FF">)

</font><font color="#000080"><i>    -- the container with a label and the button    
</i></font><font color="#000000">    label</font><font color="#0000FF"> =</font><font color="#5E005E"> IupLabel</font><font color="#0000FF">(</font><font color="#008000">"Very Long Text Label"</font><font color="#0000FF">,</font><font color="#008000">"EXPAND=YES, ALIGNMENT=ACENTER"</font><font color="#0000FF">)
</font><font color="#000000">    vbox</font><font color="#0000FF"> =</font><font color="#5E005E"> IupVbox</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">label</font><font color="#0000FF">,</font><font color="#000000"> quit_bt</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000">"ALIGNMENT=ACENTER,MARGIN=10x10,GAP=15"</font><font color="#0000FF">)

</font><font color="#000080"><i>    -- Creating the dialog   
</i></font><font color="#000000">    dialog</font><font color="#0000FF"> =</font><font color="#5E005E"> IupDialog</font><font color="#0000FF">(</font><font color="#000000">vbox</font><font color="#0000FF">,</font><font color="#008000">"TITLE=\"Dialog Title\""</font><font color="#0000FF">)
</font><font color="#5E005E">    IupSetAttributeHandle</font><font color="#0000FF">(</font><font color="#000000">dialog</font><font color="#0000FF">,</font><font color="#008000"> "DEFAULTESC"</font><font color="#0000FF">,</font><font color="#000000"> quit_bt</font><font color="#0000FF">)
</font><font color="#000080"><i>--  IupSetAttribute(dialog, "SIZE", "200x100") -- (try me!)

</i></font><font color="#5E005E">    IupShow</font><font color="#0000FF">(</font><font color="#000000">dialog</font><font color="#0000FF">)

</font><font color="#5E005E">    IupMainLoop</font><font color="#0000FF">()

</font><font color="#5E005E">    IupDestroy</font><font color="#0000FF">(</font><font color="#000000">dialog</font><font color="#0000FF">)
</font><font color="#5E005E">    IupClose</font><font color="#0000FF">()</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupFileDlg.htm">IupFileDlg</a>,
          <a href="IupMessageDlg.htm">IupMessageDlg</a>,
          <a href="IupDestroy.htm">IupDestroy</a>,
          <a href="IupShowXY.htm">IupShowXY</a>,
          <a href="IupShow.htm">IupShow</a>,
          <a href="IupPopup.htm">IupPopup</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
