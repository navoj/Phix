<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">sm_open</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\ipc.e<br>
          <a href="atom.htm">atom</a> pSharedMem = sm_open(<a href="string.htm">string</a> name)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Retrieve the address of a block of shared memory, identified by name, that has already been allocated, usually by another application.
            <br>
            <br>
            Returns: the address of the block of memory identified by name.<br>
            If a block of memory that is identified by name does not already exist, then 
            sm_open() returns one of the <a href="ipc.htm#smerr">predefined error values</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            Each application must call sm_close() to close it&rsquo;s handle to the shared memory.<br>
            A block of shared memory will continue to exist until all handles to it have been closed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="sm_create.htm">sm_create</a>,
          <a href="sm_close.htm">sm_close</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
