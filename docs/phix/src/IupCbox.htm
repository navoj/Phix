<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupCbox</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupCbox(<a href="Ihandle.htm">Ihandles</a> children={}, 
            <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates a void container for positioning elements in absolute coordinates. It is a concrete layout container.
            <br>
            <br>
            The IupCbox is equivalent of a <a href="IupVbox.htm">IupVbox</a> or <a href="IupHbox.htm">IupHbox</a> where all the children have 
            the <a href="common.htm#FLOATING">FLOATING</a> attribute set to YES, but children must use CX and CY attributes instead of the 
            <a href="common.htm#POSITION">POSITION</a> attribute.
            <br>
            <br>
            It should only ever be used when no text string is ever any longer than it currently is, when translated to any language or displayed in any font, all 
            images are a fixed size, and there is no need to reposition elements when the dialog is resized. Which is basically never, not that my negative opinion 
            should stop you from using the quickest tool for a one-off/throwaway utility - however I would hazard that you might regret using this long-term.<br> 
            Technically it is probably possible to manually resize/reposition the elements of an IupCbox, but that would certainly be much more work than using nested 
            <a href="IupHbox.htm">IupHbox</a> and <a href="IupVbox.htm">IupVbox</a>, which are therefore recommended instead.
            <br>
            <br>
            children: list of the elements that will be placed in the box. It can be empty.<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            It does not have a native representation.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            The box can be created with no elements and filled dynamically using <a href="IupAppend.htm">IupAppend</a>() or <a href="IupInsert.htm">IupInsert</a>().
            <br>
            <br>
            The box will NOT expand its children, it will allow its children to expand according to the space left in the box parent. 
            So for the expansion to occur, the children must be expandable with <a href="common.htm#EXPAND">EXPAND</a>!=NO, and there must be room in the box parent.
            <br>
            <br>
            When translating C code, note that internally Phix only uses the C function IupCboxv, which accepts a single null-terminated list, 
            and does not use the variable-parameter C IupCbox function. It is perfectly legal (in Phix) to specify an empty list ({}) for the 
            children parameter, but not NULL.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "YES". See the documentation of the attribute for <a href="common.htm#EXPAND">EXPAND</a> inheritance.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#SIZE">SIZE</a> / <a href="common.htm#RASTERSIZE">RASTERSIZE</a>
         </td>
         <td>
            (non inheritable) Must be defined for each child. If not defined for the box, then it will be the bounding box that includes all children in their position.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#WID">WID</a>
         </td>
         <td>
            (read-only) returns -1 if mapped.
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>,
            <a href="common.htm#CLIENTOFFSET">CLIENTOFFSET</a>,
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            (at Children)
         </td>
        </tr>
        <tr>
         <td valign=top>
          CX, CY
         </td>
         <td>
            (non inheritable) (at children only) Position in pixels of the child relative to the top-left corner of the box. Must be set for each child inside the box.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupVbox.htm">IupVbox</a>,
          <a href="IupHbox.htm">IupHbox</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
