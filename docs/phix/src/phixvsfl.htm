<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Phix vs Functional Languages</h1>
      <div id="mainSection">
        I recently read <a id="ext983" style="color:#9B5565" 
        href="javascript:ExternalLink('ext983','http://www.cs.hmc.edu/~oneill/papers/Sieve-JFP.pdf');">an academic paper</a>
        that contained the following anecdote, which I thought was worth sharing.
        <br>
        <br>
        The Sieve of Eratosthenes has been cited in introductions to lazy functional programming for more than 30 years. 
        In Haskell, the code is as follows
    <pre>
        primes = sieve [2..]
        sieve (p : xs) = p : sieve [x | x <- xs, x ‘mod‘ p > 0]</pre>
        which is not that algorithm at all but in fact something significantly worse than trial division.
        The use of mod is a pretty big clue, and trial division is normally considered the most naive and inefficient way,
        so finding something even less efficient, and then teaching it for over thirty years, ... well.
        <br> 
        <br> 
        Apparently one implementation (not Haskell, but that did not fare well either) was so inefficient that it would take 
        "several seconds" to calculate the 19<sup><small>th</small></sup> prime (ie 71) .. words utterly fail me.
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
