<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">min</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="object.htm">object</a> x1 = min(<a href="object.htm">object</a> x2, <a href="object.htm">object</a> x3)
          <br>
          <i>-- or --</i>
          <br>
          <a href="object.htm">object</a> x1 = min(<a href="sequence.htm">sequence</a> s1)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Returns the smallest of x2 and x3, or the smallest element in <a href="sequence.htm">sequence</a> s1.
             Atoms are considered to be less than sequences. Sequences are compared 
            "alphabetically" (case sensitive, ie 'Z'&lt;'a') starting with the first 
            element until a difference is found.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
x = min(7,5)        -- x is 5
y = min({9,7,5})    -- y is 5
</eucode-->
<pre>
<font color="#000000">x</font><font color="#0000FF"> =</font><font color="#5E005E"> min</font><font color="#0000FF">(</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">)       </font><font color="#000080"><i> -- x is 5
</i></font><font color="#000000">y</font><font color="#0000FF"> =</font><font color="#5E005E"> min</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">9</font><font color="#0000FF">,</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800000">}</font><font color="#0000FF">)   </font><font color="#000080"><i> -- y is 5</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
x = min("one","two")                    -- x is "one"
y = min({"one","two","three","four"})   -- y is "four"
</eucode-->
<pre>
<font color="#000000">x</font><font color="#0000FF"> =</font><font color="#5E005E"> min</font><font color="#0000FF">(</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000">"two"</font><font color="#0000FF">)                   </font><font color="#000080"><i> -- x is "one"
</i></font><font color="#000000">y</font><font color="#0000FF"> =</font><font color="#5E005E"> min</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000">"two"</font><font color="#0000FF">,</font><font color="#008000">"three"</font><font color="#0000FF">,</font><font color="#008000">"four"</font><font color="#800000">}</font><font color="#0000FF">)  </font><font color="#000080"><i> -- y is "four"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pmaths.e (an autoinclude), and the technicalia dropdown, for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="smallest.htm">smallest</a>,
          <a href="equal.htm">equal</a>,
          <a href="compare.htm">compare</a>,
          <a href="max.htm">max</a>,
          <a href="relops.htm">relational operators</a>,
          <a href="seqops.htm">sequence operations</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td valign=top>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            min(s1) is an alias for minsq(s1); the compiler automatically substitutes
            the function being called when only one parameter is passed. However should
            you code minsq(x,y) then expect a compilation error. Both routines are 
            declared in builtins\pmaths.e (an auto-include). Some extra care must be taken
            with routine_id("min"), as obviously no equivalent mapping occurs for the one or two 
            parameter cases.
         <br>
         <br>
            The OpenEuphoria version of min() only accepts a single argument and behaves as 
            minsq(flatten(s1)), whereas the Phix version is <b><i>not</i></b> recursive. Unlike the
            OpenEuphoria version, min(&lt;atom&gt;) generates a runtime error, as does min({}). 
            This function is only compatible with OpenEuphoria when passed a single argument that
            is a non-empty and non-nested sequence of atoms. Unlike several other functions there 
            is no separate sq_min function. Should you (for some strange reason) want 
            min({"one","two","three"}) to yield 'e', or min({}) to yield +inf, then may I politely 
            suggest that you write your own version of this routine.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
