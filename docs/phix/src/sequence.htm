<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">sequence</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          sequence <i>identifier</i>
          <br>
          <i>-- or --</i>
          <br>
          <a href="integer.htm">integer</a> i = sequence(<a href="object.htm">object</a> x)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            This serves to define the sequence type. <br>
            You can also call it like an ordinary function to determine if an object is a sequence.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            When invoked as a function, returns 1 if x is a sequence otherwise returns 0.
            <br>
            <br>
            Note that <code>sequence(x)</code> and <code>not atom(x)</code> are effectively identical.
            <br>
            <br>
            A sequence can hold all string values, but the reverse is not true.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
sequence s
s = {1,2,3}
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">sequence</font><font color="#000000"> s
s</font><font color="#0000FF"> = {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">}</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
if sequence(x) then
    sum = 0
    for i=1 to length(x) do
        sum = sum + x[i]
    end for
else
    -- x must be an atom
    sum = x
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">if</font><font color="#004080"> sequence</font><font color="#0000FF">(</font><font color="#000000">x</font><font color="#0000FF">)</font><font color="#008080"> then
</font><font color="#5E005E">    sum</font><font color="#0000FF"> =</font><font color="#000000"> 0
</font><font color="#008080">    for</font><font color="#000000"> i</font><font color="#0000FF">=</font><font color="#000000">1</font><font color="#008080"> to</font><font color="#7060A8"> length</font><font color="#0000FF">(</font><font color="#000000">x</font><font color="#0000FF">)</font><font color="#008080"> do
</font><font color="#5E005E">        sum</font><font color="#0000FF"> =</font><font color="#5E005E"> sum</font><font color="#0000FF"> +</font><font color="#000000"> x</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">]
</font><font color="#008080">    end for
else
</font><font color="#000080"><i>    -- x must be an atom
</i></font><font color="#5E005E">    sum</font><font color="#0000FF"> =</font><font color="#000000"> x
</font><font color="#008080">end if</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            There are generic versions of the sequence function implemented as :%opSq in builtins\VM\pType.e and :%opSq0 in builtins\VM\pJcc.e that 
            the compiler only invokes as a last resort, preferring instead to inline that functionality if the argument is known to be assigned or the
            result variable, if any, is known to be an integer, ie does not require decref/dealloc. Note that opSeq is an equality test, and must not 
            be confused with opSq, which is the sequence test. The compiler may also completely omit the test and/or any related code, if type 
            inference/propagation determines that the result will always be true or always false.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a>,
          <a href="integer.htm">integer</a>,
          <a href="string.htm">string</a>,
          <a href="object.htm">object</a>,
          <a href="Sequences.htm">Sequences</a>,
          <a href="language.htm">Core Language</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
