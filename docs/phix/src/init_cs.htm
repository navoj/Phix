<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">init_cs</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="integer.htm">integer</a> cs = init_cs()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Create a new critical section. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>init_cs() should normally be invoked before any create_thread() that may use it; on seeing an init_cs()
            within a thread my immediate suspicion would be that the programmer was attempting to create a thread-specific
            critical section, which has no possible practical value, if no other thread can get at it to lock it.
            <br>
            <br>
            As per enter_cs, there is a hidden internal critical section ("stdcs") for use in simple 
            once-only initialisation cases where lock contention is not considered a significant issue.
            <br>
            <br>
            If you have no further use for a critical section, dispose of it using <a href="delete_cs.htm">delete_cs</a>().
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
mycs = init_cs()
...
    enter_cs(mycs)
    ...
    leave_cs(mycs)
...
delete_cs(mycs)
</eucode-->
<pre>
<font color="#000000">mycs</font><font color="#0000FF"> =</font><font color="#5E005E"> init_cs</font><font color="#0000FF">()
...
</font><font color="#5E005E">    enter_cs</font><font color="#0000FF">(</font><font color="#000000">mycs</font><font color="#0000FF">)
    ...
</font><font color="#5E005E">    leave_cs</font><font color="#0000FF">(</font><font color="#000000">mycs</font><font color="#0000FF">)
...
</font><font color="#5E005E">delete_cs</font><font color="#0000FF">(</font><font color="#000000">mycs</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example Program:</b>
         </td>
         <td>
          <font color="#5500FF">
           <b>demo\rosetta\AtomicUrpdates.exw</b>
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="delete_cs.htm">delete_cs</a>,
          <a href="enter_cs.htm">enter_cs</a>,
          <a href="try_cs.htm">try_cs</a>,
          <a href="leave_cs.htm">leave_cs</a>,
          <a href="create_thread.htm">create_thread</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td valign=top>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            The returned value is actually the address of a memory block, divided by 4, and hence always an integer,
            that contains a size followed by operating-system-dependent data.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
