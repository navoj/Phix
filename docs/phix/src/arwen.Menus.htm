<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Menus</h1>
      <div id="mainSection">
       <br>
            Menus are ubiquitous in Windows and are a convenient way of grouping
            related options in a tidy format particularly if there is a large
            number of them. Menus are usually accessed from the MenuBar which
            is located at the top of a window however they can be made to
            &quot;popup&quot; anywhere on the screen. A Menu is really a
            container for one or more Menu elements. Menu elements can be
            either MenuItems or other Menus (aka submenus). When a Menuitem
            is selected by the user then a WM_COMMAND is sent to the
            Menuitem's handler, if any. Submenus do not generate this
            message. A menu is created using:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65b96-2210-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65b96-2210-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
MENU_FILE = create(Menu, text, hBitmap, parent, 0, 0, 0, 0, flags)
</eucode-->
<pre>
<font color="#000000">MENU_FILE</font><font color="#0000FF"> =</font><font color="#7060A8"> create</font><font color="#0000FF">(</font><font color="#000000">Menu</font><font color="#0000FF">,</font><font color="#000000"> text</font><font color="#0000FF">,</font><font color="#000000"> hBitmap</font><font color="#0000FF">,</font><font color="#000000"> parent</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> flags</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            parent is the id of a Window or another Menu or it can be NULL.
            If the parent is a Window then that window must not be a child
            window. If the parent is another menu then the new menu will
            appear as a submenu. If the the parent field is NULL then the
            menu can only be opened with trackPopupMenu().Alternatively, this
            non-owned menu can be inserted into another Menu - see below for
            more details.
       <br>
       <br>
            text is the character string that will appear in the menu.
       <br>
       <br>
            flags can be either a single atom or sequence containing
            menu-specific flags.
       <br>
       <br>
            A MenuItem is created with:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65b96-pq56-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65b96-pq56-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
MENUITEM_OPEN = create(MenuItem, text, hBitmap, parent, 0, 0, 0, 0, flags)
</eucode-->
<pre>
<font color="#000000">MENUITEM_OPEN</font><font color="#0000FF"> =</font><font color="#7060A8"> create</font><font color="#0000FF">(</font><font color="#000000">MenuItem</font><font color="#0000FF">,</font><font color="#000000"> text</font><font color="#0000FF">,</font><font color="#000000"> hBitmap</font><font color="#0000FF">,</font><font color="#000000"> parent</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> flags</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            In this situation the parent field must specify a previously
            created menu. A MenuItem cannot be placed into the top-level menu
            (a window's menubar). A horizontal separator line can be appended
            onto a menu by specifying:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65b96-rn44-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65b96-rn44-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
MENUITEM_SEP = create(MenuItem, "-", 0, parent, 0, 0, 0, 0, flags)
</eucode-->
<pre>
<font color="#000000">MENUITEM_SEP</font><font color="#0000FF"> =</font><font color="#7060A8"> create</font><font color="#0000FF">(</font><font color="#000000">MenuItem</font><font color="#0000FF">,</font><font color="#008000"> "-"</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> parent</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> 0</font><font color="#0000FF">,</font><font color="#000000"> flags</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            NB: The Separator really is a MenuItem in its own right but it
            does not respond to events. When creating menu elements it should
            be noted that some types of flags may be ignored. Please consult
            the source code to determine which ones apply.
       <br>
       <br>
            When a menu is displayed the entries are displayed in a single
            vertical column. It is possible to show additional vertical
            columns by specifying MF_MENUBARBREAK or MF_MENUBREAK in the
            flags field when creating a new menu element. The new Menu
            element will appear in the menu at the top of a new column. The
            only difference between these last two flags is that
            MF_MENUBARBREAK will place a vertical line between the columns.
            Please note that these flags are really an attribute of a Menu or
            MenuItem unlike the Separator line which is a form of MenuItem.
            This means that these flags can be included in the creation of a
            Separator line but there may be no point to doing so since the
            result will look a bit strange in the menu, ie: A new vertical
            column will be formed with the Separator line right at the top of
            it.
       <br>
       <br>
            Any Menu or MenuItem can be enabled or disabled using
            setEnable(). Text labels can be accessed for any Menu or MenuItem
            using getText()&amp; setText(). Any Menu (except top-level menus)
            or MenuItem can be &quot;checked&quot; using setCheck(). If a
            Window is sized so that the the main Menu does not fit on a
            single line then it will &quot;wrap&quot; the excess items onto
            an additional line. A Menu element may be inserted into a Menu
            using :
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65b96-8bef-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65b96-8bef-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
function insertMenu(object item, integer pID, integer pos, atom flags)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">function</font><font color="#000000"> insertMenu</font><font color="#0000FF">(</font><font color="#004080">object</font><font color="#000000"> item</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> pID</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> pos</font><font color="#0000FF">,</font><font color="#004080"> atom</font><font color="#000000"> flags</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            item - either the id of an unowned Menu OR a text string for a
            new MenuItem
       <br>
            pID - id of the destination Menu
       <br>
            pos - position that the item is to be inserted at. If pos is 0
            then the item will be put at the end of the Menu
       <br>
            flags - additional flags you may wish to specify. These are the
            same as are used when a menu element is created
       <br>
       <br>
            If the function succeeds it will return the id of the Menu
            inserted or the id of the new MenuItem (created &amp;) inserted.
            Otherwise it returns 0. Please note that ARWEN will not allow
            MenuItems to be inserted into a top-level menu. According to
            Petzold &quot;Top-level items without popups can be too easily
            chosen by mistake.&quot; so I am enforcing this apparent
            limitation. From a programming perspective a MenuItem in a
            top-level menu is actually a Menu without an associated popup
            menu and it possibly could be quite awkward to maintain code for
            this though I don't know this from experience. Any Menu element
            may be removed from a Menu using:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65b96-c3ab-9999-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65b96-c3ab-9999-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
function removeMenu(integer id)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">function</font><font color="#000000"> removeMenu</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            This routine will remove the menu from it's parent menu but it
            can be inserted later or used as an unowned popup Menu. The
            functions returns True on success or False on failure. Any Menu
            or MenuItem can be destroyed with:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65111-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65111-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
function destroy(integer id)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">function</font><font color="#000000"> destroy</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            The function returns False on failure or non-zero for success
            (actually the number of items successfully destroyed). These 2
            last functions could be used to maintain a 'Recent files' list
            inside a Menu.
       <br>
       <br>
            To trap messages (WM_COMMAND of course) from inserted MenuItems
            you can do so by setting up a handler for the parent Menu OR set
            up a handler for the Menu element when the insertion is made. I
            think the latter way is the most secure thing to do. Any menu
            (dropdown, submenu or unowned) can be accessed with the
            trackPopupMenu() function which will, well, popup a menu where
            you have clicked on the application window, eg:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65222-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65222-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
    void = trackPopupMenu( id, window, flags )
</eucode-->
<pre>
<font color="#000000">    void</font><font color="#0000FF"> =</font><font color="#000000"> trackPopupMenu</font><font color="#0000FF">(</font><font color="#000000"> id</font><font color="#0000FF">,</font><font color="#000000"> window</font><font color="#0000FF">,</font><font color="#000000"> flags</font><font color="#0000FF"> )</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            id is the id of the menu window is the id of the window that you
            wish to associate the menu with
       <br>
            flags are any combination of Button and Mode, ie: Button -
            TPM_LEFTBUTTON or TPM_RIGHTBUTTON Mode - TPM_LEFTALIGN,
            TPM_CENTERALIGN or TPM_RIGHTALIGN (If you put 0 in the flags
            field then you will get the standard behaviour. I may drop these
            flags in the future, we'll see.) To use trackPopupMenu() I trap
            WM_RBUTTONDOWN message in the Window handler routine and then
            make the call as above. You could just as easily trap the
            WM_LBUTTONDOWN message, in fact any message you like such as,say,
            keystrokes. Apparently the proper way is to trap the
            WM_CONTEXTMENU message in the owner window handler. I use the
            current mouse coordinates to dictate where the menu will popup on
            the screen because that is the expected behaviour (and is natural
            since menus are accessed with the mouse etc..) but does anyone
            out there want more flexibility so that they can force the popup
            to appear anywhere on the screen (not just the window y' know) ?
            When the call is made to trackPopupMenu() then it doesn't return
            until the popup has closed. In one way it is like the Dialog
            windows.
       <br>
       <br>
            At times the user may wish to treat a common group of MenuItems
            in a similar way to the behaviour of RadioButtons where one item
            can be marked to the exclusion of all other items in the group.
            You can use this procedure for MenuItems:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z65444-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z65444-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
    checkMenuRadioItem(integer id, integer first, integer last)
</eucode-->
<pre>
<font color="#000000">    checkMenuRadioItem</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> first</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> last</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            This routine will set a radiobutton mark next to the entry id and
            remove any marks against all other members of the range
            (inclusive) as specified from first to last. Please note that all
            items should belong to the same menu. The call may fail or behave
            corruptly if they are not - not that I have actually tested this
            behaviour... At this point in time Accelerator keys for Menus are
            not yet supported.
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
