<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupGLControls</h1>
      <div id="mainSection">
        <h3>OpenGL Controls Library</h3>
        This library<sup><small>1</small></sup> contains several controls that behave much like their standard controls counterpart such as IupLabel, IupButton, IupFrame, and so on. <br>
        But they were designed to be used only embedded in an OpenGL canvas along with the application drawing. <br>
        They will work and be displayed on top of the application drawing and respond to mouse events concurrently with the application mouse events.
        <br>
        <br>
        In order to use these controls the application must use the <a href="IupGLCanvasBox.htm">IupGLCanvasBox</a> controls instead of 
        the <a href="IupGLCanvas.htm">IupGLCanvas</a> control. <br>
        Actually the <a href="IupGLCanvasBox.htm">IupGLCanvasBox</a> inherits from the <a href="IupGLCanvas.htm">IupGLCanvas</a> control so their usage is identical. <br>
        But <a href="IupGLCanvasBox.htm">IupGLCanvasBox</a> can have children and it will manage the display and mouse events of all its children.
        <br>
        <br>
        All the IupGlControls visible elements that can be an embedded children of a <a href="IupGLCanvasBox.htm">IupGLCanvasBox</a> are based on the 
        <a href="IupGLSubCanvas.htm">IupGLSubCanvas</a> control. <br>
        Other IUP elements can also be used. <br>
        It will work seamlessly with elements that are void containers that can also be used, such as IupHbox, IupVbox, IupGridBox, and so on. <br>
        IupFill can also be used, however native elements can also be placed on top although they will not be clipped by IupGLFrame and other IupGlControls containers. <br>
        All functions and resources, like <a href="IupImage.htm">IupImage</a>, are used just like any other IUP control.
        <br>
        <br>
        These controls are drawn by IUP using OpenGL on a <a href="IupGLCanvas.htm">IupGLCanvas</a> control, and are not native controls.
        <br>
        <br>
        The IupGLControlsOpen() function must be called after IupOpen.
        <br>
        <br>
        <sup><small>1</small></sup> In C and Lua, IupGLControls is indeed a separate thing that needs special include files and link directives, 
        but in Phix it is all bundled in with the standard <code>include pGUI.e</code>.
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
