<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupPopup</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            IupPopup(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> x=IUP_CURRENT, y=IUP_CURRENT)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Shows a dialog or menu and restricts user interaction only to the specified element. It is equivalent of creating a Modal dialog is some toolkits.
            <br>
            <br>
            ih: Identifier of a dialog or a menu.
            <br>
            x: horizontal position of the top left corner of the window or menu, relative to the origin of the main screen. The following definitions can also be used:
            <ul>
            <li>IUP_LEFT: Positions the element on the left corner of the screen </li>
            <li>IUP_CENTER: Centers the element on the screen </li>
            <li>IUP_RIGHT: Positions the element on the right corner of the screen </li>
            <li>IUP_MOUSEPOS: Positions the element on the mouse cursor </li>
            <li>IUP_CENTERPARENT: Horizontally centralizes the dialog relative to its parent. Not valid for menus. (Since 3.0) </li>
            <li>IUP_CURRENT: use the current position of the dialog. This is the default value in Lua if the parameter is not defined. Not valid for menus. (Since 3.0) </li>
            </ul>
            y: vertical position of the top left corner of the window or menu, relative to the origin of the main screen. The following definitions can also be used:
            <ul>
            <li>IUP_TOP: Positions the element on the top of the screen </li>
            <li>IUP_CENTER: Vertically centers the element on the screen </li>
            <li>IUP_BOTTOM: Positions the element on the base of the screen </li>
            <li>IUP_MOUSEPOS: Positions the element on the mouse cursor </li>
            <li>IUP_CENTERPARENT: Vertically centralizes the dialog relative to its parent. Not valid for menus. (Since 3.0) </li>
            <li>IUP_CURRENT: use the current position of the dialog. This is the default value in Lua if the parameter is not defined. Not valid for menus. (Since 3.0) </li>
            </ul>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            If another dialog is shown after IupPopup using <a href="IupShow.htm">IupShow</a>, then its interaction will not be inhibited. 
            Every IupPopup call creates a new popup level that inhibits all previous dialogs interactions, but 
            does not disable new ones (even if they were disabled by the Popup, calling <a href="IupShow.htm">IupShow</a> will re-enable 
            the dialog because it will change its popup level). 
            <br>
            <br>
            IMPORTANT: The popup levels must be closed in the reverse order they were created or unpredictable results will occur.<br>
            PL: I have also found that <code>IupHide(x);IupMessage();</code> from within an <code>IupPopup(x);</code> fails badly, presumably the IupHide
            signals the end of a popup level but the IupMessage fouls that up - the message was not shown and the IupDialog x became permanently disabled.
            (I fixed things by setting a flag and displaying the IupMessage <i>after</i> it had returned from IupPopup.)
            <br>
            <br>
            For a dialog this function will only return the control to the application after a callback returns <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a>, 
            <a href="IupExitLoop.htm">IupExitLoop</a> is called, or when the popup dialog is hidden, for example using <a href="IupHide.htm">IupHide</a>. 
            For a menu it returns automatically after a menu item is selected. 
            <br>
            <br>
            IMPORTANT: If a menu item callback returns <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a>, it will also ends the current popup level dialog. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            It will call <a href="IupMap.htm">IupMap</a> for the element.
            <br>
            <br>
            The x and y values are the same as returned by the <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a> attribute.
            <br>
            <br>
            IUP_MOUSEPOS position is the same as if the global attribute CURSORPOS was used to obtain x,y values.
            <br>
            <br>
            See the PLACEMENT attribute for other position and show options.
            <br>
            <br>
            When IUP_CENTERPARENT is used but PARENTDIALOG is not defined then it is replaced by IUP_CENTER.
            <br>
            <br>
            When IUP_CURRENT is used at the first time the dialog is shown then it will be replaced by IUP_CENTERPARENT.
            <br>
            <br>
            The main screen size does not include additional monitors.
            <br>
            <br>
            IupPopup works just like <a href="IupShow.htm">IupShow</a> and <a href="IupShowXY.htm">IupShowXY</a>, but it inhibits interaction with 
            other dialogs that are visible and interrupts the processing until <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a> is returned in a callback, 
            <a href="IupExitLoop.htm">IupExitLoop</a> is called, or the popup dialog is hidden. 
            Although it interrupts the processing, it does not destroy the dialog when it ends. 
            To destroy the dialog, <a href="IupDestroy.htm">IupDestroy</a> must be called.
            <br>
            <br>
            IMPORTANT: Calling IupPopup for an already visible dialog will only update its position and/or size on screen, will NOT change its modal state and will NOT interrupt processing.
            <br>
            <br>
            In GTK and Motif the inactive dialogs will still be able to move, resize and change their Z-order. 
            Although their contents will be inactive, keyboard will be disabled, and they can not be closed from the close box.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupShow.htm">IupShow</a>,
          <a href="IupShowXY.htm">IupShowXY</a>,
          <a href="IupHide.htm">IupHide</a>,
          <a href="IupMap.htm">IupMap</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
