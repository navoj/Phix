<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">ppOpt</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
         ppOpt(<a href="sequence.htm">sequence</a> options) 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
          Permanently (or until next ppOpt call) change selected formatting options.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
          The options are specified as a pair-sequence, selected from:
          <br>
          <br>
          <table>
           <tr>
            <th>Odd element</th>
            <th>Even element</th>
           </tr>
           <tr>
            <td>
             pp_File
            </td>
            <td>
              0:no output (used by ppf())<br>
              1:display to Screen (the default),<br>
              n:an open file handle<br>
            </td>
           </tr>
            <td>
             pp_Nest
            </td>
            <td>
             nest level (see <a href="ppp.htm">main page</a> for examples), default 0
            </td>
           </tr>
           <tr>
            <td>
             pp_Maxlen
            </td>
            <td>
             Split lines at column, default 78
            </td>
           </tr>
           <tr>
            <td>pp_Indent
            </td>
            <td>
             Auto-indent amount, default 0
            </td>
           </tr>
           <tr>
            <td>
             pp_Pause
            </td>
            <td>
             Pause every n lines, default=23. Specify 0 for no pause
            </td>
           </tr>
           <tr>
            <td>
             pp_StrFmt
            </td>
            <td>
             &nbsp;0: print strings as eg "abc" (default)<br>
             -1: ditto, but without quotes.<br>
             -2: as 0, but chars number-only like +1<br>
             -3: as -1, ""<br>
             &nbsp;1: as number only, eg {97, 98, 99}<br>
             &nbsp;3: as number&text, eg {97a, 98b, 99c}<br>
            </td>
           </tr>
           <tr>
            <td>
             pp_IntFmt
            </td>
            <td>
             Integer format, default "%d".  NB: applies to pp_StrFmt 1 as well.
            </td>
           </tr>
           <tr>
            <td>
             pp_FltFmt
            </td>
            <td>
             Float format, default "%.10g"<br>
             Both pp_IntFmt and pp_FltFmt can contain extra text, eg "#%08x (integer)", "%04.1 km", or "%.2f US$"<br>
             When using these routines to format values which may or may not have a fractional element, both the integer and float formats should be set.
            </td>
           </tr>
           <tr>
            <td>
             pp_Ascii
            </td>
            <td>
             Min/max ascii character, default {' ',#7F}<br>
             If sequences are passed, they define ranges.<br>
             Eg, for ISO 8859-1, use {{#20,#A0},{#7E,#FF}}, since characters 0..31 and 127..159 are system codes.<br>
             (Note it is {start1,start2,...},{end1,end2,...})
            </td>
           </tr>
           <tr>
            <td>
             pp_Date
            </td>
            <td>
             "": no special date handling (Default)<br>
             "%04d-%02d-%02d": eg 2003-12-31<br>
             "%02d/%02d/%04d": eg 31/12/2003<br>
             Sequences of 3 integers, in the form {day,month,year} or {year,month,day}, <br>
             with 1&lt;=day&lt;=31, 1&lt;=month&lt;=12, and 1900&lt;=year&lt;=3000 recognised as dates.
            </td>
           </tr>
           <tr>
            <td>
             pp_Brkt
            </td>
            <td>
             "{}" (default) outputs '{' at the start of a (nested) sequence and '}' at the end.<br>
             Must be two characters.
            </td>
           </tr>
           <tr>
            <td>
             pp_Q22
            </td>
            <td>
             Show quotes as #22 (default 0, ie \")
            </td>
           </tr>
          </table>
          <br>
          &nbsp;
          <br>
          The odd elements (first column) are builtin constants [automatically defined in psym.e/syminit()].
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
ppOpt({pp_StrFmt,0,pp_Nest,2,pp_Pause,0}})
ppOpt({pp_Maxlen,9999999})  -- stop ppf() putting \n in results.
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">ppOpt</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#004600">pp_StrFmt</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#004600">pp_Nest</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#004600">pp_Pause</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#800000">}</font><font color="#0000FF">}</font><font color="#00FFFF">)
</font><font color="#5E005E">ppOpt</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#004600">pp_Maxlen</font><font color="#0000FF">,</font><font color="#000000">9999999</font><font color="#800000">}</font><font color="#0000FF">) </font><font color="#000080"><i> -- stop ppf() putting \n in results.</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="pp.htm">pp</a>,
          <a href="ppf.htm">ppf</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
