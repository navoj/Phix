<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">get_proc_address</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
         <a href="atom.htm">atom</a> addr = get_proc_address(<a href="atom.htm">atom</a> lib, <a href="string.htm">string</a> name)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Low-level wrapper of kernel32/GetProcAddress and libdl/dlsym.<br>
            Used by <a href="define_c_func.htm">define_c_func</a>/<a href="define_c_proc.htm">define_c_proc</a>/<a href="define_c_var.htm">define_c_var</a> 
            and for runtime interpretation of inline assembly.<br>
            Applications would not normally use this routine directly.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This is simply some common code that is also needed by the run-time interpreter.
            <br>
            <br>
            There is no validation, implicit or otherwise, that the given symbol name is a function, procedure, variable, or even something else.<br>
            The complete absence of any error checking means that application code is usually much better served by <a href="define_c_func.htm">define_c_func</a> and friends.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="define_c_func.htm">define_c_func</a>,
          <a href="define_c_proc.htm">define_c_proc</a>,
          <a href="define_c_var.htm">define_c_var</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
