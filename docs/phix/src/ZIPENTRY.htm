<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">The ZIPENTRY type</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include builtins\LiteZip.e
            <br>
            <br>
            ZIPENTRY ze = new_ZIPENTRY()
            <br>
            <i>-- or --</i>
            <br>
            <a href="integer.htm#bool">bool</a> res = ZIPENTRY(<a href="object.htm">object</a> o)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            This serves to define the ZIPENTRY type.
            <br>
            <br>
            You <a href="usingtypes.htm#can">could</a> also call it like an ordinary function to determine whether 
            an object is a ZIPENTRY, though I would quite strongly discourage anyone from relying on that.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            The ZIPENTRY type is just a simple internal structure that is used to iterate over the contents of a zip file.
            <br>
            <br>
            While you can of course declare a ZIPENTRY variable without initialising it, or indeed give it a name other 
            than ze, there is no other way to create a valid ZIPENTRY value than by invoking new_ZIPENTRY().
            <br>
            <br>
            When you have finished using a ZIPENTRY variable, dispose of it using <a href="free.htm">free</a>().
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
           <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
            <div class="codeSnippetContainerCodeContainer">
             <div class="codeSnippetToolBar">
              <div class="codeSnippetToolBarText">
               <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_18c73i47-z63b-1876-123h-8b2483c92346');">Copy</a>
              </div>
             </div>
             <div id="CodeSnippetContainerCode_18c73i47-z63b-1876-123h-8b2483c92346" class="codeSnippetContainerCode" dir="ltr">
              <div style="color:Black;">
<!--eucode>
include builtins\LiteZip.e

ZIPENTRY ze = new_ZIPENTRY()
...
free(ze)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> builtins\LiteZip.e

</font><font color="#5E005E">ZIPENTRY</font><font color="#000000"> ze</font><font color="#0000FF"> =</font><font color="#5E005E"> new_ZIPENTRY</font><font color="#0000FF">()
...
</font><font color="#7060A8">free</font><font color="#0000FF">(</font><font color="#000000">ze</font><font color="#0000FF">)</font>
</pre>
              </div>
             </div>
            </div>
           </div>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="free.htm">free</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
