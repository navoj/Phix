<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">curl_easy_init</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\libcurl.e
          <br>
          <br>
          <a href="atom.htm">atom</a> curl = curl_easy_init()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Start a libcurl easy session.
            <br>
            <br>
            This function must be the first function to call, and it returns a CURL easy handle that you must use as input to other functions in the easy interface. 
            This call MUST have a corresponding call to <a href="curl_easy_cleanup.htm">curl_easy_cleanup</a> when the operation is complete.
            <br>
            <br>
            If you did not already call <a href="curl_global_init.htm">curl_global_init</a>, curl_easy_init does it automatically. <br>
            This may be lethal in multi-threaded cases, since curl_global_init is not thread-safe, and it may result in resource problems 
            because there is no corresponding cleanup.
            <br>
            <br>
            You are strongly advised to not allow this automatic behaviour, by calling curl_global_init yourself properly.
            <br>
            <br>
<!--
            Returns a session handle. If this function returns NULL, something went wrong and you cannot use the other curl functions.
-->
            Returns a session handle. <br>
            A fatal error occurs if something goes wrong. <br>
            Legacy code may check for NULL, but that is no longer necessary and the equivalent processing should instead be performed 
            via <a href="try.htm">exception handling</a>, if at all - in general phix takes the perhaps rather stern view that a brutal 
            crash both gives clues and forces a fix, whereas quietly ignoring errors (certainly as opposed to handling them properly)
            can <i>only</i> lead to frustration, irritation, and annoyance.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
           <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
            <div class="codeSnippetContainerCodeContainer">
             <div class="codeSnippetToolBar">
              <div class="codeSnippetToolBarText">
               <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_13a75j95-d3bj-8273-496j-3d5492d71468');">Copy</a>
              </div>
             </div>
             <div id="CodeSnippetContainerCode_13a75j95-d3bj-8273-496j-3d5492d71468" class="codeSnippetContainerCode" dir="ltr">
              <div style="color:Black;">
<!--eucode>
include builtins\libcurl.e

curl_global_init()
atom curl = curl_easy_init()
curl_easy_setopt(curl, CURLOPT_URL, "http://example.com")
atom res = curl_easy_perform(curl)
curl_easy_cleanup(curl)
curl_global_cleanup()
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> builtins\libcurl.e

</font><font color="#5E005E">curl_global_init</font><font color="#0000FF">()
</font><font color="#004080">atom</font><font color="#000000"> curl</font><font color="#0000FF"> =</font><font color="#5E005E"> curl_easy_init</font><font color="#0000FF">()
</font><font color="#5E005E">curl_easy_setopt</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">,</font><font color="#004600"> CURLOPT_URL</font><font color="#0000FF">,</font><font color="#008000"> "http://example.com"</font><font color="#0000FF">)
</font><font color="#004080">atom</font><font color="#000000"> res</font><font color="#0000FF"> =</font><font color="#5E005E"> curl_easy_perform</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">)
</font><font color="#5E005E">curl_easy_cleanup</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">)
</font><font color="#5E005E">curl_global_cleanup</font><font color="#0000FF">()</font>
</pre>
              </div>
             </div>
            </div>
           </div>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="curl_easy_cleanup.htm">curl_easy_cleanup</a>,
          <a href="curl_global_init.htm">curl_global_init</a>,
          <a href="curl_easy_reset.htm">curl_easy_reset</a>,
          <a href="curl_easy_perform.htm">curl_easy_perform</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
