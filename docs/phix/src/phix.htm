<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Introduction</h1>
      <div id="mainSection">
       Phix has several advantages over other programming languages:
       <ul>
        <li>A remarkably simple, yet flexible and powerful language definition
            that is easy to learn and use.
        </li>
        <li>A high-performance interpreter/compiler much faster than most.
        </li>
        <li>Fully managed dynamic data storage with no requirement to allocate
            or free memory. Variables can grow or shrink to any size without
            any manual housekeeping.
        </li>
        <li>Extensive run-time checking for: out-of-bounds subscripts,
            uninitialized variables, bad parameter and variable assignments
            and many more. There are no mysterious machine exceptions -- you
            always get a full English description of any problem that occurs 
            within your program at run-time, with the exact source line it 
            occurs on, along with a full call-stack listing and a dump of all
            of your variable values. Programs can be debugged quickly, easily, 
            and more thoroughly.
        </li>
        <li>A source level debugger allows execution of programs line-by-line.
            Tracing can begin (or end) on any line or for any condition, under 
            full programmer control.
        </li>
        <li>A built-in execution profiler identifies which lines of code take up 
            the highest percentage of execution time, or are executed the most
            often.
        </li>
        <li>Features of the underlying hardware are usually hidden. Programs are 
            not typically aware of word-lengths, bit-representations, byte-order etc.
        </li>
        <li>However, phix also satisfies anyone with a deeper curiosity. There is
            no hidden wall between the language and the operating system to fully 
            understand how things actually work. Phix can create low-level listing 
            files which show the exact addresses and assembly instructions generated, 
            and also includes a program (filedump.exw) that shows every bit and byte 
            in full detail (within reason, for example icons and other such data are 
            shown in raw hex), for Windows PE, Linux ELF, and other format files.
        </li>
        <li>Self-hosted so there is no need to know another language, or obtain any 
            other development tools, to enhance or fix the language itself. You can
            easily download, install, and recompile phix in less than two minutes!
            (See the short webcast at
         <a id="ext001" style="color:#9B5565" href="javascript:ExternalLink('ext001','http://phix.is-great.org/tutorial.php');">http://phix.is-great.org/tutorial.php</a>,
            and also <a href="html/rectools.htm">Recommended Tools</a>.)
        </li>
        <li>The Edita programmers editor is freely available, and written in phix 
            with everything you might expect, including multiple and user-definable 
            syntax colouring, multilingual support, intellisense, autocompletion, 
            code folding, integrated help, window painter, full source, and more.
        </li>
        <li>Standalone executables can be created simply by adding a "-c" flag
            to the normal interpret command (or via Ctrl F5 if using Edita). 
            (The detailed assembly listing mentioned above is likewise just a "-d".)
            There are no complicated compiler options to remember and there is no 
            separate linking phase. A simple "format" directive in the source allows 
            for easy cross-compilation to any other supported system.
        </li>
        <li>Phix programs are naturally generic. The
         <a href="html/example.htm">example program</a>
            shows a single routine that will sort any type of data -- integers,
            floating-point numbers, strings etc. Phix achieves many of the 
            benefits of object-oriented programming, yet in a much simpler way.
        </li>
       </ul>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
