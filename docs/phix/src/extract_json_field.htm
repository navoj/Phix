<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">extract_json_field</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\json.e
          <br>
          <a href="object.htm">object</a> res = extract_json_field(<a href="sequence.htm">sequence</a> json_object, 
                                                                   <a href="string.htm">string</a> string name, 
                                                                   <a href="object.htm">object</a> object dflt="?9/0")
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Retrieves a named field from a <a href="parse_json.htm">JSON_OBJECT</a>.
            <br>
            <br>
            json_object: must be a valid <a href="parse_json.htm">JSON_OBJECT</a>.<br>
            name: the name of the element to retrieve.<br>
            dflt: the value to return if the field is not found.
            <br>
            <br>
            A fatal error occurs if json_object is not a sequence or json_object[1]!=JSON_OBJECT.
            <br>
            <br>
            The result may be a number, a string, a JSON_OBJECT, a JSON_ARRAY, a JSON_KEYWORD, or the value in dflt.
            <br>
            <br>
            If dlft is not overidden, a fatal error occurs if the field is not found (which is useful to trap typos), but 
            of course you can specify any value such as 0, -1, "??", or {} - pick something not likely to be confused with 
            anything in the actual data - the best choice probably being {}, since the equivalents of that from 
            <a href="parse_json.htm">parse_json</a>() are typically {JSON_OBJECT} ("{}") or {JSON_ARRAY} ("[]").
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
           <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
            <div class="codeSnippetContainerCodeContainer">
             <div class="codeSnippetToolBar">
              <div class="codeSnippetToolBarText">
               <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_13a43j95-bk34-1872-986j-5c2483c92833');">Copy</a>
              </div>
             </div>
             <div id="CodeSnippetContainerCode_13a43j95-bk34-1872-986j-5c2483c92833" class="codeSnippetContainerCode" dir="ltr">
              <div style="color:Black;">
<!--eucode>
include builtins\json.e
string str = `{"this":"that","age":29}`
object res = parse_json(str)
if res={JSON_INVALID} then
    ?"error: invalid json"
elsif sequence(res) and res[1]=JSON_OBJECT then
    ?extract_json_field(res,"this") -- "that"
    ?extract_json_field(res,"age")  -- 29
else
    ?res -- ???
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> builtins\json.e
</font><font color="#004080">string</font><font color="#000000"> str</font><font color="#0000FF"> =</font><font color="#008000"> `{"this":"that","age":29}`
</font><font color="#004080">object</font><font color="#000000"> res</font><font color="#0000FF"> =</font><font color="#5E005E"> parse_json</font><font color="#0000FF">(</font><font color="#000000">str</font><font color="#0000FF">)
</font><font color="#008080">if</font><font color="#000000"> res</font><font color="#0000FF">={</font><font color="#004600">JSON_INVALID</font><font color="#0000FF">}</font><font color="#008080"> then
</font><font color="#0000FF">    ?</font><font color="#008000">"error: invalid json"
</font><font color="#008080">elsif</font><font color="#004080"> sequence</font><font color="#0000FF">(</font><font color="#000000">res</font><font color="#0000FF">)</font><font color="#008080"> and</font><font color="#000000"> res</font><font color="#0000FF">[</font><font color="#000000">1</font><font color="#0000FF">]=</font><font color="#004600">JSON_OBJECT</font><font color="#008080"> then
</font><font color="#0000FF">    ?</font><font color="#5E005E">extract_json_field</font><font color="#0000FF">(</font><font color="#000000">res</font><font color="#0000FF">,</font><font color="#008000">"this"</font><font color="#0000FF">)</font><font color="#000080"><i> -- "that"
</i></font><font color="#0000FF">    ?</font><font color="#5E005E">extract_json_field</font><font color="#0000FF">(</font><font color="#000000">res</font><font color="#0000FF">,</font><font color="#008000">"age"</font><font color="#0000FF">) </font><font color="#000080"><i> -- 29
</i></font><font color="#008080">else
</font><font color="#0000FF">    ?</font><font color="#000000">res</font><font color="#000080"><i> -- ???
</i></font><font color="#008080">end if</font>
</pre>
              </div>
             </div>
            </div>
           </div>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="parse_json.htm">parse_json</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
