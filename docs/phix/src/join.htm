<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">join</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="sequence.htm">sequence</a> res = join(<a href="sequence.htm">sequence</a> s, <a href="object.htm">object</a> delim=" ")
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Concatenate all top-level elements of s. Optionally, a delimiter can be specified to
             be placed between each element. If you do not need a delimeter, specify "" or {}.
          <br>
          <br>
            Returns a <a href="string.htm">string</a> or <a href="sequence.htm">sequence</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>join is much more suited to string processing than <a href="flatten.htm">flatten</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>Using the delimiter argument.
         </td>
        </tr>
        <tr>
         <td></td>
         <td>
<!--eucode>
s = join({"abc", "def", "ghi"}, ", ")
-- s is "abc, def, ghi"
s = join({"one", "two", "three"}, "\n") -- (or '\n')
-- s is "one\ntwo\nthree"
</eucode-->
<pre>
<font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> join</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"abc"</font><font color="#0000FF">,</font><font color="#008000"> "def"</font><font color="#0000FF">,</font><font color="#008000"> "ghi"</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000"> ", "</font><font color="#0000FF">)
</font><font color="#000080"><i>-- s is "abc, def, ghi"
</i></font><font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> join</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one"</font><font color="#0000FF">,</font><font color="#008000"> "two"</font><font color="#0000FF">,</font><font color="#008000"> "three"</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000"> "\n"</font><font color="#0000FF">)</font><font color="#000080"><i> -- (or '\n')
-- s is "one\ntwo\nthree"</i></font>
</pre>
            <br>
            Exactly the same result is returned whether the delimiter is a single (ascii) character, or the matching string of length 1.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>If no delimeter is required, specify a null string or an empty sequence.
         </td>
        </tr>
        <tr>
         <td></td>
         <td>
<!--eucode>
s = join({"one\n", "two\n", "three\n"}, "")
-- s is "one\ntwo\nthree\n"
</eucode-->
<pre>
<font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> join</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#008000">"one\n"</font><font color="#0000FF">,</font><font color="#008000"> "two\n"</font><font color="#0000FF">,</font><font color="#008000"> "three\n"</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#008000"> ""</font><font color="#0000FF">)
</font><font color="#000080"><i>-- s is "one\ntwo\nthree\n"</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 3:</b>
         </td>
         <td>join is not restricted to string processing.
         </td>
        </tr>
        <tr>
         <td></td>
         <td>
<!--eucode>
s = join({{1,"file1"},{2,"file2"},{1,"file3"},{3,"file4"}},{})
-- s is {1,"file1",2,"file2",1,"file3",3,"file4"}
ptrsets = {{#040010B8,#040012C4,#0400106C},{#040011A0},{#0400147A,#0400100A}}
inorder = sort(join(ptrsets,{})) -- (might be one for flatten though)
-- inorder is {#0400100A,#0400106C,#040010B8,#040011A0,#040012C4,#0400147A}
</eucode-->
<pre>
<font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> join</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#800080">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"file1"</font><font color="#800080">}</font><font color="#0000FF">,</font><font color="#800080">{</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#008000">"file2"</font><font color="#800080">}</font><font color="#0000FF">,</font><font color="#800080">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000">"file3"</font><font color="#800080">}</font><font color="#0000FF">,</font><font color="#800080">{</font><font color="#000000">3</font><font color="#0000FF">,</font><font color="#008000">"file4"</font><font color="#800080">}</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000">{}</font><font color="#0000FF">)
</font><font color="#000080"><i>-- s is {1,"file1",2,"file2",1,"file3",3,"file4"}
</i></font><font color="#000000">ptrsets</font><font color="#0000FF"> = {</font><font color="#800000">{</font><font color="#000000">#040010B8</font><font color="#0000FF">,</font><font color="#000000">#040012C4</font><font color="#0000FF">,</font><font color="#000000">#0400106C</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">#040011A0</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">#0400147A</font><font color="#0000FF">,</font><font color="#000000">#0400100A</font><font color="#800000">}</font><font color="#0000FF">}
</font><font color="#000000">inorder</font><font color="#0000FF"> =</font><font color="#5E005E"> sort</font><font color="#0000FF">(</font><font color="#5E005E">join</font><font color="#800000">(</font><font color="#000000">ptrsets</font><font color="#0000FF">,</font><font color="#800080">{}</font><font color="#800000">)</font><font color="#0000FF">)</font><font color="#000080"><i> -- (might be one for flatten though)
-- inorder is {#0400100A,#0400106C,#040010B8,#040011A0,#040012C4,#0400147A}</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pflatten.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="flatten.htm">flatten</a>,
          <a href="columnize.htm">columnize</a>,
          <a href="join_path.htm">join_path</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
