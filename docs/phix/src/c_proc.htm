<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">c_proc</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          c_proc(<a href="integer.htm">integer</a> rid, <a href="sequence.htm">sequence</a> s)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Call the C function with
          <font color="#030303">
           <b>routine id</b>
          </font> rid.
             rid must be a valid routine
             id returned by <a href="define_c_proc.htm">define_c_proc</a>(). s is a <a href="sequence.htm">sequence</a> of argument
             values of length n, where n is the number of arguments required
             by the function.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>If the C function does not take any arguments then s should be {}.
             If you pass an argument value which contains a fractional part, 
             where the C function expects a C integer type, the argument is
             be rounded towards 0, for example 5.9 is passed as 5, -5.9 is
             passed as -5.
          <br>
           The C function could be part of a .dll or .so created via a <a href="format.htm">format</a> DLL/SO directive.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
atom user32, hwnd, rect
integer GetClientRect
-- open user32.dll - it contains the GetClientRect C function
user32 = open_dll("user32.dll")
-- GetClientRect is a VOID C function that takes a C int
-- and a C pointer as its arguments:
GetClientRect = define_c_proc(user32, "GetClientRect",
                              {C_INT, C_POINTER})
-- pass hwnd and rect as the arguments
c_proc(GetClientRect, {hwnd, rect})
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">atom</font><font color="#000000"> user32</font><font color="#0000FF">,</font><font color="#000000"> hwnd</font><font color="#0000FF">,</font><font color="#000000"> rect
</font><font color="#004080">integer</font><font color="#000000"> GetClientRect
</font><font color="#000080"><i>-- open user32.dll - it contains the GetClientRect C function
</i></font><font color="#000000">user32</font><font color="#0000FF"> =</font><font color="#7060A8"> open_dll</font><font color="#0000FF">(</font><font color="#008000">"user32.dll"</font><font color="#0000FF">)
</font><font color="#000080"><i>-- GetClientRect is a VOID C function that takes a C int
-- and a C pointer as its arguments:
</i></font><font color="#000000">GetClientRect</font><font color="#0000FF"> =</font><font color="#7060A8"> define_c_proc</font><font color="#0000FF">(</font><font color="#000000">user32</font><font color="#0000FF">,</font><font color="#008000"> "GetClientRect"</font><font color="#0000FF">,
</font><font color="#800000">                              {</font><font color="#004600">C_INT</font><font color="#0000FF">,</font><font color="#004600"> C_POINTER</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#000080"><i>-- pass hwnd and rect as the arguments
</i></font><font color="#5E005E">c_proc</font><font color="#0000FF">(</font><font color="#000000">GetClientRect</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">hwnd</font><font color="#0000FF">,</font><font color="#000000"> rect</font><font color="#800000">}</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="c_func.htm">c_func</a>,
          <a href="define_c_proc.htm">define_c_proc</a>,
          <a href="open_dll.htm">open_dll</a>,
          <a href="ccall.htm">Calling C Functions</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
