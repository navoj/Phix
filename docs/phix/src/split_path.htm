<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">split_path</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            <a href="sequence.htm">sequence</a> res = split_path(<a href="string.htm">string</a> path, 
                                                                 <a href="integer.htm#bool">bool</a> preservetrailsep=false)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            The logical counterpart to <a href="join_path.htm">join_path</a>(), 
            split_path() breaks up a path into a sequence of path fragments.
          <br>
          <br>
            Returns a sequence of sub-strings of path.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            Paths are split on either Windows ('\\') or Linux ('/') separators. <br>
            A leading separator is always preserved, and any consecutive ones are skippped.
            <br>
            <br>
            Note that any preserved cross-platform path separators may cause issues, see 
            technicalia.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
?split_path("C:\\Program Files (x86)\\Phix\\demo\\edix")
    -- {"C:","Program Files (x86)","Phix","demo","edix"}
?split_path("demo\\edix")                           -- {"demo","edix"}
?split_path("\\demo\\edix")                         -- {"\\demo","edix"}
?split_path("usr/home/john")                        -- {"usr","home","john"}
?split_path("/usr/home/john")                       -- {"/usr","home","john"}
?split_path("demo\\edix\\")                         -- {"demo","edix"}
?split_path("demo\\edix\\",preservetrailsep:=true)  -- {"demo","edix\\"}
?split_path("demo\\edix",preservetrailsep:=true)    -- {"demo","edix"}
?split_path("demo/edix/")                           -- {"demo","edix"}
?split_path("demo/edix/",preservetrailsep:=true)    -- {"demo","edix/"}
?split_path("")                                     -- {}
</eucode-->
<pre>
<font color="#000000"></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"C:\\Program Files (x86)\\Phix\\demo\\edix"</font><font color="#0000FF">)
</font><font color="#000080"><i>    -- {"C:","Program Files (x86)","Phix","demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo\\edix"</font><font color="#0000FF">)                          </font><font color="#000080"><i> -- {"demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"\\demo\\edix"</font><font color="#0000FF">)                        </font><font color="#000080"><i> -- {"\\demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"usr/home/john"</font><font color="#0000FF">)                       </font><font color="#000080"><i> -- {"usr","home","john"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"/usr/home/john"</font><font color="#0000FF">)                      </font><font color="#000080"><i> -- {"/usr","home","john"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo\\edix\\"</font><font color="#0000FF">)                        </font><font color="#000080"><i> -- {"demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo\\edix\\"</font><font color="#0000FF">,</font><font color="#000000">preservetrailsep</font><font color="#0000FF">:=</font><font color="#004600">true</font><font color="#0000FF">) </font><font color="#000080"><i> -- {"demo","edix\\"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo\\edix"</font><font color="#0000FF">,</font><font color="#000000">preservetrailsep</font><font color="#0000FF">:=</font><font color="#004600">true</font><font color="#0000FF">)   </font><font color="#000080"><i> -- {"demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo/edix/"</font><font color="#0000FF">)                          </font><font color="#000080"><i> -- {"demo","edix"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">"demo/edix/"</font><font color="#0000FF">,</font><font color="#000000">preservetrailsep</font><font color="#0000FF">:=</font><font color="#004600">true</font><font color="#0000FF">)   </font><font color="#000080"><i> -- {"demo","edix/"}
</i></font><font color="#0000FF">?</font><font color="#5E005E">split_path</font><font color="#0000FF">(</font><font color="#008000">""</font><font color="#0000FF">)                                    </font><font color="#000080"><i> -- {}</i></font>
</pre>
            <br>
            The use of a <a href="procedures.htm#namedparams">named parameter</a> for preservetrailsep makes the intent much clearer.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\psplit.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="join_path.htm">join_path</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td valign=top>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            It may be that many programs, in which the following kind of path separator confusion occurs internally, 
            actually work perfectly fine anyway - but there is certainly no guarantee of that.
            <br>
            <br>
            Note that join_path automatically uses the appropriate platform-specific separator, however should split_path preserve 
            any leading/trailing separators, it will do so without substituting them for the correct platform-specific one, which 
            as shown in this second example may cause mishaps (as marked with (*)). Should this occur, my recommendation would be to 
            use <a href="substitute.htm">substitute</a>() on path before passing it to split_path(), as shown in the third example, 
            or better yet (as long as you do not mind that any relative paths are replaced with fully qualified ones) 
            <a href="get_proper_path.htm">get_proper_path</a>().<br>
            UPDATE: two of the original errors have now been fixed, but one more new one has been found (though my attitude remains
            that you would be far better off properly testing an application on different platforms, rather than complaining that
            this routine occasionally does daft things if you ask it to, such as use /home on Windows or C:\\ on Linux).
            <br>
            <br>
          <b>Example 2:</b>
<!--eucode>
?join_path(split_path("C:\\Program Files (x86)\\Phix\\demo\\edix"))
    -- "C:\\Program Files (x86)\\Phix\\demo\\edix" (on Windows)
?join_path(split_path("demo\\edix"))        -- "demo\\edix" (on Windows)
?join_path(split_path("\\demo\\edix"))      -- "\\demo\\edix" (on Windows)
?join_path(split_path("\\demo\\edix"))      -- "\\demo/edix" (on Linux (*))
?join_path(split_path("home/john"))         -- "home\\john" (on Windows)
?join_path(split_path("/home/john"))        -- "/home/john" (on Linux)
?join_path(split_path("/home/john"))        -- "/home\\john" (on Windows (*))
?join_path(split_path("demo\\edix\\"),1)    -- "demo\\edix\\" (on Windows)
?join_path(split_path("demo/edix/",1),1)    -- "demo\\edix\\" (on Windows) [now fixed]
?join_path(split_path("demo/edix/"),1)      -- "demo/edix/" (on Linux)
?join_path(split_path("demo\\edix\\",1),1)  -- "demo/edix/" (on Linux) [now fixed]
?join_path(split_path(""))                  -- ""
</eucode-->
<pre>
<font color="#000000"></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"C:\\Program Files (x86)\\Phix\\demo\\edix"</font><font color="#800000">)</font><font color="#0000FF">)
</font><font color="#000080"><i>    -- "C:\\Program Files (x86)\\Phix\\demo\\edix" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"demo\\edix"</font><font color="#800000">)</font><font color="#0000FF">)       </font><font color="#000080"><i> -- "demo\\edix" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"\\demo\\edix"</font><font color="#800000">)</font><font color="#0000FF">)     </font><font color="#000080"><i> -- "\\demo\\edix" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"\\demo\\edix"</font><font color="#800000">)</font><font color="#0000FF">)     </font><font color="#000080"><i> -- "\\demo/edix" (on Linux (*))
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"home/john"</font><font color="#800000">)</font><font color="#0000FF">)        </font><font color="#000080"><i> -- "home\\john" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"/home/john"</font><font color="#800000">)</font><font color="#0000FF">)       </font><font color="#000080"><i> -- "/home/john" (on Linux)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"/home/john"</font><font color="#800000">)</font><font color="#0000FF">)       </font><font color="#000080"><i> -- "/home\\john" (on Windows (*))
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"demo\\edix\\"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">)   </font><font color="#000080"><i> -- "demo\\edix\\" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"demo/edix/"</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">)   </font><font color="#000080"><i> -- "demo\\edix\\" (on Windows) [now fixed]
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"demo/edix/"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">)     </font><font color="#000080"><i> -- "demo/edix/" (on Linux)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">"demo\\edix\\"</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">) </font><font color="#000080"><i> -- "demo/edix/" (on Linux) [now fixed]
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#008000">""</font><font color="#800000">)</font><font color="#0000FF">)                 </font><font color="#000080"><i> -- ""</i></font>
</pre>
            <br>
            It is of course join_path(), rather than split_path(), that is giving us the platform-specific results here.
            <br>
            <br>
          <b>Example 3:</b>
<!--eucode>
string {sep1,sep2} = iff(platform()=WINDOWS?{"/","\\"}:{"\\","/"}),
       path = substitute("demo/edix/",sep1,sep2)
--or
--string path = get_proper_path("demo/edix/",1)
-- (path may be "C:\\Program Files (x86)\\Phix\\demo\\edix\\")
?join_path(split_path(path,1))      -- "/demo/edix" (on Linux)
?join_path(split_path(path,1),1)    -- "demo\\edix\\" (on Windows)
?join_path(split_path(path,1),1)    -- "demo/edix/" (on Linux)
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">string</font><font color="#0000FF"> {</font><font color="#000000">sep1</font><font color="#0000FF">,</font><font color="#000000">sep2</font><font color="#0000FF">} =</font><font color="#7060A8"> iff</font><font color="#0000FF">(</font><font color="#7060A8">platform</font><font color="#800000">()</font><font color="#0000FF">=</font><font color="#004600">WINDOWS</font><font color="#0000FF">?</font><font color="#800000">{</font><font color="#008000">"/"</font><font color="#0000FF">,</font><font color="#008000">"\\"</font><font color="#800000">}</font><font color="#0000FF">:</font><font color="#800000">{</font><font color="#008000">"\\"</font><font color="#0000FF">,</font><font color="#008000">"/"</font><font color="#800000">}</font><font color="#0000FF">),
</font><font color="#000000">       path</font><font color="#0000FF"> =</font><font color="#5E005E"> substitute</font><font color="#0000FF">(</font><font color="#008000">"demo/edix/"</font><font color="#0000FF">,</font><font color="#000000">sep1</font><font color="#0000FF">,</font><font color="#000000">sep2</font><font color="#0000FF">)
</font><font color="#000080"><i>--or
--string path = get_proper_path("demo/edix/",1)
-- (path may be "C:\\Program Files (x86)\\Phix\\demo\\edix\\")
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#000000">path</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#800000">)</font><font color="#0000FF">)     </font><font color="#000080"><i> -- "/demo/edix" (on Linux)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#000000">path</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">)   </font><font color="#000080"><i> -- "demo\\edix\\" (on Windows)
</i></font><font color="#0000FF">?</font><font color="#5E005E">join_path</font><font color="#0000FF">(</font><font color="#5E005E">split_path</font><font color="#800000">(</font><font color="#000000">path</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#000000">1</font><font color="#0000FF">)   </font><font color="#000080"><i> -- "demo/edix/" (on Linux)</i></font>
</pre>
            <br>
            I should also note that there is no direct correlation between the preservetrailsep parameter of split_path and the 
            trailsep argument of join_path - sometimes both may be needed, sometimes one but not the other, sometimes the other
            way round, and sometimes neither.
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
