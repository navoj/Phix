<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Internals</h1>
      <div id="mainSection">
        Nothing in this section should be required to write a normal application using phix. 
        However, if you are trying to modify or fix a bug in the compiler itself, or 
        just interested in how things work... I will accept (short, specific) lists of
        suggested items to be added here.
       <br>
       <br>
        Compiler and runtime internals, documented for quick reference. All this information 
        can be found by examining the sources (and if in doubt believe them not this).
        While developers are free to adapt anything they find in builtins\VM for their own
        purposes, both the use of extreme caution, and pedantically renaming everything that
        could possibly affect anything else, should be considered mandatory - I trust it is 
        obvious that spannering anything in builtins\VM will quite likely also spanner the 
        bits that show where an error has occurred (both on screen and in any ex.err).
        <br>
        <br>
        Deliberately incomplete, entries are only added on an ad-hoc basis, as and when I feel 
        that an F1/escape style lookup will benefit me. In other words the whole point is not 
        to learn these things but to have a handy quick reference, precisely because even I use 
        them so very rarely (including my work on the compiler) that I can never remember them.
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <a href="pGetPool.htm">
           <b>pGetPool</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>internal routine to obtain raw memory</td>
        </tr>
        <tr>
         <td valign=top>
          <a href="pFreePool.htm">
           <b>pFreePool</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>internal routine to release raw memory</td>
        </tr>
        <tr>
         <td valign=top>
          <a href="pLoadFlt.htm">
           <b>pLoadFlt</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>finish loading an atom into ST0</td>
        </tr>
        <tr>
         <td valign=top>
          <a href="pStoreFlt.htm">
           <b>pStoreFlt</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>store st0 in a hll atom, as an integer if possible</td>
        </tr>
        <tr>
         <td valign=top>
          <a href="pLoadMint.htm">
           <b>pLoadMint</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>finish loading a machine-sized (32/64-bit) integer</td>
        </tr>
        <tr>
         <td valign=top>
          <a href="pStoreMint.htm">
           <b>pStoreMint</b>
          </a>
         </td>
         <td width=10 align=center valign=top>-</td>
         <td>store a machine-word sized integer, as a float if necessary</td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
