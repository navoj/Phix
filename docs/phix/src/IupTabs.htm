<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupTabs</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupTabs(<a href="Ihandle.htm">Ihandles</a> children={},
            <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates a native container for composing elements in hidden layers with only one layer visible (just like <a href="IupZbox.htm">IupZbox</a>), 
            but its visibility can be interactively controlled. 
            The interaction is done in a line of tabs with titles and arranged according to the tab type. Also known as Notebook in native systems. 
            <br>
            <br>
            children: List of the elements that will be placed in the box. It can be empty.<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            The tab control can be created with no children and filled dynamically using <a href="IupAppend.htm">IupAppend</a>.<br>
            There is no "IupTabItem", instead the children can be any standard element, with <a href="IupHbox.htm">IupHbox</a>
            and <a href="IupVbox.htm">IupVbox</a> being the most likely/useful.
            <br>
            <br>
            The <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a> and <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a> callbacks 
            are called only when the mouse enter or leaves the tabs buttons area.
            <br>
            <br>
            Its children automatically receives a name when the child is appended or inserted into the tabs. 
            <br>
            <br>
            Differently from <a href="IupZbox.htm">IupZbox</a>, IupTabs does NOT depend on the <a href="common.htm#VISIBLE">VISIBLE</a> attribute.
            <br>
            <br>
            In GTK, when the tabs buttons are scrolled, the active tab is also changed.
            <br>
            <br>
            When you change the active tab the focus is usually not changed. 
            If you want to control the focus behavior call <a href="IupSetFocus.htm">IupSetFocus</a> in the TABCHANGE_CB callback. 
            Unfortunately this does not works in GTK and in Motif, because in both systems the focus will be set by the system after the callback is called.
            <br>
            <br>
            Notice that there is no attribute to disable a single tab. 
            This is a design decision of all native toolkits, not a IUP decision. 
            It is so because a disabled tab is a confusing interface situation.
            <br>
            <br>
            In Windows, when an <a href="IupValuator.htm">IupValuator</a> is inside an IupTabs, the tabs disappear when the mouse moves over it after being used in the valuator. 
            A workaround is to put the valuator inside an <a href="IupFrame.htm">IupFrame</a> and then inside the IupTabs, so the problem does not occur. 
            <br>
            <br>
            The utility functions <a href="IupSetAttribute.htm#utility">IupSetAttributeId</a>, <a href="IupGetAttribute.htm#utility">IupGetAttributeId</a>, 
            <a href="IupGetAttribute.htm#utility">IupGetIntId</a>, <a href="IupGetAttribute.htm#utility">IupGetFloatId</a>, 
            <a href="IupSetStrAttribute.htm#utility">IupSetIntId</a>, and <a href="IupSetStrAttribute.htm#utility">IupSetFloatId</a>
            can also be used here. Note that the C function IupSetfAttributeId is not wrapped by pGUI, however that functionality is covered by the
            optional parameters of <a href="IupSetStrAttribute.htm#utility">IupSetStrAttributeId</a>.
            <br>        
            <br>        
            They work just like the respective traditional set and get functions, but the attribute string is complemented with the id value. For example:
<!--eucode>
IupSetAttributeId(ih, "TABTITLE", 3, value) == IupSetAttribute(ih, "TABTITLE3", value)
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">IupSetAttributeId</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "TABTITLE"</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">) ==</font><font color="#5E005E"> IupSetAttribute</font><font color="#0000FF">(</font><font color="#000000">ih</font><font color="#0000FF">,</font><font color="#008000"> "TABTITLE3"</font><font color="#0000FF">,</font><font color="#5E005E"> value</font><font color="#0000FF">)</font>
</pre>
            <br>
            These functions are faster than the traditional functions because they do not need to parse the attribute name string and the application 
            does not need to concatenate the attribute name with the id.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#BGCOLOR">BGCOLOR</a>
         </td>
         <td>
            In Windows and in GTK when in Windows, the tab buttons background it will be always defined by the system. <br>
            In Windows the default background is different from the dialog background. <br>
            Default: the global attribute <a href="iupgattr.htm#DLGBGCOLOR">DLGBGCOLOR</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CHILDOFFSET
         </td>
         <td>
            Allow to specify a position offset for the child. Available for native containers only. 
            It will not affect the natural size, and allows to position controls outside the client area. 
            Format "dxxdy", where dx and dy are integer values corresponding to the horizontal and vertical offsets, respectively, in pixels. Default: 0x0. (since 3.14)
         </td>
        </tr>
        <tr>
         <td valign=top>
          COUNT
         </td>
         <td>
            (read-only) (non inheritable) returns the number of tabs. Same value returned by IupGetChildCount. (since 3.3)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#EXPAND">EXPAND</a>
         </td>
         <td>
            (non inheritable) The default value is "YES".
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#FGCOLOR">FGCOLOR</a>
         </td>
         <td>
            Tabs title color. Default: the global attribute <a href="iupgattr.htm#DLGFGCOLOR">DLGFGCOLOR</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MULTILINE
         </td>
         <td>
            [Windows Only] (non inheritable) Enable multiple lines of tab buttons. This will hide the tab scroll and fits to make all tab buttons visible. 
            Can be "YES" or "NO". Default "NO". It is always enabled when TABTYPE=LEFT or TABTYPE=RIGHT. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          PADDING
         </td>
         <td>
            (non inheritable) internal margin of the tab title. 
            Works just like the MARGIN attribute of the <a href="IupHbox.htm">IupHbox</a> and <a href="IupVbox.htm">IupVbox</a> containers, 
            but uses a different name to avoid inheritance problems. Default value: "0x0". (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          SHOWCLOSE
         </td>
         <td>
            [Windows and GTK Only] (non inheritable) enables the close button on each tab. Default value: "NO". 
            In Windows the close button imply the classic visual for the control. By default when closed the tab is hidden. 
            To change that behavior use the TABCLOSE_CB callback. (since 3.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#SIZE">SIZE</a>
         </td>
         <td>
            (non inheritable) The default size is the smallest size that fits its largest child. All child elements are considered even invisible ones.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABIMAGEn
         </td>
         <td>
            (non inheritable) image name to be used in the respective tab. 
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. 
            n starts at 0. See also <a href="IupImage.htm">IupImage</a>. 
            In Motif, the image is shown only if TABTITLEn is NULL. 
            In Windows and Motif set the <a href="common.htm#BGCOLOR">BGCOLOR</a> attribute before setting the image. 
            When set after map will update the TABIMAGE attribute on the respective child (since 3.10). (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABORIENTATION
         </td>
         <td>
            (non inheritable) Indicates the orientation of tab text, which can be "HORIZONTAL" or "VERTICAL". Default is "HORIZONTAL". 
            VERTICAL is supported only in GTK and in Windows. 
            In Windows, it can NOT be set, it is dependent on the TABTYPE attribute, 
            if TABTYPE=LEFT or TABTYPE=RIGHT then TABORIENTATION=VERTICAL, 
            if TABTYPE=TOP or TABTYPE=BOTTOM then TABORIENTATION=HORIZONTAL. (GTK 2.6)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABVISIBLEn
         </td>
         <td>
            (non inheritable) Allows to hide a tab. n starts at 0. When a tab is hidden the tabs indices are not changed. Can be Yes or No. Default: Yes. (since 3.8)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABTITLEn
         </td>
         <td>
            (non inheritable) Contains the text to be shown in the respective tab title. n starts at 0. If this value is NULL, it will remain empty. 
            The "&" character can be used to define a mnemonic, the next character will be used as key. 
            Use "&&" to show the "&" character instead on defining a mnemonic. 
            The button can be activated from any control in the dialog using the "Alt+key" combination. (mnemonic support since 3.3). 
            When set after map will update the TABTITLE attribute on the respective child (since 3.10). (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABTYPE
         </td>
         <td>
            (non inheritable) (creation only in Windows) Indicates the type of tab, which can be "TOP", "BOTTOM", "LEFT" or "RIGHT". 
            Default is "TOP". 
            In Windows, if LEFT or RIGHT then MULTILINE=YES and TABORIENTATION=VERTICAL are set, 
                        if TOP or BOTTOM then TABORIENTATION=HORIZONTAL is set. 
            In Windows, when not TOP, then visual style is removed from tabs.
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUE
         </td>
         <td>
            (non inheritable) Changes the active tab by its name. The value passed must be the name of one of the elements contained in the tabs. 
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate a child to a name.
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUE_HANDLE
         </td>
         <td>
            (non inheritable) Changes the active tab by its handle. The value passed must be the handle of a child contained in the tabs. 
            When the tabs is created, the first element inserted is set as the visible child. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUEPOS
         </td>
         <td>
            (non inheritable) Changes the active tab by its position, starting at 0. 
            When the tabs is created, the first element inserted is set as the visible child. 
            In GTK, inside the callback the returned value is still the previous one. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#CLIENTSIZE">CLIENTSIZE</a>, 
            <a href="common.htm#CLIENTOFFSET">CLIENTOFFSET</a>,
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            (at Children)
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABTITLE
         </td>
         <td>
            (non inheritable) (at children only) Same as TABTITLEn but set in each child. Works only if set before the child is added to the tabs.
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABIMAGE
         </td>
         <td>
            (non inheritable) (at children only) Same as TABIMAGEn but set in each child. Works only if set before the child is added to the tabs.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Callbacks:</b>
         </td>
         <td>

         </td>
        </tr>
        <tr>
         <td valign=top>
          TABCHANGE_CB
         </td>
         <td>
            Callback called when the user shifts the active tab.
            <br>
            <br>
            function tabchange_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="Ihandle.htm">Ihandle</a> new_tab, <a href="Ihandle.htm">Ihandle</a> old_tab)<br>
            ih: identifier of the element that activated the event.<br>
            new_tab: the new tab selected by the user <br>
            old_tab: the previously selected tab 
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABCHANGEPOS_CB
         </td>
         <td>
            Callback called when the user shifts the active tab. Called only when TABCHANGE_CB is not defined. (since 3.3)
            <br>
            <br>
            function tabchangepos_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> new_pos, old_pos)<br>
            ih: identifier of the element that activated the event.<br>
            new_pos: the new tab position selected by the user <br>
            old_pos: the previously selected tab position
         </td>
        </tr>
        <tr>
         <td valign=top>
          TABCLOSE_CB
         </td>
         <td>
            [Windows and GTK Only] Callback called when the user clicks on the close button (since 3.10). Called only when SHOWCLOSE=Yes.
            <br>
            <br>
            function tabclose_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> pos)<br>
            ih: identifier of the element that activated the event.<br>
            pos: the tab position
            <br>
            <br>
            Returns: the tab will be hidden if the callback returns <a href="callbacks.htm#IUP_DEFAULT">IUP_DEFAULT</a> or if it does not exists. 
            If <a href="callbacks.htm#IUP_CONTINUE">IUP_CONTINUE</a> is returned the tab is removed and its children are destroyed. <br>
            If <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> is returned does nothing.
         </td>
        </tr>
        <tr>
         <td valign=top>
          RIGHTCLICK_CB
         </td>
         <td>
            Callback called when the user clicks on some tab using the right mouse button (since 3.10).
            <br>
            <br>
            function rightclick_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> pos)<br>
            ih: identifier of the element that activated the event.<br>
            pos: the tab position
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Examples:</b>
         </td>
         <td>
            In Windows, the Visual Styles work only when TABTYPE is TOP.
            <br>
            <br>
            <table align="center">
            <tr>
                <th>Windows <br>
                Classic</th>
                <th>Windows <br>
                w/ Styles</th>
            </tr>
            <tr><td class="bg_win2k"><img src="images/iuptabs_win2k_top.png"></td>
                <td class="bg_winxp"><img src="images/iuptabs_winxp_top.png"></td>  </tr>
            <tr><td class="bg_win2k"><img src="images/iuptabs_win2k_left.png"></td>
                <td class="bg_winxp"><img src="images/iuptabs_winxp_left.png"></td> </tr>
            <tr><td class="bg_win2k"><img src="images/iuptabs_win2k_top_multi.png"></td>
                <td class="bg_winxp"><img src="images/iuptabs_winxp_top_multi.png"></td>
            </tr>
            </table>
            <br>
            &nbsp;
            <br>
            GTK is the only one that supports vertical text in the TOP configuration, but does not support multiple lines of tab buttons.
            <br>
            <br>
            <table align="center">
            <tr>
                <th colspan="2">GTK</th>
            </tr>
            <tr><td class="bg_gtk"><img src="images/iuptabs_gtk_top.png"></td>
                <td class="bg_gtk"><img src="images/iuptabs_gtk_left.png"></td>         </tr>
            <tr><td class="bg_gtk"><img src="images/iuptabs_gtk_top_vert.png"></td>
                <td class="bg_gtk"><img src="images/iuptabs_gtk_left_vert.png"></td>
            </tr>
            </table>
            <br>
            &nbsp;
            <br>
            Motif does not support vertical text.
            <br>
            <br>
            <table align="center">
            <tr>
                <th>Motif</th>
            </tr>
            <tr><td class="bg_mot"><img src="images/iuptabs_mot_top.png"></td>  </tr>
            <tr><td class="bg_mot"><img src="images/iuptabs_mot_left.png"></td>  </tr>
          </table>
            <br>
            &nbsp;
            <br>
            A simple and runnable demonstration of IupTabs can be found in demo\pGUI\tabs.exw.
            <br>
            <br>
            Note that the main Edix window uses a "zero height" IupTabs and a single canvas that is fully redrawn on tab change, and 
            filedump.exw does a similar trick over a single listview, hence neither should be copied(/studied) for more traditional uses,
            by which I specifically mean where selecting a different tab automatically hides some controls and displays some others.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupImage.htm">IupImage</a>,
          <a href="IupButton.htm">IupButton</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
