<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupSetStrAttribute</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
           <br>
           <br>
            IupSetStrAttribute(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="nullable_string.htm">nullable_string</a> val, <a href="sequence.htm">sequence</a> data={})
            <br>
            <i>-- or --</i>
            <br>
            IupStoreAttribute(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="nullable_string.htm">nullable_string</a> val, <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Sets an interface element attribute.
            <br>
            <br>
            ih: Identifier of the interface element. If NULL will set in the global environment.
            <br>
            name: name of the attribute.
            <br>
            val: val of the attribute. If NULL the default value will be used.
            <br>
            data: if a non-zero length <a href="sequence.htm">sequence</a> is passed, a sprintf(val,data) is performed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This differs from <a href="IupSetAttribute.htm">IupSetAttribute</a> in that only strings can be stored
            and the given value is internally duplicated.<br>
            As well as being useful for the implicit sprintf, this routine should be used instead of 
            <a href="IupSetAttribute.htm">IupSetAttribute</a> whenever val is volatile/temporary.
            <br>
            <br>
            IupStoreAttribute is the old name for this function, not likely to be removed any time soon.
            <br>
            <a name=IupSetfAttribute></a>
            <br>
            There are no separate wrappers for the C IupSetStrf* functions (old name: IupSetfAttribute), as that functionality is optionally available with <nobr>IupSetStrAttribute().</nobr>
            <br>
              <a name=utility></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Utility Functions</b>
         </td>
         <td>
            The following procedures can also be used to set attributes from the element:
            <br>
            <br>
            <b>IupSetInt</b>(<a href="Ihandle.htm">Ihandles</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> v)<br>
            <b>IupSetIntId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id, v)<br>
            <b>IupSetIntId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col, v)<br>
            <b>IupSetFloat</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetFloatId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetFloatId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetDouble</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetDoubleId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetDoubleId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col, <a href="atom.htm">atom</a> v)<br>
            <b>IupSetRGB</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> r, g, b)<br>
            <b>IupSetRGBId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id, r, g, b)<br>
            <b>IupSetRGBId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col, r, g, b)<br>
            <b>IupSetStrAttributeId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id, 
                                        <a href="nullable_string.htm">nullable_string</a> v=NULL, <a href="sequence.htm">sequence</a> data={})<br>
            <b>IupSetStrAttributeId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col, 
                                         <a href="nullable_string.htm">nullable_string</a> v=NULL, <a href="sequence.htm">sequence</a> data={})
            <br>
            <br>
            id, lin, col: used when the attribute has additional ids.
            <br>
            <br>
            IupStoreAttributeId is the old name for IupSetStrAttributeId, not likely to be removed any time soon.<br>
            IupStoreAttributeId2 is the old name for IupSetStrAttributeId2, not likely to be removed any time soon.
            <br>
            <br>
            Id based attributes are always non inheritable, so all IupSet*Id functions will not propagate the attribute to the children. 
            <br>
            <br>
            All the utility functions use the IupSetStrAttribute* functions internally.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupSetAttribute.htm">IupSetAttribute</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
