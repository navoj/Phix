<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Common Dialog Windows</h1>
      <div id="mainSection">
       <br>
            Common Dialog windows are predefined resources that can provide certain
            specialized functions in a simple to use way. Basically they are
            windows with controls in them and almost all the event processing
            is handled by Windows - from a programmers perspective this is an
            attractive attribute indeed! Examples of Common Dialogs are the
            &quot;Open&quot; and &quot;Save as&quot; windows that appear when
            a user wishes to graphically select a file name from disk to open
            or save a file. The Message Box is a special example of a Dialog
            window.
       <br>
       <br>
            In ARWEN Common Dialog windows are Modal and never Modeless. An
            explanation of these terms is in order: A Modal window is one
            where the message loop handling of the owner application is
            suspended while the Modal window is in operation. A call is made
            to open the Modal window and doesn't return until the user closes
            the Modal window. An example of this is the Message Box window.
            The whole operation can be invoked in a single line which makes
            Modal Dialog windows very convenient. Although the normal message
            loop is interrupted with a Modal Dialog box ARWEN still enables
            the IDLE handler routine to keep operating. A Modeless window is
            a window that doesn't cause any interruption in the flow of the
            application message loop. The main window in an application is
            Modeless and any child windows would normally be too. ARWEN does
            not have an associated Resource Compiler that would enable it to
            fabricate Modeless Common Dialog windows and therefore major
            customisations to Dialog windows are not possible. However, minor
            customisations are possible for certain features of some Common
            Dialog windows when they are initialized. ARWEN allows access to
            these - see the specific calling routines for more details.
            Please note that MessageBox is a special dialog box not normally
            considered as part of the Common Dialog box group but I am
            showing it here since the implementation is essentially
            identical. Only one Common Dialog box can be open for operation
            at any one time with the exception of the Message Box dialog.
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('yello6-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="yello6-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function messageBox(sequence title, sequence text, object style)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> messageBox</font><font color="#0000FF">(</font><font color="#004080">sequence</font><font color="#000000"> title</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#000000"> text</font><font color="#0000FF">,</font><font color="#004080"> object</font><font color="#000000"> style</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            This dialog box was copied from the Euphoria distribution files.
            Basically, all I have done is alter the parameters order so that
            the title of the window is first and then the actual text of the
            window is placed second. The customary sequence of parameters was
            defined long ago by the Win32 API but it didn't seem logical to
            me so I changed it. Do you think I should change it back? I also
            tidied up the constants and added WarnErr(sequence text) and
            FatalErr(sequence text) routines.
       <br>
       <br>
            title
       <br>
            This is the text string that will be displayed in the title bar
            of the window. It could be something like Error or Warning etc..
       <br>
       <br>
            text
       <br>
            This is the message text that will be displayed in the window
            itself. You must insert '\n' characters where you want the line
            breaks to occur. Windows will automatically resize the dialog box
            to encompass the message.
       <br>
       <br>
            style
       <br>
Can be any combination of the following predefined constants:
       <br>
MB_APPLMODAL User must respond before doing something else
       <br>
MB_SYSTEMMODAL All applications suspended until user responds
       <br>
MB_TASKMODAL Similar to MB_APPLMODAL
       <br>
MB_TOPMOST
       <br>
MB_DEFAULT_DESKTOP_ONLY
       <br>
MB_DEFBUTTON1 First button is default button
       <br>
MB_DEFBUTTON2 Second button is default button
       <br>
MB_DEFBUTTON3 Third button is default button
       <br>
MB_DEFBUTTON4 Fourth button is default button
       <br>
MB_OK Message box contains one push button: OK
       <br>
MB_OKCANCEL Message box contains OK and Cancel
       <br>
MB_ABORTRETRYIGNORE Abort, Retry, Ignore
       <br>
MB_YESNOCANCEL Message box contains Yes, No, and Cancel
       <br>
MB_YESNO Message box contains Yes and No
       <br>
MB_RETRYCANCEL Message box contains Retry and Cancel
       <br>
MB_USERICON -- What's this for?
       <br>
MB_ICONASTERISK
       <br>
MB_ICONERROR
       <br>
MB_ICONEXCLAMATION Exclamation-point appears in the box
       <br>
MB_ICONHAND Same as MB_ICONERROR
       <br>
MB_ICONINFORMATION Lowercase letter i in a circle appears
       <br>
MB_ICONQUESTION A question-mark icon appears
       <br>
MB_ICONSTOP Same as MB_ICONERROR
       <br>
MB_ICONWARNING Same as MB_ICONEXCLAMATION
       <br>
MB_RIGHT Windows 95: The text is right-justified
       <br>
MB_RTLREADING Windows 95: For Hebrew and Arabic systems
       <br>
MB_SERVICE_NOTIFICATION Windows NT: The caller is a service
       <br>
MB_SETFOREGROUND Message box becomes the foreground window
       <br>
MB_HELP Windows 95: Help button generates help event
       <br>
       <br>
            One of the following values will be returned when the MessageBox
            is closed:
       <br>
IDERROR -- FAILURE (constant doesn't exist)
       <br>
IDOK -- OK button was selected.
       <br>
IDCANCEL -- Cancel button was selected.
       <br>
IDABORT -- Abort button was selected.
       <br>
IDRETRY -- Retry button was selected.
       <br>
IDIGNORE -- Ignore button was selected.
       <br>
IDYES -- Yes button was selected.
       <br>
IDNO -- No button was selected.
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('jello9-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="jello9-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function getOpenFileName(integer id, sequence fName, sequence filters, object flags)
global function getSaveFileName(integer id, sequence fName, sequence filters, object flags)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> getOpenFileName</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#000000"> fName</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#000000"> filters</font><font color="#0000FF">,</font><font color="#004080"> object</font><font color="#000000"> flags</font><font color="#0000FF">)
</font><font color="#008080">global function</font><font color="#000000"> getSaveFileName</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#000000"> fName</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#000000"> filters</font><font color="#0000FF">,</font><font color="#004080"> object</font><font color="#000000"> flags</font><font color="#0000FF">)</font>
</pre>
          </div>
         </div>
        </div>
       </div>
            These Dialogs allows a user to navigate available disk drives to
            select a file to either 'open' or to 'save as'. Multiple files
            can be selected for getOpenFileName() by including the
            OFN_ALLOWMULTISELECT flag. This flag is ignored for
            getSaveFileName(). If the routine fails it will return NULL
            otherwise it returns the strings of the selection.
       <br>
            If one file is
            selected the return value will be { &quot;path\name&quot; }, eg:
            { &quot;c:\Euphoria\bin\ex.exe&quot; }.
       <br>
            If multiple files are
            selected then the return value will be { &quot;path\&quot;,
            &quot;nameFile1.ext&quot;, &quot;namefile2.ext&quot;, .. }
       <br>
       <br>
            id - ID of the owner window. You can have NULL in this field but
            the IDLE handler will not fire while the Dialog box is open.
       <br>
            fName - default name of the file to appear in the edit field of
            the Dialog.
       <br>
            filters - a sequence of paired strings in this form:
            {displayStr1, patternStr1, displayStr2, patternStr2...} eg, {
            &quot;Text Files&quot;, &quot;*.TXT&quot;, ... } To specify
            multiple filter patterns for a single display string, use a
            semicolon to separate the patterns, eg:
            &quot;*.TXT;*.DOC;*.BAK&quot; This field can contain a blank
            sequence if no filter patterns are required.
       <br>
            flags - any OR'ed combination of the following. Please note that
            other flags exist but are not supported by ARWEN. For a full
            description of each flag please refer to the Win32 API
            documentation.
       <br>
OFN_ALLOWMULTISELECT -- User can select more than one file but,
for some reason, old-style 'Open' dialogs have short directory
names.
       <br>
OFN_CREATEPROMPT
       <br>
OFN_FILEMUSTEXIST
       <br>
OFN_HIDEREADONLY
       <br>
OFN_NOCHANGEDIR
       <br>
OFN_NONETWORKBUTTON
       <br>
OFN_NOVALIDATE
       <br>
OFN_OVERWRITEPROMPT
       <br>
OFN_PATHMUSTEXIST
       <br>
OFN_READONLY
       <br>
OFN_SHAREAWARE
       <br>
OFN_SHOWHELP
       <br>
            If you need to separate the path, filename or file extension from
            the return results of these Dialog boxes then you can use
            extractPathAndName() and extractNameAndExtn().
       <p>
        <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
         <div class="codeSnippetContainerCodeContainer">
          <div class="codeSnippetToolBar">
           <div class="codeSnippetToolBarText">
            <a id="copytext" href="javascript:CopyToClipboard('arachnid3-c3ab-4175-936c-8d2195c81946');">Copy</a>
           </div>
          </div>
          <div id="arachnid3-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
           <div style="color:Black;">
<!--eucode>
global function browseForFolder(sequence message)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> browseForFolder</font><font color="#0000FF">(</font><font color="#004080">sequence</font><font color="#000000"> message</font><font color="#0000FF">)</font>
</pre>
           </div>
          </div>
         </div>
        </div>
        <code>message</code>
            refers to any text information
            that you wish to display when the window opens. If this parameter
            is an empty string then no text message will be shown except what
            is in the title bar which always is <strong>&quot;Browse for
            Folder&quot;</strong> (or language equivalent).
        <br>
        <br>
            This dialog box is a modal window used to visually select a
            directory (aka folder). If the function is successfull it will
            return the fully qualified path to the folder otherwise it will
            return an empty string.
        <br>
        <br>
        <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
         <div class="codeSnippetContainerCodeContainer">
          <div class="codeSnippetToolBar">
           <div class="codeSnippetToolBarText">
            <a id="copytext" href="javascript:CopyToClipboard('rosehip-c3ab-4175-936c-8d2195c81946');">Copy</a>
           </div>
          </div>
          <div id="rosehip-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
           <div style="color:Black;">
<!--eucode>
global function getChooseColor(integer id)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> getChooseColor</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">)</font>
</pre>
           </div>
          </div>
         </div>
        </div>
        <code>id</code>
             is the window owner. If a
            non-Window control is specified the function will abort with a
            warning, otherwise a modal dialog-box is opened. If
        <code>id</code>
            is NULL then the dialog box will
            be modeless - just like another window. Be very careful if you
            want to try this last approach.
        <br>
        <br>
            The Color dialog box enables the user to choose a predefined
            colour or specify their own. The function will return an integer
            specifying either a colour in RGB format or -1. Please note that
            the Red component occupies the lower 8 bits; the green component
            the next 8 bits and the Blue component the upper 8 bits.
        <br>
        <br>
            In theory, the user could edit up to 16 custom colours that they
            might like to provide but if anyone wants this provision to be
            enabled then please contact me to discuss it.
       </p>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('bananafish-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="bananafish-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function choosefont() -- NOT YET IMPLEMENTED
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> choosefont</font><font color="#0000FF">()</font><font color="#000080"> -- NOT YET IMPLEMENTED</font>
</pre>
          </div>
         </div>
        </div>
       </div>
       <p></p>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('fred45-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="fred45-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function pageSetup() -- NOT YET IMPLEMENTED
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> pageSetup</font><font color="#0000FF">()</font><font color="#000080"> -- NOT YET IMPLEMENTED</font>
</pre>
          </div>
         </div>
        </div>
       </div>
       <p></p>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('berk-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="berk-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function printDlg() -- NOT YET IMPLEMENTED
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> printDlg</font><font color="#0000FF">()</font><font color="#000080"> -- NOT YET IMPLEMENTED</font>
</pre>
          </div>
         </div>
        </div>
       </div>
       <p></p>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('findText-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="findText-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function findText() -- NOT YET IMPLEMENTED, not sure if I want to anyway
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> findText</font><font color="#0000FF">()</font><font color="#000080"> -- NOT YET IMPLEMENTED, not sure if I want to anyway</font>
</pre>
          </div>
         </div>
        </div>
       </div>
       <p>
       </p>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('help-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="help-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
global function replaceText() -- NOT YET IMPLEMENTED, not sure if I want to anyway
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">global function</font><font color="#000000"> replaceText</font><font color="#0000FF">()</font><font color="#000080"> -- NOT YET IMPLEMENTED, not sure if I want to anyway</font>
</pre>
          </div>
         </div>
        </div>
       </div>
       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
