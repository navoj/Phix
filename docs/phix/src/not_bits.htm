<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">not_bits</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a> x2 = not_bits(<a href="atom.htm">atom</a> x1)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Perform the logical NOT operation on each bit in x1.<br>
             A bit in x2 will be 1 when the corresponding bit in x1 is 0, and will be 0 when the corresponding bit in x1 is 1.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>This function may be applied to an <a href="atom.htm">atom</a> or sq_not_bits() to all elements
             of a <a href="sequence.htm">sequence</a>. The rules for
          <a href="seqops.htm">sequence operations</a> apply.
          <br>
          <br>
            The argument must be representable as a 32-bit number,
             either signed or unsigned.
          <br>
          <br>
            If you intend to manipulate full 32-bit values, you should
             declare your variables as <a href="atom.htm">atom</a>, rather than integer. 
            The <a href="integer.htm">integer</a> type is limited to 31-bits.
          <br>
          <br>
            Results are treated as signed numbers. They will be
             negative when the highest-order bit is 1.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
a = not_bits(#000000F7)
-- a is -248 (i.e. FFFFFF08 interpreted as a negative number)
</eucode-->
<pre>
<font color="#000000">a</font><font color="#0000FF"> =</font><font color="#7060A8"> not_bits</font><font color="#0000FF">(</font><font color="#000000">#000000F7</font><font color="#0000FF">)
</font><font color="#000080"><i>-- a is -248 (i.e. FFFFFF08 interpreted as a negative number)</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            via :%opNotBits in builtins\VM\pUnary.e (an autoinclude)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="and_bits.htm">and_bits</a>,
          <a href="or_bits.htm">or_bits</a>,
          <a href="xor_bits.htm">xor_bits</a>,
          <a href="int_to_bits.htm">int_to_bits</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
