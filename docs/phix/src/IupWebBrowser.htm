<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupWebBrowser</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupWebBrowser()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates a web browser control. It is responsible for managing the drawing of the web browser content and forwarding of its events.
            <br>
            <br>
            In Linux, the implementation uses the 
            <a id="ext237" style="color:#9B5565" href="javascript:ExternalLink('ext237','http://webkitgtk.org/');">WebKit/GTK+</a>
            , the new GTK+ port of the 
            <a id="ext238" style="color:#9B5565" href="javascript:ExternalLink('ext238','http://webkit.org');">WebKit</a>
            , an open-source web content engine. <br>
            More information about WebKit/GTK+ (building, dependencies, releases, etc) can be seen in Notes section. <br>
            It is only available for Linux26g4 and Linux26g4_64 systems.
            <br>
            <br>
            In Windows, the implementation uses the IupOleControl to embed an instance of the Internet Explorer WebBrowser control. <br>
            A listener interface is used to capture and handle events using the Active Template Library (
            (<a id="ext239" style="color:#9B5565" 
            href="javascript:ExternalLink('ext239','http://msdn.microsoft.com/en-us/library/t9adwcde%28v=VS.80%29.aspx');">ATL</a>)
            classes. <br>
            More information about ATL can be seen in Notes section. So it is only available for Visual C++ compilers.
            <br>
            <br>
            The C IupWebBrowserOpen function must be called after IupOpen, however in Phix this is done automatically internally and hence 
            there is no externally visible wrapper to that routine.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            To learn more about WebKit and WebKitGTK+:<br>
            <a id="ext240" style="color:#9B5565" href="javascript:ExternalLink('ext240','http://webkit.org/');">The WebKit Open Source Project</a><br>
            <a id="ext241" style="color:#9B5565" href="javascript:ExternalLink('ext241','http://webkitgtk.org/');">The WebKitGTK+ web page</a><br>
            <a id="ext242" style="color:#9B5565" href="javascript:ExternalLink('ext242','http://live.gnome.org/WebKitGtk');">WebKitGTK+ wiki</a><br>
            <a id="ext243" style="color:#9B5565" href="javascript:ExternalLink('ext243','http://trac.webkit.org/wiki/WebKitGTK');">WebKitGTK+ tracker</a>
            <br>
            <br>
            To learn more about Internet Explorer WebBrowser control and ATL:<br>
            <a id="ext244" style="color:#9B5565" href="javascript:ExternalLink('ext244','http://msdn.microsoft.com/en-us/library/aa752044%28VS.85%29.aspx');">WebBrowser Control from C/C++</a><br>
            <a id="ext245" style="color:#9B5565" href="javascript:ExternalLink('ext245','http://support.microsoft.com/kb/194179/en-us/');">Creating ATL sinks</a><br>
            <a id="ext246" style="color:#9B5565" href="javascript:ExternalLink('ext246','http://homepage.eircom.net/~codexpert/sink/');">Examples of sinking COM events</a>
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
         </td>
        </tr>

        <tr>
         <td valign=top>
            BACKCOUNT
         </td>
         <td>
            [GTK Only] (read only) gets the number of items that precede the current page.
         </td>
        </tr>
        <tr>
         <td valign=top>
            BACKFORWARD
         </td>
         <td>
            (write only) sets the number of steps away from the current page and loads the history item. <br>
            Negative values represent steps backward while positive values represent steps forward.
         </td>
        </tr>
        <tr>
         <td valign=top>
            COPY
         </td>
         <td>
            (write only) copy the selection to the clipboard. (since 3.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
            FORWARDCOUNT
         </td>
         <td>
            [GTK Only] (read only) gets the number of items that succeed the current page.
         </td>
        </tr>
        <tr>
         <td valign=top>
            HTML
         </td>
         <td>
            (write only) loads a given HTML content.
         </td>
        </tr>
        <tr>
         <td valign=top>
            ITEMHISTORYid
         </td>
         <td>
            [GTK Only] (read only) Returns the URL associated with a specific history item. <br>
            Negative "id" value represents a backward item while positive "id" value represents a forward item ("0" represents the current item).
         </td>
        </tr>
        <tr>
         <td valign=top>
            PRINT
         </td>
         <td>
            (write only) shows the print dialog. (since 3.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
            RELOAD
         </td>
         <td>
            (write only) reloads the page in the webbrowser.
         </td>
        </tr>
        <tr>
         <td valign=top>
            SELECTALL
         </td>
         <td>
            (write only) selects all contents. (since 3.10)
         </td>
        </tr>
        <tr>
         <td valign=top>
            STATUS
         </td>
         <td>
            (read only) returns the load status. Can be "LOADING", "COMPLETED" or "FAILED".
         </td>
        </tr>
        <tr>
         <td valign=top>
            STOP
         </td>
         <td>
            (write only) stops any ongoing load in the webbrowser.
         </td>
        </tr>
        <tr>
         <td valign=top>
            VALUE
         </td>
         <td>
            sets a specified URL to load into the webbrowser, or retrieve the current URL.
         </td>
        </tr>
        <tr>
         <td valign=top>
            ZOOM
         </td>
         <td>
            the zoom factor of the browser in percent. No zoom is 100%. (since 3.10)
         </td>
        </tr>
            
        <tr>
         <td valign=top>
            also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#RASTERSIZE">RASTERSIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Callbacks:</b>
         </td>
         <td>

         </td>
        </tr>

        <tr>
         <td valign=top>
          COMPLETED_CB
         </td>
         <td>
            action generated when a page successfully completed. <br>
            Can be called multiple times when a frame set loads its frames, or when a page loads also other pages.
            <br>
            <br>
            function completed_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that completed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          ERROR_CB
         </td>
         <td>
            action generated when page load fail.
            <br>
            <br>
            function error_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that caused the error.
         </td>
        </tr>
        <tr>
         <td valign=top>
          NAVIGATE_CB
         </td>
         <td>
            action generated when the browser requests a navigation to another page. <br>
            It is called before navigation occurs. <br>
            Can be called multiple times when a frame set loads its frames, or when a page loads also other pages.
            <br>
            <br>
            function navigate_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address to navigate to.
            <br>
            <br>
            Returns: IUP_IGNORE will abort navigation (since 3.4).
         </td>
        </tr>
        <tr>
         <td valign=top>
          NEWWINDOW_CB
         </td>
         <td>
            action generated when the browser requests a new window.
            <br>
            <br>
            function newwindow_cb(Ihandle ih, atom pUrl)<br>
            ih: identifier of the element that activated the event.<br>
            pUrl: (char*) the URL address that is opened in the new window.
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#UNMAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
         </td>
        </tr>

        <tr>
         <td valign=top>
          Examples
         </td>
         <td>
            <div align="center">
             <img border="0" src="images/iupwebbrowser.png"/>
            </div>
         </td>
        </tr>

       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
