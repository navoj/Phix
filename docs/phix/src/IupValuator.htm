<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupValuator</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupValuator(<a href="nullable_string.htm">nullable_string</a> orientation=NULL, 
            [[<a href="nullable_string.htm">nullable_string</a> action=NULL,] <a href="Icallback.htm">cbfunc</a> func=NULL,] 
            <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates a Valuator control. Selects a value in a limited interval. Also known as Scale, Slider, or Trackbar in native systems.
            <br>
            <br>
            orientation: optional orientation of valuator. Can be NULL. See ORIENTATION attribute.<br>
            action: Name of the action specified by func, defaults to "ACTION" (you probably need "VALUECHANGED_CB"), ignored if func is NULL.<br>
            func: a callback address, usually specified as <a href="Icallback.htm">Icallback</a>(<i>"name"</i>).<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.<br>
            This is a <a href="paranormal.htm">paranormalised function</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            In Motif, after the user clicks the handler a KILLFOCUS will be ignored when the control loses its focus.
            <br>
            <br>
            Keyboard Mapping<br>
            This is the default mapping when INVERTED has the default value, or ORIENTATION=HORIZONTAL+INVERTED=NO.
            <br>
            <br>
            Keys Action for HORIZONTAL <br>
            Right Arrow move right, increment by one step <br>
            Left Arrow move left, decrement by one step <br>
            Ctrl+Right Arrow or PgDn move right, increment by one page step <br>
            Ctrl+Left Arrow or PgUp move left, decrement by one page step <br>
            Home move all left, set to minimum <br>
            End move all right, set to maximum 
            <br>
            <br>
            This is the default mapping when INVERTED has the default value, or ORIENTATION=VERTICAL+INVERTED=YES.
            <br>
            <br>
            Keys Action for VERTICAL <br>
            Up Arrow move up, increment by one step <br>
            Down Arrow move down, decrement by one step <br>
            Ctrl+Up Arrow or PgUp move up, increment by one page step <br>
            Ctrl+Down Arrow or PgDn move down, decrement by one page step <br>
            Home move all up, set to maximum <br>
            End move all down, set to minimum 
            <br>
            <br>
            Visually all the keys move to the same direction independent from the INVERTED attribute.
            <br>
            <br>
            Semantically all the keys change the value depending on the INVERTED attribute.
            <br>
            <br>
            This behavior differs slightly from the native controls (Home and End keys are different). But it is the same in all systems.
            <br>
            <br>
            Invokes the C function IupVal. In pGUI, <nobr>IupVal()</nobr> and <nobr>IupValuator()</nobr> are identical; use whichever you prefer. 
            I felt there was something a little ambiguous about "IupVal" (eg value/valid), whereas "IupValuator" should cause fewer false assumptions.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#BGCOLOR">BGCOLOR</a>
         </td>
         <td>
            transparent in all systems except in Motif. It will use the background color of the native parent.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CANFOCUS
         </td>
         <td>
            (creation only) (non inheritable) enables the focus traversal of the control. In Windows the control will still get the focus when clicked. Default: YES. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          INVERTED
         </td>
         <td>
            Invert the minimum and maximum positions on screen. 
            When INVERTED=YES maximum is at top and left (minimum is bottom and right), when INVERTED=NO maximum is at bottom and right (minimum is top and left). 
            The initial value depends on ORIENTATION passed as parameter on creation, if ORIENTATION=VERTICAL default is YES, if ORIENTATION=HORIZONTAL default is NO. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          MAX
         </td>
         <td>
            Contains the maximum valuator value. Default is "1". When changed the display will not be updated until VALUE is set.
         </td>
        </tr>
        <tr>
         <td valign=top>
          MIN
         </td>
         <td>
            Contains the minimum valuator value. Default is "0". When changed the display will not be updated until VALUE is set.
         </td>
        </tr>
        <tr>
         <td valign=top>
          PAGESTEP
         </td>
         <td>
            Controls the increment for pagedown and pageup keys. It is not the size of the increment. 
            The increment size is "pagestep*(max-min)", so it must be 0<pagestep<1. Default is "0.1".
         </td>
        </tr>
        <tr>
         <td valign=top>
          <a href="common.htm#RASTERSIZE">RASTERSIZE</a>
         </td>
         <td>
            (non inheritable) The initial size is 100 pixels along the major axis, and the handler normal size on the minor axis. 
            If there are ticks then they are added to the natural size on the minor axis. The handler can be smaller than the normal size. 
            Set to NULL to allow the automatic layout use smaller values.
         </td>
        </tr>
        <tr>
         <td valign=top>
          SHOWTICKS
         </td>
         <td>
            [Windows and Motif Only] The number of tick marks along the valuator trail. 
            Minimum value is "2". Default is "0", in this case the ticks are not shown. 
            It can not be changed to 0 from a non zero value, or vice-versa, after the control is mapped. GTK does not support ticks.
         </td>
        </tr>
        <tr>
         <td valign=top>
          STEP
         </td>
         <td>
            Controls the increment for keyboard control and the mouse wheel. It is not the size of the increment. 
            The increment size is "step*(max-min)", so it must be 0<step<1. Default is "0.01".
         </td>
        </tr>
        <tr>
         <td valign=top>
          TICKSPOS
         </td>
         <td>
            [Windows Only] (creation only) Allows to position the ticks in both sides (BOTH) or in the reverse side (REVERSE). 
            Default: NORMAL. 
            The normal position for horizontal orientation is at the top of the control, and for vertical orientation is at the left of the control. 
            In Motif, the ticks position is always normal. (since 3.0)
         </td>
        </tr>
        <tr>
         <td valign=top>
          ORIENTATION
         </td>
         <td>
            (non inheritable) Informs whether the valuator is "VERTICAL" or "HORIZONTAL". 
            Vertical valuators are bottom to up, and horizontal valuators are left to right variations of min to max (but can be inverted using INVERTED). 
            Default: "HORIZONTAL".
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUE
         </td>
         <td>
            (non inheritable) Contains a number between MIN and MAX, indicating the valuator position. Default: "0.0".
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="common.htm#ACTIVE">ACTIVE</a>, 
            <a href="common.htm#EXPAND">EXPAND</a>, 
            <a href="common.htm#FONT">FONT</a>, 
            <a href="common.htm#SCREENPOSITION">SCREENPOSITION</a>, 
            <a href="common.htm#POSITION">POSITION</a>, 
            <a href="common.htm#MINSIZE">MINSIZE</a>, 
            <a href="common.htm#MAXSIZE">MAXSIZE</a>,
            <a href="common.htm#WID">WID</a>,
            <a href="common.htm#TIP">TIP</a>, 
            <a href="common.htm#SIZE">SIZE</a>,
            <a href="common.htm#ZORDER">ZORDER</a>,
            <a href="common.htm#VISIBLE">VISIBLE</a>: also accepted. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Callbacks:</b>
         </td>
         <td>
            <small><i>(the names of callback routines are suggestions only)</i></small>     <!-- DEV (copy elsewhere) -->
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUECHANGED_CB
         </td>
         <td>
            Called after the value was interactively changed by the user.
            <br>
            <br>
            function valuechanged_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
            <br>
            <br>
            [PL: moved from notes:] This control replaces the old IupVal implemented in the additional controls. 
            <br>
            The old callbacks are still supported but called only if the VALUECHANGED_CB callback is not defined. 
            <br>
            The MOUSEMOVE_CB callback is only called when the user moves the handler using the mouse. <br>
            The BUTTON_PRESS_CB callback is called only when the user press a key that changes the position of the handler. <br>
            The BUTTON_RELEASE_CB callback is called only when the user releases the mouse button after moving the handler.
         </td>
        </tr>
        <tr>
         <td valign=top>
          also
         </td>
         <td>
            <a href="callbacks.htm#MAP_CB">MAP_CB</a>,
            <a href="callbacks.htm#MAP_CB">UNMAP_CB</a>,
            <a href="callbacks.htm#DESTROY_CB">DESTROY_CB</a>, 
            <a href="callbacks.htm#GETFOCUS_CB">GETFOCUS_CB</a>, 
            <a href="callbacks.htm#KILLFOCUS_CB">KILLFOCUS_CB</a>, 
            <a href="callbacks.htm#ENTERWINDOW_CB">ENTERWINDOW_CB</a>,
            <a href="callbacks.htm#LEAVEWINDOW_CB">LEAVEWINDOW_CB</a>, 
            <a href="callbacks.htm#K_ANY">K_ANY</a>, 
            <a href="callbacks.htm#HELP_CB">HELP_CB</a>: All common callbacks are supported.
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
