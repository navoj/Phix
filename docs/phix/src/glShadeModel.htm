<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glShadeModel</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glShadeModel(<a href="integer.htm">integer</a> mode)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            The glShadeModel procedure selects flat or smooth shading.
            <br>
            <br>
            mode: A symbolic value representing a shading technique. Accepted values are GL_FLAT and GL_SMOOTH. The default is GL_SMOOTH.
            <br>
            <br>
            If mode is neither of the above values, <a href="glGetError.htm">glGetError</a>() will return GL_INVALID_ENUM.<br>
            If this routine is called between glBegin and glEnd, <a href="glGetError.htm">glGetError</a>() will return GL_INVALID_OPERATION.
         </td>
        </tr>
         <td valign=top>
          <b>Remarks</b>
         </td>
         <td>
            OpenGL primitives can have either flat or smooth shading. <br>
            Smooth shading, the default, causes the computed colors of vertices to be interpolated as the primitive is rasterized, 
            typically assigning different colors to each resulting pixel fragment. <br>
            Flat shading selects the computed color of just one vertex and assigns it to all the pixel fragments generated by rasterizing a single primitive. <br>
            In either case, the computed color of a vertex is the result of lighting, if lighting is enabled, or it is the current color at the time the vertex was specified, if lighting is disabled.
            <br>
            <br>
            Flat and smooth shading are indistinguishable for points. <br>
            Counting vertices and primitives from one, starting when glBegin is issued, each flat-shaded line segment i is given the computed color of vertex i + 1, its second vertex. <br>
            Counting similarly from one, each flat-shaded polygon is given the computed color of the vertex listed in the following table. <br>
            This is the last vertex to specify the polygon in all cases except single polygons, where the first vertex specifies the flat-shaded color.
            <br>
            <br>
            <div id="images" class="images" align="center">
            <table>
             <tr><th bgcolor="#C0C0C0">Primitive type of polygon i</th>             <th bgcolor="#C0C0C0">Vertex</th></tr>
             <tr><td align="center">Single polygon (I=1)</td>   <td align="center">1</td> </tr>
             <tr><td align="center">Triangle strip</td>         <td align="center">i + 2</td> </tr>
             <tr><td align="center">Triangle fan</td>           <td align="center">i + 2</td> </tr>
             <tr><td align="center">Independent triangle</td>   <td align="center">3I</td> </tr>
             <tr><td align="center">Quad strip</td>             <td align="center">2i + 2</td> </tr>
             <tr><td align="center">Independent quad</td>       <td align="center">4I</td> </tr>
            </table>
            </div>
            <hr style="visibility:hidden; clear:both">
            Flat and smooth shading are specified by glShadeModel with mode set to GL_FLAT and GL_SMOOTH, respectively.
            <br>
            <br>
            The following function retrieves information related to glShadeModel: <br>
            glGet with argument GL_SHADE_MODEL
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glBegin.htm">glBegin</a>,
          <a href="glGetError.htm">glGetError</a>,
          <a href="xor_bits.htm">xor_bits</a>,
          <a href="glBegin.htm">glEnd</a>,
          <a href="int_to_bits.htm">int_to_bits</a>
<br>
//glBegin
glColor
//glEnd
glLight
glLightModel

         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
