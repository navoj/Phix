<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">curl_multi_add_handle</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include builtins\libcurl.e
            <br>
            <br>
            <a href="CURLcode.htm#CURLMcode">CURLMcode</a> curlmcode = curl_multi_add_handle(<a href="atom.htm">atom</a> curlm, curl)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Add an easy handle to a multi session.
            <br>
            <br>
            curlm: the multi_handle to which to add an easy_handle.<br>
            curl: the easy_handle to be added to the multi_handle.
            <br>
            <br>
            Adds a standard easy handle to the multi stack. This function call will make this multi_handle control the specified easy_handle.
            <br>
            <br>
            While an easy handle is added to a multi stack, you cannot and you must not use <a href="curl_easy_perform.htm">curl_easy_perform</a> on that handle. <br>
            After having removed the easy handle from the multi stack again, it is perfectly fine to use it with the easy interface again.
            <br>
            <br>
            If the easy handle is not set to use a shared (<a href="CURLoption.htm#CURLOPT_SHARE">CURLOPT_SHARE</a>) or the outdated global DNS cache 
            (<a href="CURLoption.htm#CURLOPT_DNS_USE_GLOBAL_CACHE">CURLOPT_DNS_USE_GLOBAL_CACHE</a>), it will be made to use the DNS cache that is shared 
            between all easy handles within the multi handle when curl_multi_add_handle is called.
            <br>
            <br>
            When an easy interface is added to a multi handle, it will use a shared connection cache owned by the multi handle. <br>
            Removing and adding new easy handles will not affect the pool of connections or the ability to do connection re-use.
            <br>
            <br>
            If you have <a href="curl_multi_setopt.htm:#CURLMOPT_TIMERFUNCTION">CURLMOPT_TIMERFUNCTION</a> set in the multi handle 
            (and you really should if you&rsquo;re working event-based with curl_multi_socket_action and friends), that callback will be called 
            from within this function to ask for an updated timer so that your main event loop will get the activity on this handle to get started.
            <br>
            <br>
            The easy handle will remain added to the multi handle until you remove it again with 
            <a href="curl_multi_remove_handle.htm">curl_multi_remove_handle</a> - even when a transfer with that specific easy handle is completed.
            <br>
            <br>
            You should remove the easy handle from the multi stack before you terminate first the easy handle and then the multi handle:
            <br>
            <br>
            1 - <a href="curl_multi_remove_handle.htm">curl_multi_remove_handle</a>
            <br>
            <br>
            2 - <a href="curl_easy_cleanup.htm">curl_easy_cleanup</a>
            <br>
            <br>
            3 - <a href="curl_multi_cleanup.htm">curl_multi_cleanup</a>
            <br>
            <br>
            Return value <a href="CURLcode.htm#CURLMcode">CURLMcode</a> type, general libcurl multi interface error code.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
SEE ALSO
, , , curl_multi_socket_action
          <a href="curl_multi_cleanup.htm">curl_multi_cleanup</a>,
          <a href="curl_multi_init.htm">curl_multi_init</a>,
          <a href="curl_multi_setopt.htm">curl_multi_setopt</a>,
          <a href="curl_easy_init.htm">curl_easy_init</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
