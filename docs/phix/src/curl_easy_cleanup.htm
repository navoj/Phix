<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">curl_easy_cleanup</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include builtins\libcurl.e
          <br>
          <br>
          curl_easy_cleanup(<a href="atom.htm">atom</a> curl)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            End a libcurl easy session.
            <br>
            <br>
            This procedure must be the last call for an easy session. <br>
            It is the opposite of the <a href="curl_easy_init.htm">curl_easy_init</a> function and must be called with the same handle that call returned.
            <br>
            <br>
            This might close all connections this handle has used and possibly has kept open until now - unless it was attached to a multi handle while doing the transfers. <br>
            Do not call this function if you intend to transfer more files: re-using handles is a key to good performance with libcurl.
            <br>
            <br>
            Occasionally you may get your progress callback or header callback called from within curl_easy_cleanup (if previously set for the handle using 
            <a href="curl_easy_setopt.htm">curl_easy_setopt</a>). <br>
            For instance if libcurl decides to shut down the connection and the protocol is of a kind that requires a command/response sequence before disconnect. <br>
            Examples of such protocols are FTP, POP3 and IMAP.
            <br>
            <br>
            Any use of the handle after this function has been called and has returned, is illegal.<br>
            curl_easy_cleanup kills the handle and all memory associated with it!
            <br>
            <br>
            For libcurl versions before 7.17.0,: after you&rsquo;ve called this function, you can safely remove all the strings you&rsquo;ve 
            previously told libcurl to use, as it won&rsquo;t use them anymore now.<br>
            <small>[PL same deal as per <a href="IupRawStringPtr.htm">IupRawStringPtr</a>(); post-7.17.0 it makes internal copies, as per
            <a href="IupSetStrAttribute.htm">IupSetStrAttribute</a>() vs. <a href="IupSetAttribute.htm">IupSetAttribute</a>(), so you can
            safely discard strings immediately, long before calling curl_easy_cleanup.]</small>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
           <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
            <div class="codeSnippetContainerCodeContainer">
             <div class="codeSnippetToolBar">
              <div class="codeSnippetToolBarText">
               <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_13a75j95-d3bj-8273-123j-3d5492d71468');">Copy</a>
              </div>
             </div>
             <div id="CodeSnippetContainerCode_13a75j95-d3bj-8273-123j-3d5492d71468" class="codeSnippetContainerCode" dir="ltr">
              <div style="color:Black;">
<!--eucode>
include builtins\libcurl.e

curl_global_init()
atom curl = curl_easy_init()
curl_easy_setopt(curl, CURLOPT_URL, "http://example.com")
atom res = curl_easy_perform(curl)
curl_easy_cleanup(curl)
curl_global_cleanup()
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> builtins\libcurl.e

</font><font color="#5E005E">curl_global_init</font><font color="#0000FF">()
</font><font color="#004080">atom</font><font color="#000000"> curl</font><font color="#0000FF"> =</font><font color="#5E005E"> curl_easy_init</font><font color="#0000FF">()
</font><font color="#5E005E">curl_easy_setopt</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">,</font><font color="#004600"> CURLOPT_URL</font><font color="#0000FF">,</font><font color="#008000"> "http://example.com"</font><font color="#0000FF">)
</font><font color="#004080">atom</font><font color="#000000"> res</font><font color="#0000FF"> =</font><font color="#5E005E"> curl_easy_perform</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">)
</font><font color="#5E005E">curl_easy_cleanup</font><font color="#0000FF">(</font><font color="#000000">curl</font><font color="#0000FF">)
</font><font color="#5E005E">curl_global_cleanup</font><font color="#0000FF">()</font>
</pre>
              </div>
             </div>
            </div>
           </div>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="curl_easy_init.htm">curl_easy_init</a>,
          <a href="curl_easy_duphandle.htm">curl_easy_duphandle</a>,
          <a href="curl_easy_reset.htm">curl_easy_reset</a>,
          <a href="curl_multi_cleanup.htm">curl_multi_cleanup</a>,
          <a href="curl_multi_remove_handle.htm">curl_multi_remove_handle</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
