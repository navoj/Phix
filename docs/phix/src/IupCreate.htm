<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupCreate</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupCreate(<a href="string.htm">string</a> classname, <a href="Ihandle.htm">Ihandles</a> children={},
            <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            (not officially supported, see Notes)
            <br>
            <br>
            Creates an interface element given its class name and parameters.
            <br>
            <br>
            This function (well, the C function of the same name) is called from all constructors like <a href="IupDialog.htm">IupDialog</a>(), 
            <a href="IupLabel.htm">IupLabel</a>(), and so on, usually in subtly different but critically important ways.
            <br>
            <br>
            After creation the element still needs to be attached to a container and mapped to the native system so it can be visible.
            <br>
            <br>
            classname: class name of the element to be created<br>
            children: an optional list of child element handles.<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.<br>
            Note this is <b>not</b> a <a href="paranormal.htm">paranormalised function</a>; you may <b>not</b> omit {} for no children when
            supplying attributes.
            <br>
            <br>
            Returns: the identifier of the created element, or terminates abruptly if an error occurs.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            The C functions IupCreatep and IupCreatev are not separately wrapped. The parameters they accept are highly dependent on the classname, 
            and can be a list of (class-and-position-specific) string attributes, a list of <a href="Ihandle.htm">Ihandles</a> of children, etc.
            Only the latter case is supported, via the optional children parameter. In particular there is no way to set a callback of any kind
            inline during an IupCreate() call, and any <a href="IupSetAttributes.htm">IupSetAtt</a> calls are probably best morphed into the 
            single string format as expected by <a href="IupSetAttributes.htm">IupSetAttributes</a>.
            <br>
            <br>
            Use of this function is not offically supported: After IupCreate("button") you would (/may) have to perform the class-specific 
            things that <a href="IupButton.htm">IupButton</a> would do automatically, and likewise for all other classes. It is included 
            purely for the purposes of translating code (that actually already works) written in C or some other programming language.
            <br>
            <br>
            A list of known classnames can be found in the documentation for <a href="IupGetClassName.htm">IupGetClassName</a>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupAppend.htm">IupAppend</a>,
          <a href="IupDetach.htm">IupDetach</a>,
          <a href="IupMap.htm">IupMap</a>,
          <a href="IupUnmap.htm">IupUnmap</a>,
          <a href="IupDestroy.htm">IupDestroy</a>,
          <a href="IupGetClassName.htm">IupGetClassName</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
