<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">task_create</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            <a href="integer.htm">integer</a> task_id = task_create(<a href="integer.htm">integer</a> rid, <a href="sequence.htm">sequence</a> args)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Create a new task. 
            <br>
            <br>
            rid: the routine id of a user-defined procedure. <br>
            args: the list of arguments that will be passed to that procedure when the task starts executing. <br>
            (refer to <a href="call_proc.htm">call_proc</a>, which is used internally, for more details)
            <br>
            <br>
            The result is a task identifier, required for the other multitasking routines.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>task_create() creates a new task, but does not start it executing. 
            <br>
            <br>
            Each task has its own set of private variables and its own call stack. Global and local variables are shared between all tasks. 
            <br>
            <br>
            If a run-time error is detected, the traceback will include information on all tasks, with the offending task listed first. [DEV]
            <br>
            <br>
            Many tasks can be created that all run the same procedure, possibly with different parameters. 
            <br>
            <br>
            A task cannot be based on a function, since there would be no way of using the function result. 
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
mytask = task_create(routine_id("myproc"), {5, 9, "ABC"})
</eucode-->
<pre>
<font color="#000000">mytask</font><font color="#0000FF"> =</font><font color="#5E005E"> task_create</font><font color="#0000FF">(</font><font color="#5E005E">routine_id</font><font color="#800000">(</font><font color="#008000">"myproc"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000"> 9</font><font color="#0000FF">,</font><font color="#008000"> "ABC"</font><font color="#800000">}</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="task_schedule.htm">task_schedule</a>,
          <a href="task_yield.htm">task_yield</a>,
          <a href="task_suspend.htm">task_suspend</a>,
          <a href="task_self.htm">task_self</a>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
