<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">cdCanvasTransform</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            cdCanvasTransform(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="object.htm">object</a> matrix)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         <td>
            Defines a transformation matrix with 6 elements. If the matrix is NULL, the transformation is reset to the identity. Default value: NULL.
            <br>
            <br>
            The matrix contains scale (sx,sy), rotation (angle) and translation (dx,dy) elements as follows:
 <pre>
|x'|   |sx*cos(angle)    -sin(angle)  dx|   |x|                     |1   3   5| 
|y'| = |   sin(angle)  sy*cos(angle)  dy| * |y|      with indices   |2   4   6|
                                            |1|</pre>
            In other words:
 <pre>
matrix[1] = sx*cos(angle)           // Horizontal Scale and Rotation component
matrix[2] =    sin(angle)           // Rotation component (can also contain an horizontal shear component)
matrix[3] =   -sin(angle)           // Rotation component (can also contain a vertical shear component)
matrix[4] = sy*cos(angle)           // Vertical Scale and Rotation component
matrix[5] = dx                      // Horizontal Translation component
matrix[6] = dy                      // Vertical Translation component</pre>
            But notice that the indices are different of the cdCanvasVectorTextTransform.
            <br>
            <br>
            Functions that retrieve images from the canvas are not affected by the transformation matrix, such as GetImage, GetImageRGB and ScrollArea.
            <br>
            <br>
            Transformation matrix is independent of the World Coordinate and Origin functions. And those are affected if a transformation is set, just like other regular primitives.
            <br>
            <br>
            The transformation matrix and world coordinates perform similar functions. <br>
            World coordinates were developed before the transformation matrix support. <br>
            The transformation matrix operates at a lower level than world coordinates, and, as such, might be faster, but might behave differently on different platforms. <br>
            World coordinates behave consistently across platforms.
            <br>
                <a name=cdCanvasGetTransform></a>
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Related functions</b>
         </td>
         <td>
            <a href="object.htm">object</a> matrix = <b>cdCanvasGetTransform</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas)
            <br>
            <br>
            Returns the transformation matrix. If the identity is set, returns NULL.
            <br>
            <a name=cdCanvasTransformMultiply></a>
            <br>
            <b>cdCanvasTransformMultiply</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="sequence.htm">sequence</a> matrix)
            <br>
            <br>
            Left multiply the current transformation by the given transformation.
            <br>
            <a name=cdCanvasTransformTranslate></a>
            <br>
            <b>cdCanvasTransformTranslate</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="atom.htm">atom</a> dx, dy)
            <br>
            <br>
            Applies a translation to the current transformation.
            <br>
            <a name=cdCanvasTransformScale></a>
            <br>
            <b>cdCanvasTransformScale</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="atom.htm">atom</a> sx, sy)
            <br>
            <br>
            Applies a scale to the current transformation.
            <br>
            <a name=cdCanvasTransformRotate></a>
            <br>
            <b>cdCanvasTransformRotate</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="atom.htm">atom</a> angle)
            <br>
            <br>
            Applies a rotation to the current transformation. Angle is in degrees, oriented counter-clockwise from the horizontal axis.
            <br>
            <a name=cdCanvasTransformPoint></a>
            <br>
            <a href="atom.htm">atom</a> {tx,ty} = <b>cdCanvasTransformPoint</b>(<a href="cdCanvas.htm">cdCanvas</a> hCdCanvas, <a href="atom.htm">atom</a> x, y)
            <br>
            <br>
            Applies a transformation to a given point.
            <br>
            <br>
            Since the one function can accept integers and floats in the parameters, and return atoms or integers, there is no need 
            for a separate cdfCanvasTransformPoint wrapper. Internally it only uses the cdfCanvasTransformPoint C function.
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
