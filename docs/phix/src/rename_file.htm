<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">rename_file</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="integer.htm#bool">bool</a> res = rename_file(<a href="string.htm">string</a> src, <a href="string.htm">string</a> dest, <a href="integer.htm#bool">bool</a> overwrite=false)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Rename a file.
            <br>
            <br>
            src: the name of the file or directory to rename.<br>
            dest: the new name for the renamed file.<br>
            overwrite: false (0/the default) to abandon the operation if the destination file already exists, or
                       true (1) to delete and replace any existing destination file.
            <br>
            <br>
            Returns: false (0) on failure, true (1) on success.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            If dest contains a path specification, it is equivalent to moving the file, as well as 
            possibly changing its name. However, the path must exist and be on the same drive.
            <br>
            <br>
            Unlike some other routines here, any path separators should be appropriate for the operating
            system, namely backslash ('\\') on Windows and forwardslash ('/') on Linux.
            <br>
            <br>
            For best results, use fully qualified absolute pathnames. You should not rely on relative
            paths in dest any more than you do in src; for instance rename_file("demo\\test","demo\\test2")
            is fine, whereas rename_file("demo\\test","test2") is likely to move it up a directory, and
            rename_file("C:\\Program Files (x86)\\Phix\\demo\\test","test2") is likely to move it to the
            current directory. The precise behaviour of path-less operations is operating system dependent.
            <br>
            <br>
            If overwrite was requested but the rename fails, there is no guarantee that any 
            existing destination file is preserved, deleted, corrupted, or all three.
            <br>
            <br>
            The use of a <a href="procedures.htm#namedparams">named parameter</a> when setting the overwrite flag is recommended, 
            to make the intent clear and the code easier to read.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\pfile.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="move_file.htm">move_file</a>,
          <a href="copy_file.htm">copy_file</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
