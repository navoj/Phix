<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">libcurl</h1>
      <div id="mainSection">
        A wrapper for libcurl, a free and easy-to-use client-side URL transfer library, supporting 
        DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, 
        RTSP, SCP, SFTP, SMTP, SMTPS, Telnet and TFTP. libcurl also supports SSL certificates, 
        HTTP POST, HTTP PUT, FTP uploading, HTTP form based upload, proxies, cookies, user+password 
        authentication (Basic, Digest, NTLM, Negotiate, Kerberos), file transfer resume, http proxy 
        tunneling and more!
        <br>
        <br>
        libcurl is highly portable, it builds and works identically on numerous (20+) platforms.
        <br>
        <br>
        libcurl is free, thread-safe, IPv6 compatible, feature rich, well supported, fast, thoroughly 
        documented and is already used by many known, big and successful companies.
        <br>
        <br>
        I strongly recommend reading
          <a id="ext747" style="color:#9B5565" 
            href="javascript:ExternalLink('ext747','https://curl.haxx.se/libcurl/');">
            https://curl.haxx.se/libcurl/
          </a>
         - this is merely a quick lookup; think of it as documentation of the wrapper rather than the 
        underlying functionality, not that it deliberately tries to fall short. However, libcurl is 
        now over 20 years old, but still gets regular updates and releases, which all makes it rather
        unlikely that this will <i>ever</i> cover every last inch of it.
        <br>
        <br>
        While builtins\libcurl.e (not an autoinclude) is distributed as part of the standard Phix
        distribution, the dynamic library it needs may already be installed on linux, but on windows
        must be separately downloaded from 
          <a id="ext757" style="color:#9B5565" 
            href="javascript:ExternalLink('ext757','https://curl.haxx.se/download.html');">
            https://curl.haxx.se/download.html
          </a>
        or, for win32/64, I selected the 7.57.0 builds by Stefan Kanthak from that page and made a copy here:
          <a id="ext767" style="color:#9B5565" 
            href="javascript:ExternalLink('ext767','http://phix.x10.mx/pmwiki/pmwiki.php?n=Main.Libcurldlls');">
            http://phix.x10.mx/pmwiki/pmwiki.php?n=Main.Libcurldlls
          </a>
<!--
        <br>
        <br>
        The interface consists of these routines:
        <br>
        <br>
        <a href="curl_loadlib.htm">curl_loadlib</a>() optional: verify that the required dynamic library can be opened.<br>
        <a href="curl_global_init.htm">curl_global_init</a>() should be called once at the start.<br>
        <a href="curl_version.htm">curl_version</a>() obtain a version string.<br>
        <a href="curl_version_info.htm">curl_version_info</a>() obtain extended version information.<br>
-->
        <br>
        <br>
        <h3>Example:</h3>
           <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
            <div class="codeSnippetContainerCodeContainer">
             <div class="codeSnippetToolBar">
              <div class="codeSnippetToolBarText">
               <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_13a75j95-b5aj-7896-986j-8b2483c92846');">Copy</a>
              </div>
             </div>
             <div id="CodeSnippetContainerCode_13a75j95-b5aj-7896-986j-8b2483c92846" class="codeSnippetContainerCode" dir="ltr">
              <div style="color:Black;">
<!--eucode>
constant url = "http://example.com",
         out = "example.html"
    
printf(1, "\nattempting to download remote file %s to local file %s\n\n", {url,out})

include libcurl.e

CURLcode res = curl_easy_get_file(url,"",out) -- (no proxy)
if res!=CURLE_OK then
   printf(1, "Error %d downloading file\n", res)
else
   printf(1, "file %s saved\n", {out})
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">constant</font><font color="#000000"> url</font><font color="#0000FF"> =</font><font color="#008000"> "http://example.com"</font><font color="#0000FF">,
</font><font color="#000000">         out</font><font color="#0000FF"> =</font><font color="#008000"> "example.html"
</font><font color="#C0C0C0">    
</font><font color="#5E005E">printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "\nattempting to download remote file %s to local file %s\n\n"</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">url</font><font color="#0000FF">,</font><font color="#000000">out</font><font color="#800000">}</font><font color="#0000FF">)

</font><font color="#008080">include</font><font color="#000000"> libcurl.e

</font><font color="#5E005E">CURLcode</font><font color="#000000"> res</font><font color="#0000FF"> =</font><font color="#5E005E"> curl_easy_get_file</font><font color="#0000FF">(</font><font color="#000000">url</font><font color="#0000FF">,</font><font color="#008000">""</font><font color="#0000FF">,</font><font color="#000000">out</font><font color="#0000FF">)</font><font color="#000080"><i> -- (no proxy)
</i></font><font color="#008080">if</font><font color="#000000"> res</font><font color="#0000FF">!=</font><font color="#004600">CURLE_OK</font><font color="#008080"> then
</font><font color="#5E005E">   printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "Error %d downloading file\n"</font><font color="#0000FF">,</font><font color="#000000"> res</font><font color="#0000FF">)
</font><font color="#008080">else
</font><font color="#5E005E">   printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "file %s saved\n"</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">out</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#008080">end if</font>
</pre>
              </div>
             </div>
            </div>
           </div>
        It does not get any simpler than that, however libcurl can handle almost anything you can imagine (at least as a client, rather than a server) 
        and obviously things can, and often do, get rather more involved - but only by as much as you need it to.
        <br>
        <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
