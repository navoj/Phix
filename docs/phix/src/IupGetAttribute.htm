<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupGetAttribute</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
           <br>
           <br>
            <a href="string.htm">string</a> res = IupGetAttribute(<a href="Ihandle.htm">Ihandln</a> ih, <a href="string.htm">string</a> name)
            <br>
            <i>-- or --</i>
            <br>
            <a href="atom.htm">atom</a> res = IupGetAttributePtr(<a href="Ihandle.htm">Ihandln</a> ih, <a href="string.htm">string</a> name)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Retrieve an interface element attribute value.
            <br>
            <br>
            ih: Identifier of the interface element. If NULL will retrieve from the global environment.
            <br>
            name: name of the attribute.
            <br>
            <br>
            Returns: the attribute value or "" if the attribute is not set or does not exist.
            <br>
            <br>
            <b>Note</b>: <a href="IupSetAttribute.htm">IupSetAttribute</a>() accepts an <a href="nullable_string.htm">atom_string</a>, whereas 
            IupGetAttribute always yields a <a href="string.htm">string</a>, and IupGetAttributePtr retrieves (the raw pointer or) a handle. <br>
            The (strictly speaking unnecessary) <a href="IupSetAttribute.htm">IupSetAttributePtr</a>() is intended 
            to be the logical counterpart to IupGetAttributePtr (which has a very real need), and in that simple 
            way make code more self-documenting.<br>
            Alternatively the utility functions below may be used to retrieve numerical indexes, etc.
            <br>
            <a name=utility></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Utility Functions:</b>
         </td>
         <td>
            These functions can also be used to get attributes from the element:
            <br>
            <br>
            <a href="atom.htm">atom</a> res = <b>IupGetInt</b>(<a href="Ihandle.htm">Ihandln</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="atom.htm">atom</a> {a1,a2} = <b>IupGetIntInt</b>(<a href="Ihandle.htm">Ihandln</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetInt2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetIntId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetIntId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetFloat</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetFloatId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetFloatId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetDouble</b>(<a href="Ihandle.htm">Ihandln</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetDoubleId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id)<br>
            <a href="atom.htm">atom</a> res = <b>IupGetDoubleId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col)<br>
            <a href="integer.htm">integer</a> {r,g,b} = <b>IupGetRGB</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name)<br>
            <a href="integer.htm">integer</a> {r,g,b} = <b>IupGetRGBId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id)<br>
            <a href="integer.htm">integer</a> {r,g,b} = <b>IupGetRGBId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col)<br>
            <a href="string.htm">string</a> res = <b>IupGetAttributeId</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> id)<br>
            <a href="string.htm">string</a> res = <b>IupGetAttributeId2</b>(<a href="Ihandle.htm">Ihandle</a> ih, <a href="string.htm">string</a> name, <a href="integer.htm">integer</a> lin, col)<br>
            <br>
            id, lin, col: used when the attribute has additional ids.
            <br>
            <br>
            IupGetIntInt retrieves two integers (as separated by 'x', ':' or ',').<br>
            IupGetInt2 returns just the second value (and IupGetInt just the first, and the &tilde;Id2 routines just the first of a different thing).<br>
            Only those routines I have personally found useful for retrieving global attributes accept an Ihandln first parameter. Let me know if any others should, 
            however I suspect that sometimes an immediate error may prove more helpful than some potential/additional but as yet completely unused flexibility.<br>
            Note that IupGetInt() etc retrieve 32-bit (or 64-bit) integers, or pointers/handles, which may need to be stored as an <a href="atom.htm">atom</a>.<br>
            (Renaming as IupGetAtom() etc would only succeed in making it more difficult to translate C code, or search for examples.)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            See the Attributes Guide for more details.
            <br>
            <br>
            The returned value is not necessarily the same pointer used by the application to define the attribute value. 
            The pointers of internal IUP attributes returned by IupGetAttribute should never be freed or changed, except 
            when it is a custom application pointer that was stored using <a href="IupSetAttribute.htm">IupSetAttribute</a> 
            and allocated by the application.
            <br>
            <br>
            The returned pointer can be used safely even if <a href="IupGetGlobal.htm">IupGetGlobal</a> or IupGetAttribute are called several times. 
            But not too many times, because it is an internal buffer and IUP may reuse it after around 50 calls.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupSetAttribute.htm">IupSetAttribute</a>,
          <a href="IupSetAttributes.htm">IupSetAttributes</a>,
          <a href="IupGetHandle.htm">IupGetHandle</a>,
          <a href="IupSetGlobal.htm">IupSetGlobal</a>,
          <a href="IupGetGlobal.htm">IupGetGlobal</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
