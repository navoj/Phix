<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">shift_bits</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            <a href="object.htm">object</a> res = shift_bits(<a href="object.htm">object</a> source_number, <a href="integer.htm">integer</a> shift_distance)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Moves the bits in the input value by the specified distance.
            <br>
            <br>
            source_number: The value(s) whose bits will be be moved.<br>
            shift_distance: number of bits to be moved by. 
            <br>
            <br>
            Returns: atom(s) containing a 32-bit integer. A single atom in source_number yields a single atom result, otherwise the 
            result is a <a href="sequence.htm">sequence</a> with the same shape as source_number, consisting of 32-bit integers.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            If source_number is a <a href="sequence.htm">sequence</a>, each element is shifted.<br>
            The value(s) in source_number are first truncated to a 32-bit integer.<br>
            The output is truncated to a 32-bit integer.<br>
            Vacated bits are replaced with zero.<br>
            If shift_distance is negative, the bits in source_number are moved left.<br>
            If shift_distance is positive, the bits in source_number are moved right.<br>
            If shift_distance is zero, the bits in source_number are not moved.
<!-- See Also: [[:rotate_bits]] -->
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
?shift_bits(7,-3)                   --==> 56 (==7*8)
?shift_bits(0,-9)                   --==> 0
?shift_bits(4,-7)                   --==> 512 (==4*128)
?shift_bits(8,-4)                   --==> 128 (==8*16)
?shift_bits(0xFE427AAC,-7)          --==> 557667840 (==0x213D5600)
?shift_bits(0xFE427AAC,-8)          --==> 1115335680 (==#427AAC00)
?shift_bits(-7,-3)                  --==> -56 (==0xFFFFFFC8)
?shift_bits(131,0)                  --==> 131
?shift_bits(184.464,0)              --==> 184
?shift_bits(999_999_999_999_999,0)  --==> -1530494977 (==0xA4C67FFF)
?shift_bits(184,3)                  --==> 23 (==184/8)
?shift_bits(48,2)                   --==> 12 (==48/4)
?shift_bits(121,3)                  --==> 15 (==floor(121/8))
?shift_bits(0xFE427AAC, 7)          --==> 33326325 (==0x01FC84F5)
?shift_bits(-7,3)                   --==> 536870911 (==0x1FFFFFFF)
?shift_bits({48,121},2)             --==> {12,30}
</eucode-->
<pre>
<font color="#000000"></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">7</font><font color="#0000FF">,-</font><font color="#000000">3</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 56 (==7*8)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">0</font><font color="#0000FF">,-</font><font color="#000000">9</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 0
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">4</font><font color="#0000FF">,-</font><font color="#000000">7</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 512 (==4*128)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">8</font><font color="#0000FF">,-</font><font color="#000000">4</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 128 (==8*16)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">0xFE427AAC</font><font color="#0000FF">,-</font><font color="#000000">7</font><font color="#0000FF">)         </font><font color="#000080"><i> --==&gt; 557667840 (==0x213D5600)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">0xFE427AAC</font><font color="#0000FF">,-</font><font color="#000000">8</font><font color="#0000FF">)         </font><font color="#000080"><i> --==&gt; 1115335680 (==#427AAC00)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(-</font><font color="#000000">7</font><font color="#0000FF">,-</font><font color="#000000">3</font><font color="#0000FF">)                 </font><font color="#000080"><i> --==&gt; -56 (==0xFFFFFFC8)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">131</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">)                 </font><font color="#000080"><i> --==&gt; 131
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">184.464</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">)             </font><font color="#000080"><i> --==&gt; 184
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">999_999_999_999_999</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">) </font><font color="#000080"><i> --==&gt; -1530494977 (==0xA4C67FFF)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">184</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">)                 </font><font color="#000080"><i> --==&gt; 23 (==184/8)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">48</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 12 (==48/4)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">121</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">)                 </font><font color="#000080"><i> --==&gt; 15 (==floor(121/8))
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#000000">0xFE427AAC</font><font color="#0000FF">,</font><font color="#000000"> 7</font><font color="#0000FF">)         </font><font color="#000080"><i> --==&gt; 33326325 (==0x01FC84F5)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(-</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">)                  </font><font color="#000080"><i> --==&gt; 536870911 (==0x1FFFFFFF)
</i></font><font color="#0000FF">?</font><font color="#5E005E">shift_bits</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">48</font><font color="#0000FF">,</font><font color="#000000">121</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">)            </font><font color="#000080"><i> --==&gt; {12,30}</i></font>
</pre>
         </td>
        </tr>
       </table>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
