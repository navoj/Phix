<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">gets</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="object.htm">object</a> x = gets(<a href="integer.htm">integer</a> fn)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Get the next <a href="sequence.htm">sequence</a> (one line, including '\n') of characters
             from file or device fn. The characters will have values from 0
             to 255. The atom -1 is returned on end of file.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>Because either a <a href="sequence.htm">sequence</a> or an <a href="atom.htm">atom</a> (-1) might be returned, you
             should probably assign the result to a variable declared as <a href="object.htm">object</a>.
          <br>
          <br>
            After reading a line of text from the keyboard, you should
             normally output a \n character, e.g. puts(1, '\n'), before
             printing something. Only on the last line of the screen does the
             operating system automatically scroll the screen and advance to
             the next line.
          <br>
          <br>
            The last line in a file might not end with a new-line '\n' character.
          <br>
          <br>
            When your program reads from the keyboard, the user can type
             control-Z, which the operating system treats as "end of file".
             -1 will be returned.
          <br>
          <br>
            In SVGA modes, DOS might set the wrong cursor position, after a call to
             gets(0) to read the keyboard. You should set it yourself using
           <a href="position.htm">position</a>().
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
sequence buffer
object line
integer fn
-- read a text file into a sequence
fn = open("myfile.txt", "r")
if fn=-1 then
    puts(1, "Couldn't open myfile.txt\n")
    abort(1)
end if
buffer = {}
while 1 do
    line = gets(fn)
    if atom(line) then
        exit   -- -1 is returned at end of file
    end if
    buffer = append(buffer, line)
end while
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">sequence</font><font color="#000000"> buffer
</font><font color="#004080">object</font><font color="#000000"> line
</font><font color="#004080">integer</font><font color="#000000"> fn
</font><font color="#000080"><i>-- read a text file into a sequence
</i></font><font color="#000000">fn</font><font color="#0000FF"> =</font><font color="#7060A8"> open</font><font color="#0000FF">(</font><font color="#008000">"myfile.txt"</font><font color="#0000FF">,</font><font color="#008000"> "r"</font><font color="#0000FF">)
</font><font color="#008080">if</font><font color="#000000"> fn</font><font color="#0000FF">=-</font><font color="#000000">1</font><font color="#008080"> then
</font><font color="#7060A8">    puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "Couldn't open myfile.txt\n"</font><font color="#0000FF">)
</font><font color="#7060A8">    abort</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">)
</font><font color="#008080">end if
</font><font color="#000000">buffer</font><font color="#0000FF"> = {}
</font><font color="#008080">while</font><font color="#000000"> 1</font><font color="#008080"> do
</font><font color="#000000">    line</font><font color="#0000FF"> =</font><font color="#7060A8"> gets</font><font color="#0000FF">(</font><font color="#000000">fn</font><font color="#0000FF">)
</font><font color="#008080">    if</font><font color="#004080"> atom</font><font color="#0000FF">(</font><font color="#000000">line</font><font color="#0000FF">)</font><font color="#008080"> then
        exit  </font><font color="#000080"><i> -- -1 is returned at end of file
</i></font><font color="#008080">    end if
</font><font color="#000000">    buffer</font><font color="#0000FF"> =</font><font color="#7060A8"> append</font><font color="#0000FF">(</font><font color="#000000">buffer</font><font color="#0000FF">,</font><font color="#000000"> line</font><font color="#0000FF">)
</font><font color="#008080">end while</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
object line
puts(1, "What is your name?\n")
line = gets(0)  -- read standard input (keyboard)
line = line[1..length(line)-1] -- get rid of \n character at end
puts(1, '\n')   -- necessary
puts(1, line & " is a nice name.\n")
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">object</font><font color="#000000"> line
</font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "What is your name?\n"</font><font color="#0000FF">)
</font><font color="#000000">line</font><font color="#0000FF"> =</font><font color="#7060A8"> gets</font><font color="#0000FF">(</font><font color="#000000">0</font><font color="#0000FF">) </font><font color="#000080"><i> -- read standard input (keyboard)
</i></font><font color="#000000">line</font><font color="#0000FF"> =</font><font color="#000000"> line</font><font color="#0000FF">[</font><font color="#000000">1</font><font color="#0000FF">..</font><font color="#7060A8">length</font><font color="#800000">(</font><font color="#000000">line</font><font color="#800000">)</font><font color="#0000FF">-</font><font color="#000000">1</font><font color="#0000FF">]</font><font color="#000080"><i> -- get rid of \n character at end
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> '\n'</font><font color="#0000FF">)  </font><font color="#000080"><i> -- necessary
</i></font><font color="#7060A8">puts</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000"> line</font><font color="#0000FF"> &amp;</font><font color="#008000"> " is a nice name.\n"</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
              via :%opGets in builtins\VM\pfileioN.e (an autoinclude) - be warned however it is low-level complicated stuff that you do not need to know.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="getc.htm">getc</a>,
          <a href="puts.htm">puts</a>,
          <a href="open.htm">open</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
