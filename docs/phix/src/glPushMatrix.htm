<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glPushMatrix</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glPushMatrix()
          <br>
          <br>
          ...
          <br>
          <br>
          glPopMatrix()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            The glPushMatrix and glPopMatrix procedures push and pop the current matrix stack.
            <br>
            <br>
            It is an error to push a full matrix stack, or to pop a matrix stack that contains only a single matrix.<br>
            In either case, the error flag is set and no other change is made to the OpenGL state.
            <br>
            <br>
            These routines do not return a value, however <a href="glGetError.htm">glGetError</a>() can return GL_STACK_OVERFLOW if 
            glPushMatrix was called while the current matrix stack was full, and GL_STACK_UNDERFLOW if glPopMatrix was called while 
            the current matrix stack contained only a single matrix.<br>
            If either routine is called between glBegin and glEnd, <a href="glGetError.htm">glGetError</a>() will return GL_INVALID_OPERATION.
         </td>
        </tr>
         <td valign=top>
          <b>Remarks</b>
         </td>
         <td>
            There is a stack of matrices for each of the matrix modes. <br>
            In GL_MODELVIEW mode, the stack depth is at least 32. <br>
            In the other two modes, GL_PROJECTION and GL_TEXTURE, the depth is at least 2. <br>
            The current matrix in any mode is the matrix on the top of the stack for that mode.<br>
            The glPushMatrix function pushes the current matrix stack down by one, duplicating the current matrix. <br>
            That is, after a glPushMatrix call, the matrix on the top of the stack is identical to the one below it. <br>
            The glPopMatrix function pops the current matrix stack, replacing the current matrix with the one below it on the stack. <br>
            Initially, each of the stacks contains one matrix, an identity matrix.
            <br>
            <br>
            The following functions retrieve information related to glPushMatrix and glPopMatrix:<br>
            glGet with argument GL_MATRIX_MODE<br>
            glGet with argument GL_MODELVIEW_MATRIX<br>
            glGet with argument GL_PROJECTION_MATRIX<br>
            glGet with argument GL_TEXTURE_MATRIX<br>
            glGet with argument GL_MODELVIEW_STACK_DEPTH<br>
            glGet with argument GL_PROJECTION_STACK_DEPTH<br>
            glGet with argument GL_TEXTURE_STACK_DEPTH<br>
            glGet with argument GL_MAX_MODELVIEW_STACK_DEPTH<br>
            glGet with argument GL_MAX_PROJECTION_STACK_DEPTH<br>
            glGet with argument GL_MAX_TEXTURE_STACK_DEPTH<br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glBegin.htm">glBegin</a>,
          <a href="glBegin.htm">glEnd</a>,
          <a href="glFrustum.htm">glFrustum</a>,
          <a href="glGetError.htm">glGetError</a>,
          <a href="glLoadIdentity.htm">glLoadIdentity</a>,
          <a href="glMatrixMode.htm">glMatrixMode</a>,
          <a href="glOrtho.htm">glOrtho</a>,
          <a href="glViewport.htm">glViewport</a>
<br>DEV
See also
--glBegin
--glEnd
//glFrustum
//glLoadIdentity
glLoadMatrix
//glMatrixMode
glMultMatrix
//glOrtho
glPopMatrix
glRotate
glScale
glTranslate
//glViewport

         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
