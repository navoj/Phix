<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Relational Operators</h1>
      <div id="mainSection">
        The relational operators &nbsp;<font color="#030303"><b>&lt; &nbsp; &gt; &nbsp; &lt;= &nbsp;
        &gt;= &nbsp; = &nbsp; != &nbsp;</b></font> each produce a 1 (true) or a 0 (false) result.
<!--eucode>
        8.8 < 8.7   -- 8.8 less than 8.7 (false)
        -4.4 > -4.3 -- -4.4 greater than -4.3 (false)
        8 <= 7   -- 8 less than or equal to 7 (false)
        4 >= 4   -- 4 greater than or equal to 4 (true)
        1 = 10      -- 1 equal to 10 (false)
        8.7 != 8.8  -- 8.7 not equal to 8.8 (true)
        {1,2,3} = {4,5,6} -- {1,2,3} equal to {4,5,6} (false)
        {7,8,9} = {7,8,9} -- {7,8,9} equal to {7,8,9} (true)
</eucode-->
<pre>
<font color="#000000">        8.8</font><font color="#0000FF"> &lt;</font><font color="#000000"> 8.7  </font><font color="#000080"><i> -- 8.8 less than 8.7 (false)
</i></font><font color="#0000FF">        -</font><font color="#000000">4.4</font><font color="#0000FF"> &gt; -</font><font color="#000000">4.3</font><font color="#000080"><i> -- -4.4 greater than -4.3 (false)
</i></font><font color="#000000">        8</font><font color="#0000FF"> &lt;=</font><font color="#000000"> 7  </font><font color="#000080"><i> -- 8 less than or equal to 7 (false)
</i></font><font color="#000000">        4</font><font color="#0000FF"> &gt;=</font><font color="#000000"> 4  </font><font color="#000080"><i> -- 4 greater than or equal to 4 (true)
</i></font><font color="#000000">        1</font><font color="#0000FF"> =</font><font color="#000000"> 10     </font><font color="#000080"><i> -- 1 equal to 10 (false)
</i></font><font color="#000000">        8.7</font><font color="#0000FF"> !=</font><font color="#000000"> 8.8 </font><font color="#000080"><i> -- 8.7 not equal to 8.8 (true)
</i></font><font color="#0000FF">        {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">} = {</font><font color="#000000">4</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">6</font><font color="#0000FF">}</font><font color="#000080"><i> -- {1,2,3} equal to {4,5,6} (false)
</i></font><font color="#0000FF">        {</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">8</font><font color="#0000FF">,</font><font color="#000000">9</font><font color="#0000FF">} = {</font><font color="#000000">7</font><font color="#0000FF">,</font><font color="#000000">8</font><font color="#0000FF">,</font><font color="#000000">9</font><font color="#0000FF">}</font><font color="#000080"><i> -- {7,8,9} equal to {7,8,9} (true)</i></font>
</pre>
        As we will soon see you can also apply function-style equivalents to entire sequences to yield lists of true/false.
        <br>
        <br>
        Note that the last two examples are incompatible with RDS Eu/OpenEuphoria, which produce the same results
        as the phix-only sq_eq() builtin on those systems.
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
