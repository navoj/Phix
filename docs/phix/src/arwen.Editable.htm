<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Editable</h1>
      <div id="mainSection">
       <br>
            This class includes EditText (a single editable field) or MultiEditText (a
            mulit-line edit field - basically a mini editor). Be very careful
            if you trap any events destined for these controls as the
            resulting behaviour is likely to be highly esoteric. Please
            examine the control styles for this class in the Win32 API
            documentation for behavioural possibilities. Perversely, an
            EditText is always left-justified and can never be right or
            center justified even though the style constants ES_RIGHT &amp;
            ES_CENTER exist and apparently work for MultiEditText controls.
            Text can be read/written using getText()&amp; setText().
       <br>
       <br>
            It is possible to change the background colour of these controls
            by including this code in the handler:
       <br>
       <br>
       <div id="code-snippet-1" class="codeSnippetContainer" xmlns="">
        <div class="codeSnippetContainerCodeContainer">
         <div class="codeSnippetToolBar">
          <div class="codeSnippetToolBarText">
           <a id="copytext" href="javascript:CopyToClipboard('CodeSnippetContainerCode_15z66f96-c3ab-4175-936c-8d2195c81946');">Copy</a>
          </div>
         </div>
         <div id="CodeSnippetContainerCode_15z66f96-c3ab-4175-936c-8d2195c81946" class="codeSnippetContainerCode" dir="ltr">
          <div style="color:Black;">
<!--eucode>
atom hBrush = c_func(xCreateSolidBrush, {Parchment})

procedure handler_EDIT(integer id, integer msg, atom wParam, object lParam)
    if msg=WM_CTLCOLOREDIT then
        void = c_func(xSetBkColor, {wParam, Parchment})
        return hBrush
    elsif msg=WM_DESTROY then
        void = deleteObject(hBrush)
    end if
end procedure
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">atom</font><font color="#000000"> hBrush</font><font color="#0000FF"> =</font><font color="#800080"> c_func</font><font color="#0000FF">(</font><font color="#000000">xCreateSolidBrush</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">Parchment</font><font color="#800000">}</font><font color="#0000FF">)

</font><font color="#008080">procedure</font><font color="#000000"> handler_EDIT</font><font color="#0000FF">(</font><font color="#004080">integer</font><font color="#000000"> id</font><font color="#0000FF">,</font><font color="#004080"> integer</font><font color="#000000"> msg</font><font color="#0000FF">,</font><font color="#004080"> atom</font><font color="#000000"> wParam</font><font color="#0000FF">,</font><font color="#004080"> object</font><font color="#000000"> lParam</font><font color="#0000FF">)
</font><font color="#008080">    if</font><font color="#000000"> msg</font><font color="#0000FF">=</font><font color="#000000">WM_CTLCOLOREDIT</font><font color="#008080"> then
</font><font color="#000000">        void</font><font color="#0000FF"> =</font><font color="#800080"> c_func</font><font color="#0000FF">(</font><font color="#000000">xSetBkColor</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">wParam</font><font color="#0000FF">,</font><font color="#000000"> Parchment</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#008080">        return</font><font color="#000000"> hBrush
</font><font color="#008080">    elsif</font><font color="#000000"> msg</font><font color="#0000FF">=</font><font color="#000000">WM_DESTROY</font><font color="#008080"> then
</font><font color="#000000">        void</font><font color="#0000FF"> =</font><font color="#000000"> deleteObject</font><font color="#0000FF">(</font><font color="#000000">hBrush</font><font color="#0000FF">)
</font><font color="#008080">    end if
end procedure</font>
</pre>
          </div>
         </div>
        </div>
       </div>

       <p></p>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
