<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupOpen</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            IupOpen(<a href="nullable_string.htm">nullable_string</a> dll_root=NULL)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>Initialise IUP
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This procedure must be called before creating any controls, etc.
            <br>
            <br>
            The optional dll_root, if provided, should be something like "C:\\Program Files (x86)\\Phix\\demo\\pGUI",
            such that the appropriate win32/win64/lnx32/lnx64 subdirectory can be located. 
            If you bundle a copy of pGUI.e and the appropriate dll/so subdirectory(ies) with your distribution,
            there should be no need to supply anything for dll_root. See also the Technicalia dropdown.
            <br>
            <a name=IupControlsOpen></a>
            <br>
            It may also be necessary to call IupControlsOpen() as well. However in all cases that I know of, pGUI takes
            care of that automatically, not that accidentally invoking it twice would cause any problems.
            <br>
            <br>
            See also <a href="IupClose.htm">IupClose</a>, which should be called at the end of the program.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
include pGUI.e

IupOpen()
Ihandle main_dialog = IupDialog(IupLabel("Hello","PADDING=80x10"),"TITLE=test")
IupShow(main_dialog)
IupCloseOnEscape(main_dialog)
IupMainLoop()
IupClose()
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">include</font><font color="#000000"> pGUI.e

</font><font color="#5E005E">IupOpen</font><font color="#0000FF">()
</font><font color="#5E005E">Ihandle</font><font color="#000000"> main_dialog</font><font color="#0000FF"> =</font><font color="#5E005E"> IupDialog</font><font color="#0000FF">(</font><font color="#5E005E">IupLabel</font><font color="#800000">(</font><font color="#008000">"Hello"</font><font color="#0000FF">,</font><font color="#008000">"PADDING=80x10"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#008000">"TITLE=test"</font><font color="#0000FF">)
</font><font color="#5E005E">IupShow</font><font color="#0000FF">(</font><font color="#000000">main_dialog</font><font color="#0000FF">)
</font><font color="#5E005E">IupCloseOnEscape</font><font color="#0000FF">(</font><font color="#000000">main_dialog</font><font color="#0000FF">)
</font><font color="#5E005E">IupMainLoop</font><font color="#0000FF">()
</font><font color="#5E005E">IupClose</font><font color="#0000FF">()</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupClose.htm">IupClose</a>,
          <a href="IupMainLoop.htm">IupMainLoop</a>
         </td>
        </tr>
        <tr id="Technicalia" style="display:none;">
         <td valign=top>
          <a href="glossary.htm#technicalia">
           <b>Technicalia</b>
          </a>
         </td>
         <td>
            If dll_root is not provided, <a href="get_proper_dir.htm">get_proper_dir</a>(<a href="command_line.htm">command_line</a>()[2]) is used. <br>
            In some setups it may be better to start from command_line()[1], assuming that locates pw.exe|phix correctly, as follows.<br>
            In cases such as Phix\pdemo.exw which includes Phix\demo\pGUI\pdemo.exw, some trickery is required for both pdemo.exw files to work.<br>
            Slightly simpler, Phix\test\terror.exw needs to use ..\demo\pGUI, whereas Phix\demo\edix\edix.exw needs ..\pGUI. <br>
            Refer to the above mentioned files (which may have changed since this documentation was written) for more details.<br>
            For cross-platform operation, it may be better to use <a href="join_path.htm">join_path</a>({"..","pGUI"},1) instead of "..\\pGUI\\".<br>
            The value of dll_path may be a relative or absolute directory. While relative directories promise to be more portable (as
            in the app still works if moved to a different directory), personally I find absolute directories much easier to debug, 
            especially on a remote machine, for instance ..\demo\pGUI looks fine, whereas C:\Program Files (x86)\Phix\demo\demo\pGUI 
            (in an ex.err file) immediately pinpoints an error with surgical precision.<br>
            Hence my recommendation is an absolute directory, ideally manually constructed from a relative fragment, perhaps something like 
            <a href="get_proper_path.htm">get_proper_path</a>(&ldquo;..\demo\pGUI&rdquo;) [the literal forgiven as per the last point below].<br>
            It may also be worth noting that builtins\pGUI.e is a stub include that simply contains <code>include ..\demo\pGUI\pGUI.e</code>, 
            and that most builtin functions and include statements usually work well enough with '\\' or '/' on any platform.<br>
         </td>
        </tr>
       </table>
       <img src="images/sprites/tech.open.png" title="Expand/Shrink" style="display:block;clear:both;" onload="setStartT(this);" onclick="changeImageT(this);" />
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
