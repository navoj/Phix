<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Constants</h1>
      <div id="mainSection">
        These are variables that are assigned an initial value that can never change e.g.
<!--eucode>
    constant MAX = 100
    constant Upper = MAX - 10, Lower = 5
    constant name_list = {"Fred", "George", "Larry"}
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">    constant</font><font color="#000000"> MAX</font><font color="#0000FF"> =</font><font color="#000000"> 100
</font><font color="#008080">    constant</font><font color="#000000"> Upper</font><font color="#0000FF"> =</font><font color="#000000"> MAX</font><font color="#0000FF"> -</font><font color="#000000"> 10</font><font color="#0000FF">,</font><font color="#000000"> Lower</font><font color="#0000FF"> =</font><font color="#000000"> 5
</font><font color="#008080">    constant</font><font color="#000000"> name_list</font><font color="#0000FF"> = {</font><font color="#008000">"Fred"</font><font color="#0000FF">,</font><font color="#008000"> "George"</font><font color="#0000FF">,</font><font color="#008000"> "Larry"</font><font color="#0000FF">}</font>
</pre>
        The result of any expression can be assigned to a constant, even one
        involving function calls, but once the assignment is made, the value 
        of the constant variable is "locked in".
       <br>
       <br>
        Constant declaration also supports <a href=multiassign.htm>multiple assignment</a> syntax (this may make more sense after reading that section) e.g.
<!--eucode>
    constant {x, y, z} = {{},5,1.5}
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">    constant</font><font color="#0000FF"> {</font><font color="#000000">x</font><font color="#0000FF">,</font><font color="#000000"> y</font><font color="#0000FF">,</font><font color="#000000"> z</font><font color="#0000FF">} = {</font><font color="#800000">{}</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">1.5</font><font color="#0000FF">}</font>
</pre>
        Constants may not be declared inside a subroutine. It may help to know that constants are really just variables which must be assigned 
        on declaration, and for which subsequent assignment or other modification is prohibited. The actual constant values, both named and
        unnamed, are "pooled" so that only a single copy ever gets written out to a compiled executable file.
       <br>
       <br>
        Several builtin constants are automatically defined, in psym.e/syminit(), such as C_CHAR, C_BYTE, C_PTR, NULL, WINDOWS, LINUX, PI,
        LOCK_SHARED, LOCK_EXCLUSIVE, BLACK, GREEN, BLUE, DB_OK, DB_OPEN_FAIL, DB_EXISTS_ALREADY, MB_OK, MB_OKCANCEL, IDOK, IDCANCEL,
        IDYES, IDNO, SEEK_OK, and many more besides.
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
