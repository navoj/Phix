<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Other Operations on Sequences</h1>
      <div id="mainSection">
         Some other important operations that you can perform on sequences have
         English names, rather than special characters. They are described in detail in
       <a href="library.htm">Library Routines</a>, but are important enough that we 
         should mention them here before proceeding. You call these operations as if 
         they were subroutines, although they are actually implemented much more 
         efficiently than that.
       <br>
       <br>
       <a href="length.htm">
        <b>length(s)</b>
       </a> tells you the length of a sequence s. 
         This is the number of elements in s. Some of these elements may be sequences that contain 
         elements of their own, but length just gives you the "top-level" count. You will get an 
         error if you ask for the length of an atom. e.g.
<!--eucode>
    length({5,6,7})             -- 3
    length({1, {5,5,5}, 2, 3})  -- 4 (not 6!)
    length({})                  -- 0
    length(5)                   -- error!
</eucode-->
<pre>
<font color="#000000"></font><font color="#7060A8">    length</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">6</font><font color="#0000FF">,</font><font color="#000000">7</font><font color="#800000">}</font><font color="#0000FF">)            </font><font color="#000080"><i> -- 3
</i></font><font color="#7060A8">    length</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#800080"> {</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800080">}</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#800000">}</font><font color="#0000FF">) </font><font color="#000080"><i> -- 4 (not 6!)
</i></font><font color="#7060A8">    length</font><font color="#0000FF">(</font><font color="#800000">{}</font><font color="#0000FF">)                 </font><font color="#000080"><i> -- 0
</i></font><font color="#7060A8">    length</font><font color="#0000FF">(</font><font color="#000000">5</font><font color="#0000FF">)                  </font><font color="#000080"><i> -- error!</i></font>
</pre>
       <a href="repeat.htm">
        <b>repeat(item, count)</b>
       </a> makes a sequence that consists of an item repeated count times. e.g.
<!--eucode>
    repeat(0, 100)         -- {0,0,0,...,0}   i.e. 100 zeros
    repeat("Hello", 3)     -- {"Hello", "Hello", "Hello"}
    repeat(99,0)           -- {}
</eucode-->
<pre>
<font color="#000000"></font><font color="#7060A8">    repeat</font><font color="#0000FF">(</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#000000"> 100</font><font color="#0000FF">)        </font><font color="#000080"><i> -- {0,0,0,...,0}   i.e. 100 zeros
</i></font><font color="#7060A8">    repeat</font><font color="#0000FF">(</font><font color="#008000">"Hello"</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">)    </font><font color="#000080"><i> -- {"Hello", "Hello", "Hello"}
</i></font><font color="#7060A8">    repeat</font><font color="#0000FF">(</font><font color="#000000">99</font><font color="#0000FF">,</font><font color="#000000">0</font><font color="#0000FF">)          </font><font color="#000080"><i> -- {}</i></font>
</pre>
         The item to be repeated can be any atom or sequence.
       <br>
       <br>
       <a href="append.htm">
        <b>append(s, item)</b>
       </a> creates a new sequence by adding one item to the end of a sequence s.
       <br>
       <a href="prepend.htm">
        <b>prepend(s, item)</b>
       </a> creates a new sequence by adding one element to the beginning of a sequence s.
<!--eucode>
    append({1,2,3}, 4)         -- {1,2,3,4}
    prepend({1,2,3}, 4)        -- {4,1,2,3}
    append({1,2,3}, {5,5,5})   -- {1,2,3,{5,5,5}}
    prepend({}, 9)             -- {9}
    append({}, 9)              -- {9}
</eucode-->
<pre>
<font color="#000000"></font><font color="#7060A8">    append</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000"> 4</font><font color="#0000FF">)        </font><font color="#000080"><i> -- {1,2,3,4}
</i></font><font color="#7060A8">    prepend</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000"> 4</font><font color="#0000FF">)       </font><font color="#000080"><i> -- {4,1,2,3}
</i></font><font color="#7060A8">    append</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800000">}</font><font color="#0000FF">)  </font><font color="#000080"><i> -- {1,2,3,{5,5,5}}
</i></font><font color="#7060A8">    prepend</font><font color="#0000FF">(</font><font color="#800000">{}</font><font color="#0000FF">,</font><font color="#000000"> 9</font><font color="#0000FF">)            </font><font color="#000080"><i> -- {9}
</i></font><font color="#7060A8">    append</font><font color="#0000FF">(</font><font color="#800000">{}</font><font color="#0000FF">,</font><font color="#000000"> 9</font><font color="#0000FF">)             </font><font color="#000080"><i> -- {9}</i></font>
</pre>
         The length of the new sequence is
       <i>
        <b>always 1 greater</b>
       </i> than the length of the
         original sequence. The item to be added to the sequence can be any atom or sequence.
       <br>
       <a name=similarities></a>
       <br>
         These two built-in functions, append() and prepend(), have some similarities
         to the concatenate operator,
       <font color="#030303">
        <b>&</b>
       </font>,
         but there are clear differences. e.g.
<!--eucode>
    -- appending a sequence is different
    append({1,2,3}, {5,5,5})   -- {1,2,3,{5,5,5}}       -- length(3) + <any> ==> length(4)
    {1,2,3} & {5,5,5}          -- {1,2,3,5,5,5}         -- length(3) + length(3) ==> length(6)
    -- appending an atom is the same
    append({1,2,3}, 5)         -- {1,2,3,5}
    {1,2,3} & 5                -- {1,2,3,5}
</eucode-->
<pre>
<font color="#000000"></font><font color="#000080"><i>    -- appending a sequence is different
</i></font><font color="#7060A8">    append</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#800000">}</font><font color="#0000FF">)  </font><font color="#000080"><i> -- {1,2,3,{5,5,5}}       -- length(3) + &lt;any&gt; ==&gt; length(4)
</i></font><font color="#0000FF">    {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">} &amp; {</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">,</font><font color="#000000">5</font><font color="#0000FF">}         </font><font color="#000080"><i> -- {1,2,3,5,5,5}         -- length(3) + length(3) ==&gt; length(6)
    -- appending an atom is the same
</i></font><font color="#7060A8">    append</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#800000">}</font><font color="#0000FF">,</font><font color="#000000"> 5</font><font color="#0000FF">)        </font><font color="#000080"><i> -- {1,2,3,5}
</i></font><font color="#0000FF">    {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000">2</font><font color="#0000FF">,</font><font color="#000000">3</font><font color="#0000FF">} &amp;</font><font color="#000000"> 5               </font><font color="#000080"><i> -- {1,2,3,5}</i></font>
</pre>
         Beginners often confuse s=append(s,x) with s&=x, so here are two simple rules to memorise:
       <ul>
        <li>append always and only ever increases the length of s by 1.</li>
        <li>use & to construct strings, or to add a variable number of elements to a list or table in one operation.</li>
       </ul>
        In addition, s &= "", s &= {}, s = s&"", s = s&{}, s = ""&s, and s = {}&s are all effectively null-ops (except 
        when s is initially an atom or character, in which case s will become a string or sequence of length 1) whereas 
        there are no forms whatsoever of either append or prepend that are null-ops.
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
