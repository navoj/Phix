<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">machine_bits</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
         <a href="integer.htm">integer</a> i = machine_bits()
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>machine_bits() is a function built-in to the interpreter. It indicates
             the architecture that the program is being executed on:
          <font color="#050505">
           <b>32</b>
          </font> or
          <font color="#050505">
           <b>64</b>
          </font>.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b></b>
         </td>
         <td>Use machine_bits() when you want to execute different code depending
             on which architecture the program is running on. Most applications do
            not need to use machine_bits(), except perhaps to optimise a critical
            inner loop, however the phix interpreter, for example, has to know
            whether to generate 32 or 64 bit machine instructions.
          <br>
          <br>
            The <b>machine_word</b>() function is very similar, yielding <b>4</b> or <b>8</b> for a
            32 or 64 bit executable respectively.
          <br>
          <br>
            The call to machine_bits() costs nothing. It is optimized
            at compile-time into the appropriate integer value: 32 or 64.
            Further, no code whatsoever will be emitted for the comparison, else, 
            and one of the two branches in the following.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
if machine_bits()=32 then
    poke4(addr,{#55667788,#11223344})
else
    poke8(addr,#1122334455667788)
end if
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">if</font><font color="#7060A8"> machine_bits</font><font color="#0000FF">()=</font><font color="#000000">32</font><font color="#008080"> then
</font><font color="#7060A8">    poke4</font><font color="#0000FF">(</font><font color="#000000">addr</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">#55667788</font><font color="#0000FF">,</font><font color="#000000">#11223344</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#008080">else
</font><font color="#7060A8">    poke8</font><font color="#0000FF">(</font><font color="#000000">addr</font><font color="#0000FF">,</font><font color="#000000">#1122334455667788</font><font color="#0000FF">)
</font><font color="#008080">end if</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
    pokeN(addr,pszMsg,machine_word())   -- (poke a 4 or 8 byte pointer)
</eucode-->
<pre>
<font color="#000000"></font><font color="#7060A8">    pokeN</font><font color="#0000FF">(</font><font color="#000000">addr</font><font color="#0000FF">,</font><font color="#000000">pszMsg</font><font color="#0000FF">,</font><font color="#7060A8">machine_word</font><font color="#800000">()</font><font color="#0000FF">)  </font><font color="#000080"><i> -- (poke a 4 or 8 byte pointer)</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 3:</b>
         </td>
         <td>
            This routine is phix specific. For compatibility with OpenEuphoria the following can be used (copied from builtins\cffi.e):
<!--eucode>
--/*
function machine_bits()
    ifdef BITS64 then  
        return 64
    elsedef  
        return 32
    end ifdef 
end function
--*/
</eucode-->
<pre>
<font color="#000000"></font><font color="#000080"><i>--/*
function machine_bits()
    ifdef BITS64 then  
        return 64
    elsedef  
        return 32
    end ifdef 
end function
--*/</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="platform.htm">platform</a>,
          <a href="format.htm">format directive</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
