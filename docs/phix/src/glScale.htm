<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">glScale</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          include pGUI.e
          <br>
          include opengl.e
          <br>
          <br>
          glScale(<a href="atom.htm">atom</a> {x,y,z})
          <br>
          <small>(actually declared as a single <a href="sequence.htm">sequence</a> scale parameter)</small>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            The glScale function multiplies the current matrix by a general scaling matrix.
            <br>
            <br>
            x: Scale factors along the x axis.<br>
            y: Scale factors along the y axis.<br>
            z: Scale factors along the z axis.
            <br>
            <br>
            The routine will fail if called between glBegin and glEnd, and glGetError will return GL_INVALID_OPERATION.
            <br>
            <br>
            The glScaled and glScalef functions are effectively simple aliases of glScale.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Remarks</b>
         </td>
         <td>
            The glScalef function produces a general scaling along the x, y, and z axes. <br>
            The three arguments indicate the desired scale factors along each of the three axes. <br>
            The resulting matrix appears in the following image.
          <br>
          <br>
            <img src="images/glScale.png" />
          <br>
          <br>
            The current matrix (see <a href="glMatrixMode.htm">glMatrixMode</a>) is multiplied by this scale matrix, 
            with the product replacing the current matrix. <br>
            That is, if M is the current matrix and S is the scale matrix, then M is replaced with M • S.
            <br>
            <br>
            If the matrix mode is either GL_MODELVIEW or GL_PROJECTION, all objects drawn after glScalef is called are scaled. <br>
            Use <a href="glPushMatrix.htm">glPushMatrix and glPopMatrix</a> to save and restore the unscaled coordinate system.
            <br>
            <br>
            If scale factors other than 1.0 are applied to the modelview matrix and lighting is enabled, automatic normalization of 
            normals should probably also be enabled (glEnable and glDisable with argument GL_NORMALIZE).<br>
            The following functions retrieve information related to glScalef:<br>
            glGet with argument GL_MATRIX_MODE<br>
            glGet with argument GL_MODELVIEW_MATRIX<br>
            glGet with argument GL_PROJECTION_MATRIX<br>
            glGet with argument GL_TEXTURE_MATRIX<br>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="glBegin.htm">glBegin</a>,
          <a href="glBegin.htm">glEnd</a>,
          <a href="glMatrixMode.htm">glMatrixMode</a>,
          <a href="glPushMatrix.htm">glPopMatrix</a>,
          <a href="glPushMatrix.htm">glPushMatrix</a>
          <br>DEV
See also
//glBegin
//glEnd
//glMatrixMode
glMultMatrix
//glPopMatrix
//glPushMatrix
glRotate
glTranslate
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
