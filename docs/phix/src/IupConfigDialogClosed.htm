<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupConfigDialogClosed</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            IupConfigDialogClosed(<a href="Ihandle.htm">Ihandle</a> config, <a href="Ihandle.htm">Ihandle</a> dialog, <a href="string.htm">string</a> name)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Store the position and size of a dialog, so when the application is run again the dialog can be shown at the last position and size.
            <br>
            <br>
            config: Identifier of the configuration database (see <a href="IupConfig.htm">IupConfig</a>)<br>
            dialog: the dialog to manage the size and position<br>
            name: a group name for this dialog
            <br>
            <br>
            The group name should be arbitrarily selected by the programmer to be meaningful and unique across the application,
            just as you would if you were writing out a .ini file by hand. For example "MainWindow" should result in a config
            file that might contain, amongst other things, "[MainWindow]\nX=200\nY=200\nWidth=100\nHeight=120\n".
            <br>
            <br>
            Use the function IupConfigDialogClosed to save the last dialog position and size when the dialog is about to be closed, usually inside the dialog 
            <a href="callbacks.htm#CLOSE_CB">CLOSE_CB</a> callback.
            <br>
            <br>
            If the dialog was closed maximized it will be shown maximized. <br>
            The dialog size is set only if RESIZE=Yes. (since 3.16)
            <br>
            <br>
            The position is saved in the variables "X" and "Y" of the given group name. <br>
            The size is saved in the variables "Width" and "Height" of the given group name. <br>
            Note that, unlike the raw C function, the Phix wrapper (pGUI.e) deliberately avoids obliterating X/Y/Width/Height when the window is maximised (windows only).<br>
            The "official" value, "Maximized", is always zero, but pGUI.e shadows it with "MaxiSized" to achieve the desired effect, at least on Windows.<br>
            <small>(internally it uses the windows-only "MAXIMIZED" attribute, since unfortunately testing "PLACEMENT"="MAXIMIZED" appears not to work.)</small>
            <br>
            <br>
            Also, as something of a personal choice, I often completely avoid calling IupConfigDialogClosed() on maximised child windows - if I accidentally
            maximise say the find (Ctrl F) window in Edix just before closing it on Friday night, then on Monday morning I just want a normal window to appear.
            There is no specific support for that though, you have to remember to do it manually (as above, what I do there is also windows-only).
            <br>
            <br>
            Internally variables are stored as attributes using a "<GROUP>.<KEY>" combination, which is why the group name cannot have periods ".".
<!--DEV (now part covered by the new optional maximised parameter of IupConfigDialogShow)
Dialog Position and Size
========================
void IupConfigDialogShow(<a href="Ihandle.htm">Ihandle</a> ih, <a href="Ihandle.htm">Ihandle</a> dialog, const char* name);

void IupConfigDialogClosed(<a href="Ihandle.htm">Ihandle</a> ih, <a href="Ihandle.htm">Ihandle</a> dialog, const char* name);

ih: Identifier of the configuration database<br>
dialog: the dialog to manage the size and position<br>
name: a name for this dialog
<br>
<br>
These functions store and manage the position and size of a dialog. <br>
So when the application is run again the dialog can be show at its last position and last size. <br>
Use the function IupConfigDialogShow to show the dialog adjusting its size and position. <br>
And use the function IupConfigDialogClosed to save the last dialog position and size when the dialog is about to be closed, usually inside the dialog 
<a href="callbacks.htm#CLOSE_CB">CLOSE_CB</a> callback.
<br>
<br>
<a href="IupConfigDialogShow.htm">IupConfigDialogShow</a> does no adjustments if the dialog is already visible, just call <a href="IupShow.htm">IupShow</a>. <br>
If the dialog was closed maximized it will be shown maximized. <br>
The default size, at the first time ever the dialog is shown, is maximized. <br>
The dialog size is set only if RESIZE=Yes. (since 3.16)
<br>
<br>
The position is saved in the variables "X" and "Y" of the given group name. <br>
The size is saved in the variables "Width" and "Height" of the given group name. 
<br>
<br>
If your dialog is resizable and you want to avoid the last size usage because you changed the dialog layout, 
then reset the "Width" and "Height" variables before calling IupConfigDialogShow.
<br>
<br>
To avoid the dialog size to be maximized, set the variable "Maximized" to 0 before calling IupConfigDialogShow. (since 3.16)

-->
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
IupConfigDialogClosed(config, mainwin, "MainWindow");
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">IupConfigDialogClosed</font><font color="#0000FF">(</font><font color="#000000">config</font><font color="#0000FF">,</font><font color="#000000"> mainwin</font><font color="#0000FF">,</font><font color="#008000"> "MainWindow"</font><font color="#0000FF">);</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupConfig.htm">IupConfig</a>,
          <a href="IupConfigDialogShow.htm">IupConfigDialogShow</a>,
          <a href="IupSetAttribute.htm">IupSetAttribute</a>,
          <a href="IupConfigLoad.htm">IupConfigLoad</a>,
          <a href="IupGetAttribute.htm">IupGetAttribute</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
