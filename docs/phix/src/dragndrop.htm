<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Drag & Drop</h1>
      <div id="mainSection">
       When enabled allow the use of callbacks for controlling the drag and drop handling.
       <br>
       <br>
       The user starts a drag and drop transfer by pressing the mouse button over the data (Windows and GTK: left button; Motif: middle button) which is referred to as the drag source.<br>
       The data can be dropped in any location that has been registered as a drop target.<br>
       The drop occurs when the user releases the mouse button.<br>
       This can be done inside a control, from one control to another in the same dialog, in different dialogs of the same application, or between different applications.<br>
       In the latter case, the other application does NOT need to be implemented with IUP.
       <br>
       <br>
       In IUP, a drag and drop transfer can result in the data being moved or copied.<br>
       A copy operation is enabled with the CTRL key pressed.<br>
       A move operation is enabled with the SHIFT key pressed.<br>
       A move operation will be possible only if the attribute <a href="dragndrop.htm#DRAGSOURCEMOVE">DRAGSOURCEMOVE</a> is Yes.<br>
       When no key is pressed the default operation is copy when <a href="dragndrop.htm#DRAGSOURCEMOVE">DRAGSOURCEMOVE</a>=No and 
        move when <a href="dragndrop.htm#DRAGSOURCEMOVE">DRAGSOURCEMOVE</a>=Yes.<br>
       The user can cancel a drag at any time by pressing the ESCAPE key.
       <br>
       <br>
       <b>Steps to use the Drag & Drop support in an IUP application:</b>
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          AT&nbsp;SOURCE:
         </td>
         <td>
           Enable the element as source using the attribute <a href="dragndrop.htm#DRAGSOURCE">DRAGSOURCE</a>=YES;<br>
           Define the data types supported by the element for the drag operation using the <a href="dragndrop.htm#DRAGTYPES">DRAGTYPES</a> attribute;<br>
           Register the required callbacks 
            <a href="dragndrop.htm#DRAGBEGIN_CB">DRAGBEGIN_CB</a>, 
            <a href="dragndrop.htm#DRAGDATASIZE_CB">DRAGDATASIZE_CB</a> and 
            <a href="dragndrop.htm#DRAGDATA_CB">DRAGDATA_CB</a> for drag handling.<br>
           <a href="dragndrop.htm#DRAGEND_CB">DRAGEND_CB</a> is the only optional drag callback, all other callbacks and attributes must be set.
         </td>
        </tr>
        <tr>
         <td valign=top>
          AT&nbsp;TARGET:
         </td>
         <td>
           Enable the element as target using the attribute <a href="dragndrop.htm#DROPTARGET">DROPTARGET</a>=YES;<br>
           Define the data types supported by the element for the drop using the <a href="dragndrop.htm#DROPTYPES">DROPTYPES</a> attribute;<br>
           Register the required callback <a href="dragndrop.htm#DROPDATA_CB">DROPDATA_CB</a> for handling the data received.<br>
           This callback and all the drop target attributes must be set too.<br>
           <a href="dragndrop.htm#DROPMOTION_CB">DROPMOTION_CB</a> is the only optional drop callback.
         </td>
        </tr>
        <tr>
         <td valign=top>
          Affects:
         </td>
         <td>
            <a href="IupLabel.htm">IupLabel</a>, 
            <a href="IupText.htm">IupText</a>, 
            <a href="IupList.htm">IupList</a>, 
            <a href="IupTree.htm">IupTree</a>, 
            <a href="IupCanvas.htm">IupCanvas</a> and 
            <a href="IupDialog.htm">IupDialog</a>.
            <br>
           <a name=DRAGCURSOR></a>
         </td>
        </tr>
       </table>
       <br>
        &nbsp;
       <br>
       <b>Attributes at Drag Source</b>
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          DRAGCURSOR
         </td>
         <td>
            (non inheritable): name of an image to be used as cursor during drag.<br>
            Use <a href="IupSetHandle.htm">IupSetHandle</a> or <a href="IupSetAttributeHandle.htm">IupSetAttributeHandle</a> to associate an image to a name. 
            See also <a href="IupImage.htm">IupImage</a>.
          <br>
          <a name=DRAGSOURCE></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGSOURCE
         </td>
         <td>
            (non inheritable): Set up a control as a source for drag operations. Default: NO.
          <br>
          <a name=DRAGTYPES></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGTYPES
         </td>
         <td>
            (non inheritable): A list of data types that are supported by the source.<br>
            Accepts a string with one or more names separated by commas. See <a href="dragndrop.htm#NOTES">Notes</a> below for a list of known names. Must be set.
          <br>
          <a name=DRAGSOURCEMOVE></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGSOURCEMOVE
         </td>
         <td>
            (non inheritable): Enables the move action. Default: NO (only copy is enabled).
            <br>
           <a name=DROPTARGET></a>
         </td>
        </tr>
       </table>
       <br>
        &nbsp;
       <br>
       <b>Attributes at Drop Target</b>
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          DROPTARGET
         </td>
         <td>
          (non inheritable): Set up a control as a destination for drop operations. Default: NO.
          <br>
          <a name=DROPTYPES></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DROPTYPES
         </td>
         <td>
          (non inheritable): A list of data types that are supported by the target.<br>
          Accepts a string with one or more names separated by commas. See <a href="dragndrop.htm#NOTES">Notes</a> below for a list of known names. Must be set.
          <br>
          <a name=DRAGBEGIN_CB></a>
         </td>
        </tr>
       </table>
       <br>
        &nbsp;
       <br>
       <b>Callbacks at Drag Source</b> (Must be set when <a href="dragndrop.htm#DRAGSOURCE">DRAGSOURCE</a>=Yes)
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          DRAGBEGIN_CB
         </td>
         <td>
          Notifies source that drag started. It is called when the mouse starts a drag operation.
          <br>
          <br>
          function dragbegin_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> x, y)<br>
          ih: identifier of the element that activated the event.<br>
          x, y: cursor position relative to the top-left corner of the element.
          <br>
          <br>
          Returns: If <a href="callbacks.htm#IUP_IGNORE">IUP_IGNORE</a> is returned the drag is aborted.
          <br>
          <a name=DRAGDATASIZE_CB></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGDATASIZE_CB
         </td>
         <td>
          Request for size of drag data from source.
          <br>
          It is called when the data is dropped, before the <a href="dragndrop.htm#DRAGDATA_CB">DRAGDATA_CB</a> callback.
          <br>
          <br>
          function dragdatasize_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pType)<br>
          ih: identifier of the element that activated the event.<br>
          pType: type of the data (char*). It is one of the registered types in <a href="dragndrop.htm#DRAGTYPES">DRAGTYPES</a>.
          <br>
          <br>
          Returns: the size in bytes for the data. It will be used to allocate the buffer size for the data in transfer.
          <br>
          <a name=DRAGDATA_CB></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGDATA_CB
         </td>
         <td>
          Request for drag data from source. It is called when the data is dropped.
          <br>
          <br>
          function dragdata_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pType, <a href="atom.htm">atom</a> pData, <a href="integer.htm">integer</a> size)<br>
          ih: identifier of the element that activated the event.<br>
          pType: type of the data (char*). It is one of the registered types in <a href="dragndrop.htm#DRAGTYPES">DRAGTYPES</a>.<br>
          pData: buffer to be filled by the application.<br>
          size: buffer size in bytes. The same value returned by <a href="dragndrop.htm#DRAGDATASIZE_CB">DRAGDATASIZE_CB</a>.
          <br>
          <a name=DRAGEND_CB></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DRAGEND_CB
         </td>
         <td>
          Notifies source that drag is done.<br>
          The only drag callback that is optional.<br>
          It is called after the data has been dropped.
          <br>
          <br>
          function dragend_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> action)<br>
          ih: identifier of the element that activated the event.<br>
          action: action performed by the operation (1 = move, 0 = copy, -1 = drag failed or aborted)
          <br>
          <br>
          If action is 1 it is responsibility of the application to remove the data from source.
          <br>
          <a name=DROPDATA_CB></a>
         </td>
        </tr>
       </table>
       <br>
        &nbsp;
       <br>
       <b>Callbacks at Drop Target</b> (Must be set when <a href="dragndrop.htm#DROPTARGET">DROPTARGET</a>=Yes)
       <br>
       <br>
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          DROPDATA_CB
         </td>
         <td>
          Source has sent target the requested data.<br>
          It is called when the data is dropped.<br>
          If both drag and drop would be in the same application it would be called after the <a href="dragndrop.htm#DRAGDATA_CB">DRAGDATA_CB</a> callback.
          <br>
          <br>
          function dropdata_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="atom.htm">atom</a> pType, <a href="atom.htm">atom</a> pData, <a href="integer.htm">integer</a> size, x, y)<br>
          ih: identifier of the element that activated the event.<br>
          pType: type of the data (char*). It is one of the registered types in <a href="dragndrop.htm#DROPTYPES">DROPTYPES</a>.<br>
          pData: content data received in the drop operation.<br>
          size: data size in bytes.<br>
          x, y: cursor position relative to the top-left corner of the element.
          <br>
          <a name=DROPMOTION_CB></a>
         </td>
        </tr>
        <tr>
         <td valign=top>
          DROPMOTION_CB
         </td>
         <td>
          Notifies destination about drag pointer motion.<br>
          The only drop callback that is optional.<br>
          It is called when the mouse moves over any valid drop site.
          <br>
          <br>
          function dropmotion_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> x, y, <a href="atom.htm">atom</a> pStatus)<br>
          ih: identifier of the element that activated the event.<br>
          x, y: position in the canvas where the event has occurred, in pixels.<br>
          pStatus: status (char*) of mouse buttons and certain keyboard keys at the moment the event was generated.<br>
          The same macros used for <a href="callbacks.htm#BUTTON_CB">BUTTON_CB</a> can be used for this status.
          <br>
          <a name=NOTES></a>
         </td>
        </tr>
       </table>
       <br>
        &nbsp;
       <br>
       <b>Notes</b>
       <br>
       <br>
        Drag and Drop support can be set independently. A control can have drop without drag support and vice-versa.
       <br>
       <br>
        Here are some common Drag&Drop types defined by existing applications:
       <br>
       <br>
        "TEXT" used for regular text without formatting. Automatically translated to CF_TEXT in Windows.<br>
        content MIME types, like "text/uri-list", "text/html", "image/png", "image/jpeg", "image/bmp" and "image/gif".<br>
        "UTF8_STRING" in GTK and "UNICODETEXT" in Windows.<br>
        "COMPOUND_TEXT" in GTK and "Rich Text Format" in Windows.<br>
        "BITMAP" and "DIB" in Windows. Automatically translated to CF_BITMAP and CF_DIB.
       <br>
       <br>
       <b>Examples</b>
       <br>
       <br>
        demo/pGUI/list2.exw
       <br>
        &nbsp;
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
