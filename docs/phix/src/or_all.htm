<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">or_all</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a> res = or_all(<a href="object.htm">object</a> s)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Apply <a href="or_bits.htm">or_bits</a> to all elements of a <a href="sequence.htm">sequence</a>.
            <br>
            <br>
            s: an <a href="atom.htm">atom</a>, or a <a href="sequence.htm">sequence</a>, all elements of which are processed.
            <br>
            <br>
            Returns an atom, either atom s unaltered or the result of applying <a href="or_bits.htm">or_bits</a>() to all elements of s.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This function may be applied to an <a href="atom.htm">atom</a> or to all elements of a <a href="sequence.htm">sequence</a>. <br>
            In the latter case it performs <a href="or_bits.htm">or_bits</a>() operations repeatedly.
            <br>
            <br>
            Many low-level operations, especially machine-specific API, require a bit field, whereby several options are represented 
            by bit settings in a single parameter, rather than being passed as a much larger number of separate parameters.
            <br>
            <br>
            As long as all bit settings are unique, and no elements contain fractions that would spill over or otherwise skew the results, 
            the result will be the same as simply adding the elements together, however if any bits are duplicated the result of adding 
            them would be completely wrong, whereas or_all handles that properly.
            <br>
            <br>
            <b>Compatibility Note</b>: This is <b><i>not</i></b> recursive, unlike the OpenEuphoria version of this routine, but will
            instead trigger an error, quite deliberately, should any nested sub-sequences be found.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
or_all(0b0010)                          -- 0b0000010
or_all({0b0010, 0b1000, 0b0100000})     -- 0b0101010
fhandle = c_func(xCreateFile,{name,or_all(GENERIC_READ,GENERIC_WRITE),...)
</eucode-->
<pre>
<font color="#000000"></font><font color="#5E005E">or_all</font><font color="#0000FF">(</font><font color="#000000">0b0010</font><font color="#0000FF">)                         </font><font color="#000080"><i> -- 0b0000010
</i></font><font color="#5E005E">or_all</font><font color="#0000FF">(</font><font color="#800000">{</font><font color="#000000">0b0010</font><font color="#0000FF">,</font><font color="#000000"> 0b1000</font><font color="#0000FF">,</font><font color="#000000"> 0b0100000</font><font color="#800000">}</font><font color="#0000FF">)    </font><font color="#000080"><i> -- 0b0101010
</i></font><font color="#000000">fhandle</font><font color="#0000FF"> =</font><font color="#5E005E"> c_func</font><font color="#0000FF">(</font><font color="#000000">xCreateFile</font><font color="#0000FF">,</font><font color="#800000">{</font><font color="#000000">name</font><font color="#0000FF">,</font><font color="#5E005E">or_all</font><font color="#800080">(</font><font color="#000000">GENERIC_READ</font><font color="#0000FF">,</font><font color="#000000">GENERIC_WRITE</font><font color="#800080">)</font><font color="#0000FF">,...</font><font color="#800000">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\porall.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="or_bits.htm">or_bits</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
