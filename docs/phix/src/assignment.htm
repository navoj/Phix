<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">Assignment</h1>
      <div id="mainSection">
         An
        <font color="#030303">
         <b>assignment statement</b>
        </font> assigns the value of an expression to a simple
         variable, or to a subscript or slice of a variable. e.g.
       <br>

<!--eucode>
    x = a + b
    y[i] = y[i] + 1
    y[i..j] = {1, 2, 3}
</eucode-->
<pre>
<font color="#000000">    x</font><font color="#0000FF"> =</font><font color="#000000"> a</font><font color="#0000FF"> +</font><font color="#000000"> b
    y</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">] =</font><font color="#000000"> y</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">] +</font><font color="#000000"> 1
    y</font><font color="#0000FF">[</font><font color="#000000">i</font><font color="#0000FF">..</font><font color="#000000">j</font><font color="#0000FF">] = {</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#000000"> 2</font><font color="#0000FF">,</font><font color="#000000"> 3</font><font color="#0000FF">}</font>
</pre>
         The previous value of the variable, or element(s) of the subscripted or
         sliced variable are discarded. For example, suppose x was a 1000-element
         <a href="sequence.htm">sequence</a> that we had initialized with:
       <br>

<!--eucode>
    object x
    x = repeat(0, 1000)  -- a sequence of 1000 zeros
</eucode-->
<pre>
<font color="#000000"></font><font color="#004080">    object</font><font color="#000000"> x
    x</font><font color="#0000FF"> =</font><font color="#7060A8"> repeat</font><font color="#0000FF">(</font><font color="#000000">0</font><font color="#0000FF">,</font><font color="#000000"> 1000</font><font color="#0000FF">) </font><font color="#000080"><i> -- a sequence of 1000 zeros</i></font>
</pre>
       and then later we assigned an atom to x with:

<!--eucode>
    x = 7
</eucode-->
<pre>
<font color="#000000">    x</font><font color="#0000FF"> =</font><font color="#000000"> 7</font>
</pre>
        This is perfectly legal since x is declared as an <a href="object.htm">object</a>.
        The previous value of x, namely the 1000-element <a href="sequence.htm">sequence</a>, would simply disappear. 
        Actually, the space consumed by the 1000-element <a href="sequence.htm">sequence</a> will be automatically
        recycled due to phix&rsquo;s dynamic storage allocation.
       <br>
       <br>
         Note that the equals symbol '=' is used for both assignment and for
        <a href="relops.htm">equality testing</a>.
         There is never any confusion because an assignment in phix is
         a statement only, it cannot be used as an expression (as in C).
         Alternatively and optionally you can explicitly use ":=" for assignment 
         and "==" for equality testing.
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
