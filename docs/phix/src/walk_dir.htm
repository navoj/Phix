<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">walk_dir</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="object.htm">object</a> res = walk_dir(<a href="sequence.htm">sequence</a> st, 
                                                         <a href="integer.htm">integer</a> rid, 
                                                         <a href="integer.htm#bool">bool</a> subdirs=false, 
                                                         <a href="integer.htm">integer</a> my_dir=DEFAULT)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            This routine allows each file in directory to be processed one at a time.
            <br>
            <br>
            st: the starting/root directory path.<br>
            rid: the <a href="routine_id.htm">routine_id</a>() of a function that you supply.
            subdirs: if non-zero (true), process subdirectories recursively.
            my_dir: [optional] the <a href="routine_id.htm">routine_id</a>() of a sorting function that you supply.
            <br>
            <br>
            walk_dir() calls rid once for each file [and optionally the contents of each subdirectory] in st.
          <br>
          <br>
            The routine that you supply (rid) should accept the path name and
           <a href="dir.htm#dir_entry">dir() entry</a> for each file and subdirectory. 
            It should return 0 to keep going, or non-zero to stop walk_dir().
          <br>
          <br>
            Returns: 
            0: all files were processed,<br>
            W_BAD_PATH (-1): invalid directory,<br>
            anything else: any non-zero result from rid, which also terminates the walking process.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>
            This mechanism allows you to write a simple function that handles
            one file at a time, while walk_dir() handles the process of 
            [recursively] walking through all the files and subdirectories.
          <br>
          <br>
            The path supplied to walk_dir() must not contain wildcards (* or ?). <br>
            Only a single directory (and its subdirectories) can be searched at a time.
          <br>
          <br>
            By default, the files and subdirectories are visited in alphabetical order. 
            To use a different order, set the final my_dir parameter to the 
            <a href="routine_id.htm">routine_id</a>() of a function that sorts the directory 
            entries differently, see the default_dir() function in builtins\file.e for
            inspiration.
          <br>
          <br>
            Note that when recursing subdirectories, this routine ignores any W_BAD_PATH which 
            may have occurred as a result of another process deleting things. Should rid return 
            W_BAD_PATH, it will not necessarily terminate the walking process, although it will
            cease iterating though the list of files in the directory currently being processed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example:</b>
         </td>
         <td>
<!--eucode>
function look_at(sequence path_name, sequence entry)
-- this function accepts two sequences as arguments
    printf(1, "%s\\%s: %d\n",
           {path_name, entry[D_NAME], entry[D_SIZE]})
    return 0 -- keep going
end function
exit_code = walk_dir("C:\\MYFILES", routine_id("look_at"), TRUE)
</eucode-->
<pre>
<font color="#000000"></font><font color="#008080">function</font><font color="#000000"> look_at</font><font color="#0000FF">(</font><font color="#004080">sequence</font><font color="#000000"> path_name</font><font color="#0000FF">,</font><font color="#004080"> sequence</font><font color="#FF0000"> entry</font><font color="#0000FF">)
</font><font color="#000080"><i>-- this function accepts two sequences as arguments
</i></font><font color="#5E005E">    printf</font><font color="#0000FF">(</font><font color="#000000">1</font><font color="#0000FF">,</font><font color="#008000"> "%s\\%s: %d\n"</font><font color="#0000FF">,
</font><font color="#800000">           {</font><font color="#000000">path_name</font><font color="#0000FF">,</font><font color="#FF0000"> entry</font><font color="#800080">[</font><font color="#004600">D_NAME</font><font color="#800080">]</font><font color="#0000FF">,</font><font color="#FF0000"> entry</font><font color="#800080">[</font><font color="#004600">D_SIZE</font><font color="#800080">]</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#008080">    return</font><font color="#000000"> 0</font><font color="#000080"><i> -- keep going
</i></font><font color="#008080">end function
</font><font color="#000000">exit_code</font><font color="#0000FF"> =</font><font color="#5E005E"> walk_dir</font><font color="#0000FF">(</font><font color="#008000">"C:\\MYFILES"</font><font color="#0000FF">,</font><font color="#5E005E"> routine_id</font><font color="#800000">(</font><font color="#008000">"look_at"</font><font color="#800000">)</font><font color="#0000FF">,</font><font color="#004600"> TRUE</font><font color="#0000FF">)</font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example Program:</b>
         </td>
         <td>
<!--DEV (bin/search.ex) -->
          <font color="#5500FF">
           <b>euphoria\bin\search.ex</b>
          </font>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            See builtins\file.e (an autoinclude) for details of the actual implementation.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="routine_id.htm">routine_id</a>,
          <a href="dir.htm">dir</a>,
          <a href="current_dir.htm">current_dir</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
