<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">IupGLToggle</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
            include pGUI.e
            <br>
            <br>
            <a href="Ihandle.htm">Ihandle</a> ih = IupGLToggle(<a href="nullable_string.htm">nullable_string</a> title=NULL, 
            [[<a href="nullable_string.htm">nullable_string</a> action=NULL,] <a href="Icallback.htm">cbfunc</a> func=NULL,] 
            <a href="string.htm">string</a> attributes="", <a href="sequence.htm">sequence</a> data={})
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Creates an embedded OpenGL toggle interface element. <br>
            It is a two-state (on/off) button that, when selected, generates an action that activates a function in the associated application. <br>
            Its visual representation can contain a text and/or an image. <br>
            It inherits from IupGLButton. It exists only inside an <a href="IupGLCanvasBox.htm">IupGLCanvasBox</a>.
            <br>
            <br>
            title: Text to be shown on the toggle. It can be NULL. It will set the <a href="IupToggle.htm#TITLE">TITLE</a> attribute.<br>
            action: Name of the action specified by func, defaults to "ACTION", ignored if func is NULL.<br>
            func: a callback address, usually specified as <a href="Icallback.htm">Icallback</a>(<i>"name"</i>).<br>
            For more information on the attributes and data parameters see <a href="IupSetAttributes.htm">IupSetAttributes</a>.<br>
            This is a <a href="paranormal.htm">paranormalised function</a>.
            <br>
            <br>
            Returns: the identifier of the created element.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Notes:</b>
         </td>
         <td>
            IupGLToggle visual is the same as a IupGLButton. There is no check mark.
            <br>
            <br>
            To build a set of mutual exclusive toggles, insert them in a IupRadio container. <br>
            They must be inserted before creation, and their behavior can not be changed. 
            <br>
            <br>
            A toggle that is a child of an IupRadio automatically receives a name when its is mapped into the native system. (since 3.16)
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Attributes:</b>
         </td>
         <td>
            The IupGLToggle element handles all attributes defined for the IupGLButton control, and consequently for the 
            <a href="IupGLLabel.htm">IupGLLabel</a> control and for the <a href="IupGLSubCanvas.htm">IupGLSubCanvas</a> control too.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CHECKMARK
         </td>
         <td>
            (non inheritable) Enables the check mark. Default: NO. <br>
            When enabled the border and the background are not drawn, and a check mark box is drawn at left or right, according to RIGHTBUTTON.
         </td>
        </tr>
        <tr>
         <td valign=top>
          CHECKMARKWIDTH
         </td>
         <td>
            (non inheritable) Size of the check mark. Default: 14.
         </td>
        </tr>
        <tr>
         <td valign=top>
          RADIO
         </td>
         <td>
            (read-only) returns if the toggle is inside a radio. Can be "YES" or "NO". <br>
            Valid only after the element is mapped, before returns NULL.
         </td>
        </tr>
        <tr>
         <td valign=top>
          RIGHTBUTTON
         </td>
         <td>
            (non inheritable) place the check button at the right of the text. Can be "YES" or "NO". Default: "NO".
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUE
         </td>
         <td>
            (non inheritable) Toggle&rsquo;s state. <br>
            Values can be "ON", "OFF" or "TOGGLE". Default: "OFF". The TOGGLE option will invert the current state.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>Callbacks</b>
         </td>
         <td>
            The IupGLToggle element handles all callbacks defined for the <a href="IupGLSubCanvas.htm">IupGLSubCanvas</a> control.
         </td>
        </tr>

        <tr>
         <td valign=top>
          ACTION
         </td>
         <td>
            Action generated when the toggle&rsquo;s state (on/off) was changed. The callback also receives the toggle&rsquo;s state.
            <br>
            <br>
            function action_cb(<a href="Ihandle.htm">Ihandle</a> ih, <a href="integer.htm">integer</a> state)<br>
            ih: identifier of the element that activated the event.<br>
            state: 1 if the toggle&rsquo;s state was set to on; 0 if it was set to off.
            <br>
            <br>
            Returns: <a href="callbacks.htm#IUP_CLOSE">IUP_CLOSE</a> will be processed.
         </td>
        </tr>
        <tr>
         <td valign=top>
          VALUECHANGED_CB
         </td>
         <td>
            Called after the value was interactively changed by the user. Called after the ACTION callback, but under the same context.
            <br>
            <br>
            function valuechanged_cb(<a href="Ihandle.htm">Ihandle</a> ih)<br>
            ih: identifier of the element that activated the event.
         </td>
        </tr>

        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="IupImage.htm">IupImage</a>,
          <a href="IupGLButton.htm">IupGLButton</a>,
          <a href="IupGLLabel.htm">IupGLLabel</a>,
          <a href="IupRadio.htm">IupRadio</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
