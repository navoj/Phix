<head>
 <body>
  <toc>
   <these>
    <get>
     <stripped>
      <h1 class="title">or_bits</h1>
      <div id="mainSection">
       <table>
        <col style="width: 5%"/>
        <tr>
         <td valign=top>
          <b>Definition:</b>
         </td>
         <td>
          <a href="atom.htm">atom</a> x3 = or_bits(<a href="atom.htm">atom</a> x1, <a href="atom.htm">atom</a> x2)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Description:</b>
         </td>
         <td>
            Perform the logical OR operation on corresponding bits in x1 and x2. <br>
            A bit in x3 will be 1 when a corresponding bit in either x1 or x2 is 1.
            <br>
            <br>
            Commonly used to set bits in a bit-field (see example 1).
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Comments:</b>
         </td>
         <td>This function may be applied to an <a href="atom.htm">atom</a> or sq_or_bits() to all elements
             of a <a href="sequence.htm">sequence</a>. The rules for
          <a href="seqops.htm">sequence operations</a> apply.
          <br>
          <br>
            The arguments must be representable as 32-bit numbers,
             either signed or unsigned.
          <br>
          <br>
            If you intend to manipulate full 32-bit values, you should declare your variables as 
            <a href="atom.htm">atom</a>, rather than <a href="integer.htm">integer</a>. 
            The integer type is limited to 31-bits.
          <br>
          <br>
            Results are treated as signed numbers. They will be
             negative when the highest-order bit is 1.
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 1:</b>
         </td>
         <td>
<!--eucode>
flags = or_bits(flags,XPAD) -- apply width padding (sometime later)
</eucode-->
<pre>
<font color="#000000">flags</font><font color="#0000FF"> =</font><font color="#7060A8"> or_bits</font><font color="#0000FF">(</font><font color="#000000">flags</font><font color="#0000FF">,</font><font color="#000000">XPAD</font><font color="#0000FF">)</font><font color="#000080"><i> -- apply width padding (sometime later)</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 2:</b>
         </td>
         <td>
<!--eucode>
a = or_bits(#0F0F0000, #12345678)
-- a is #1F3F5678
</eucode-->
<pre>
<font color="#000000">a</font><font color="#0000FF"> =</font><font color="#7060A8"> or_bits</font><font color="#0000FF">(</font><font color="#000000">#0F0F0000</font><font color="#0000FF">,</font><font color="#000000"> #12345678</font><font color="#0000FF">)
</font><font color="#000080"><i>-- a is #1F3F5678</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Example 3:</b>
         </td>
         <td>
<!--eucode>
s = sq_or_bits(#FF, {#123456, #876543, #2211})
-- s is {#1234FF, #8765FF, #22FF}
</eucode-->
<pre>
<font color="#000000">s</font><font color="#0000FF"> =</font><font color="#5E005E"> sq_or_bits</font><font color="#0000FF">(</font><font color="#000000">#FF</font><font color="#0000FF">,</font><font color="#800000"> {</font><font color="#000000">#123456</font><font color="#0000FF">,</font><font color="#000000"> #876543</font><font color="#0000FF">,</font><font color="#000000"> #2211</font><font color="#800000">}</font><font color="#0000FF">)
</font><font color="#000080"><i>-- s is {#1234FF, #8765FF, #22FF}</i></font>
</pre>
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>Implementation:</b>
         </td>
         <td>
            via :%opOrBits in builtins\VM\pMath.e (an autoinclude)
         </td>
        </tr>
        <tr>
         <td valign=top>
          <b>See Also:</b>
         </td>
         <td>
          <a href="and_bits.htm">and_bits</a>,
          <a href="xor_bits.htm">xor_bits</a>,
          <a href="not_bits.htm">not_bits</a>,
          <a href="int_to_bits.htm">int_to_bits</a>
         </td>
        </tr>
       </table>
       <br>
       <br>
      </div>
     </stripped>
    </get>
   </these>
  </toc>
 </body>
</head>
